<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>换了个证书提供商</title>
    <link href="/2024/06/30/17%E6%8D%A2%E4%BA%86%E4%B8%AA%E8%AF%81%E4%B9%A6%E6%8F%90%E4%BE%9B%E5%95%86-240629/"/>
    <url>/2024/06/30/17%E6%8D%A2%E4%BA%86%E4%B8%AA%E8%AF%81%E4%B9%A6%E6%8F%90%E4%BE%9B%E5%95%86-240629/</url>
    
    <content type="html"><![CDATA[<p><img src="https://letsencrypt.org/images/letsencrypt-logo-horizontal.svg" alt="封面"></p><h1 id="TL-DR"><a href="#TL-DR" class="headerlink" title="TL;DR"></a>TL;DR</h1><p>前两天刚上地铁准备签个证书，说服务器在维护，要下地铁了，说维护好了，有点离谱。这下好，<code>zerossl</code>不给我免费签证书了，不得不换提供商到<code>let&#39;s encrypt</code>。<del><em>没想到这东西这么简单，比zerossl好玩多了</em></del></p><h1 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a>前置条件</h1><p>把你的<code>your.domain</code>域名解析到你的ip上，放通80端口，安装Python3环境就行。</p><blockquote><p>⚠注意：截止写本文，不支持签发泛域名证书和ip证书。</p></blockquote><h1 id="开签！"><a href="#开签！" class="headerlink" title="开签！"></a>开签！</h1><p>装个依赖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">pip3 install certbot -i https://pypi.tuna.tsinghua.edu.cn/simple<br></code></pre></td></tr></table></figure><p>正是开签</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">certbot certonly --standalone -d your.domain<br></code></pre></td></tr></table></figure><p>接下来按照屏幕提示找到证书存放路径就可以拿去用了。</p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>博客搬家啦</title>
    <link href="/2024/06/20/16%E5%8D%9A%E5%AE%A2%E6%90%AC%E5%AE%B6%E5%95%A6-240620/"/>
    <url>/2024/06/20/16%E5%8D%9A%E5%AE%A2%E6%90%AC%E5%AE%B6%E5%95%A6-240620/</url>
    
    <content type="html"><![CDATA[<p><img src="https://hexo.io/logo.svg" alt="封面"></p><h1 id="TL-DR"><a href="#TL-DR" class="headerlink" title="TL;DR"></a>TL;DR</h1><p>之前的博客，是用typecho部署的。typecho是个很优秀的博客框架，但我把他放在自己的小服务器上，并且套了CloudFlare，访问速度十分的慢。这次我决定将其迁移到<code>Hexo</code>框架上，并迁移到GithubPages。</p><h1 id="特效JS怎么办"><a href="#特效JS怎么办" class="headerlink" title="特效JS怎么办"></a>特效JS怎么办</h1><p>我把每个用到的<code>script</code>标签都单独独立成<code>js</code>文件了，并在<code>_config.yml</code>中进行了引用。本站源码<a href="https://github.com/CoolestEnoch/CoolestEnoch/tree/pages-blog-source">在这</a>。</p><h1 id="怎么搭建的"><a href="#怎么搭建的" class="headerlink" title="怎么搭建的"></a>怎么搭建的</h1><blockquote><p>⚠️注意: ***我的开发环境是<code>Arch Linux</code>***，先<code>sudo pacman -Syu</code>系统更新一下，要不然nodejs安装软件包的时候可能会出错。</p></blockquote><h2 id="安装nodejs包管理器"><a href="#安装nodejs包管理器" class="headerlink" title="安装nodejs包管理器"></a>安装nodejs包管理器</h2><p>安装<code>npm</code>就行，它会把<code>nodejs</code>一起送你。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo pacman -S npm<br></code></pre></td></tr></table></figure><p>修改<code>npm</code>默认目录，要不然不用root操作的时候会提示没有权限。<br>新建一个文件夹，用来存你的<code>npm packages</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkdir ~/.npm-global<br></code></pre></td></tr></table></figure><p>配置<code>npm</code>以使用新的目录路径：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm config set prefix &#x27;~/.npm-global&#x27;<br></code></pre></td></tr></table></figure><p>将这段环境变量添加到系统：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">export PATH=~/.npm-global/bin:$PATH<br></code></pre></td></tr></table></figure><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装<code>Hexo</code></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install hexo-cli -g<br>hexo init /path/to/blog/folder # 这个是你博客的工作目录<br>cd /path/to/blog/folder<br>npm install<br></code></pre></td></tr></table></figure><h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><p>我用的是<a href="https://github.com/fluid-dev/hexo-theme-fluid"><code>Fluid</code>主题</a>。先进行下载：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git clone --depth=1 https://github.com/fluid-dev/hexo-theme-fluid.git ./themes/fluid<br></code></pre></td></tr></table></figure><p>修改博客工作目录根目录下的<code>_config.yml</code>里:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">theme:</span> <span class="hljs-string">fluid</span><br><span class="hljs-attr">language:</span> <span class="hljs-string">zh-CN</span><br></code></pre></td></tr></table></figure><p>这个主题需要手动创建一下关于页，并按实际情况去关于页的<code>index.md</code>里修改关于内容就行。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo new page about<br></code></pre></td></tr></table></figure><p>然后就是根据<code>themes/fluid</code>里的提示，按需更改博客信息了。</p><h2 id="开始写文"><a href="#开始写文" class="headerlink" title="开始写文"></a>开始写文</h2><p>在<code>source/_posts</code>中进行写作，markdown文件名不需要遵守日期之类的格式标准，只需在文件开头声明即可：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs markdown">---<br>title: 文章标题<br>category: 分类<br>date: YYYY-MM-DD HH:mm:SS<br><span class="hljs-section">index<span class="hljs-emphasis">_img: 外面看到的封面图</span></span><br><span class="hljs-emphasis"><span class="hljs-section">---</span></span><br></code></pre></td></tr></table></figure><p>写好后，测试一下:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo server<br></code></pre></td></tr></table></figure><p>浏览器打开localhost的4000端口看看是不是自己想要的样子～</p><h1 id="上传博客"><a href="#上传博客" class="headerlink" title="上传博客"></a>上传博客</h1><p>得先在博客工作目录里安装<code>hexo-deployer-git</code>，这样就可以直接部署到github pages上了:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><p>然后在博客工作目录根目录下的<code>_config.yml</code>里，按照实际情况修改以下字段:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">deploy:</span><br><span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br><span class="hljs-attr">repository:</span> <span class="hljs-string">git@github.com:YourUserName/YourRepoName.git</span><br><span class="hljs-attr">branch:</span> <span class="hljs-string">YourPageBranch</span><br></code></pre></td></tr></table></figure><p>然后就是，上传！</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy<br></code></pre></td></tr></table></figure><p>这个上传会把工作目录下的<code>.deploy_git</code>文件夹内的内容传上去。如果你想要在存放github pages静态网页的目录里存放单独的文件，那么在工作目录下的<code>source</code>文件夹里添加就行。比如我存了一个<code>CNAME</code>文件，直接新建，然后丢进去就行。</p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>macOS安装Homebrew记录</title>
    <link href="/2024/06/11/15macOS%E5%AE%89%E8%A3%85Homebrew%E8%AE%B0%E5%BD%95-240611/"/>
    <url>/2024/06/11/15macOS%E5%AE%89%E8%A3%85Homebrew%E8%AE%B0%E5%BD%95-240611/</url>
    
    <content type="html"><![CDATA[<p><img src="https://brew.sh/assets/img/homebrew.svg" alt="封面"></p><p>我是先装了个<code>oh-my-zsh</code>然后进行操作的，安装步骤参考上一篇文章，和Linux下的安装过程可以说是几乎一模一样。</p><p>先换源：添加环境变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">export HOMEBREW_INSTALL_FROM_API=1<br>export HOMEBREW_API_DOMAIN=&quot;https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/api&quot;<br>export HOMEBREW_BOTTLE_DOMAIN=&quot;https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles&quot;<br>export HOMEBREW_BREW_GIT_REMOTE=&quot;https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git&quot;<br>export HOMEBREW_CORE_GIT_REMOTE=&quot;https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git&quot;<br></code></pre></td></tr></table></figure><p>然后通过清华源进行安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">git clone --depth=1 https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/install.git brew-install<br>./brew-install/install.sh<br></code></pre></td></tr></table></figure><p>然后<code>brew-install</code>文件夹可以删除了，用不上了。</p><p>后续如果要用清华源来下载的话，把上面的环境变量添加到<code>.zshrc</code>里就行了。</p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>XPosed模块开发踩坑</title>
    <link href="/2024/03/30/14-XPosed%E6%A8%A1%E5%9D%97%E5%BC%80%E5%8F%91%E8%B8%A9%E5%9D%91-240330/"/>
    <url>/2024/03/30/14-XPosed%E6%A8%A1%E5%9D%97%E5%BC%80%E5%8F%91%E8%B8%A9%E5%9D%91-240330/</url>
    
    <content type="html"><![CDATA[<p><img src="https://devsjournal.com/wp-content/uploads/2015/12/Download-Xposed-Framework-and-Installer-for-Android.jpg" alt="img"><br>(图源<a href="https://devsjournal.com/download-install-xposed-installer-framework-android.html">Download Xposed Framework and Installer</a>)</p><h1 id="tl-dr"><a href="#tl-dr" class="headerlink" title="tl;dr"></a>tl;dr</h1><p>为了在毕设里加入语音控制，计划对系统语音助手进行动态注入以实现语音控制，技术选型为<code>XPosed</code>。<del><em>谁家自动化毕设代码要注入别的进程啊🤣👉</em></del></p><h1 id="XPosed模块开发环境搭建"><a href="#XPosed模块开发环境搭建" class="headerlink" title="XPosed模块开发环境搭建"></a>XPosed模块开发环境搭建</h1><p>本文选用的是基于<a href="https://github.com/KyuubiRan/EzXHelper"><code>EzXHelper</code></a> + <a href="https://github.com/LuckyPray/DexKit"><code>DexKit</code></a>的开发环境。</p><p>一切的首先：Android studio创建工程。<br>在<code>build.gradle.kts(app)</code>中添加以下依赖项：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-comment">// EzX Helper  </span><br>implementation(<span class="hljs-string">&quot;com.github.kyuubiran:EzXHelper:1.0.3&quot;</span>)  <br>compileOnly(<span class="hljs-string">&quot;de.robv.android.xposed:api:82&quot;</span>)  <br>  <br><span class="hljs-comment">// Dex Kit  </span><br>implementation(<span class="hljs-string">&quot;org.luckypray:dexkit:2.0.0&quot;</span>)<br></code></pre></td></tr></table></figure><p>在<code>settings.gradle.kts</code>中的<code>dependencyResolutionManagement</code>添加以下两个仓库：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs kotlin">maven(url = <span class="hljs-string">&quot;https://jitpack.io&quot;</span>)  <br>maven(url = <span class="hljs-string">&quot;https://api.xposed.info&quot;</span>)<br></code></pre></td></tr></table></figure><p>在<code>AndroidManifest.xml</code>中的<code>application</code>节点中添加以下键值以能在<code>LSPosed</code>中显示模块信息：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">meta-data</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;xposedmodule&quot;</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">android:value</span>=<span class="hljs-string">&quot;true&quot;</span> /&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">meta-data</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;xposeddescription&quot;</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">android:value</span>=<span class="hljs-string">&quot;@string/xposeddescription&quot;</span> /&gt;</span>  <span class="hljs-comment">&lt;!--这是在模块名称下面的小字--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta-data</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;xposedminversion&quot;</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">android:value</span>=<span class="hljs-string">&quot;93&quot;</span> /&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">meta-data</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;xposedscope&quot;</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">android:resource</span>=<span class="hljs-string">&quot;@array/xposed_scope&quot;</span> /&gt;</span><span class="hljs-comment">&lt;!--作用域--&gt;</span><br></code></pre></td></tr></table></figure><p>其中作用域的xml文件这么填(一行一个包名)：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">resources</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">string-array</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;xposed_scope&quot;</span>&gt;</span>  <br>       <span class="hljs-tag">&lt;<span class="hljs-name">item</span>&gt;</span>com.android.launcher3<span class="hljs-tag">&lt;/<span class="hljs-name">item</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">string-array</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">resources</span>&gt;</span><br></code></pre></td></tr></table></figure><p>创建xposed的主hook类(我创建在<code>com.example.package</code>下，叫<code>HookEntry.kt</code>)：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-keyword">class</span> <span class="hljs-title class_">HookEntry</span> : <span class="hljs-type">IXposedHookLoadPackage</span>, <span class="hljs-type">IXposedHookZygoteInit</span> &#123;  <br>  <br>    <span class="hljs-keyword">override</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">initZygote</span><span class="hljs-params">(startupParam: <span class="hljs-type">IXposedHookZygoteInit</span>.<span class="hljs-type">StartupParam</span>)</span></span> &#123;  <br>       EzXHelperInit.initZygote(startupParam)  <br>    &#125;  <br>  <br>    <span class="hljs-keyword">override</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">handleLoadPackage</span><span class="hljs-params">(lpparam: <span class="hljs-type">XC_LoadPackage</span>.<span class="hljs-type">LoadPackageParam</span>)</span></span> &#123;  <br>       <span class="hljs-keyword">val</span> packageName: String = lpparam.packageName  <br>       EzXHelperInit.initHandleLoadPackage(lpparam)  <br>  <br>       <span class="hljs-keyword">when</span> (packageName) &#123;  <br>          <span class="hljs-comment">// 修改模块激活状态, 这里需要你的MainActivity下有一个叫isActive的函数, 并且是调用就直接返回false的。在激活模块后，下面的hook代码会让它返回true以实现让它知道模块激活了。</span><br>          BuildConfig.APPLICATION_ID -&gt; &#123;  <br>             findMethod(<span class="hljs-string">&quot;com.example.package.MainActivity&quot;</span>) &#123;  <br>                name == <span class="hljs-string">&quot;isActive&quot;</span> &amp;&amp; returnType == <span class="hljs-built_in">Boolean</span>::<span class="hljs-keyword">class</span>.java  <br>             &#125;.hookBefore &#123;  <br>                it.result = <span class="hljs-literal">true</span>  <br>             &#125;  <br>          &#125;  <br>          <span class="hljs-string">&quot;target.package.name&quot;</span> -&gt; &#123;<span class="hljs-comment">/* your hook code here */</span> &#125;  <br>       &#125;  <br>    &#125;  <br>&#125;<br></code></pre></td></tr></table></figure><p>然后创建<code>assets</code>文件夹，里面创建<code>xposed_init</code>文件，写入上面那个类文件的包名:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">com.example.package.HookEntry<br></code></pre></td></tr></table></figure><blockquote><p>这里不需要管扩展名，不用像在<code>java</code>里调用<code>kotlin</code>需要写<code>HookEntryKt.xxx</code>一样</p></blockquote><h1 id="提示duplicated-class怎么办"><a href="#提示duplicated-class怎么办" class="headerlink" title="提示duplicated class怎么办"></a>提示<code>duplicated class</code>怎么办</h1><p>在<code>gradle.properties</code>里确保添加了以下两行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs prop">android.useAndroidX=true<br>android.enableJetifier=true<br></code></pre></td></tr></table></figure><h1 id="LSPosed提示关闭部署优化，怎么操作"><a href="#LSPosed提示关闭部署优化，怎么操作" class="headerlink" title="LSPosed提示关闭部署优化，怎么操作"></a><code>LSPosed</code>提示关闭<code>部署优化</code>，怎么操作</h1><p>Android studio左上角三横 - <code>Run</code> - <code>Edit Configurations...</code> - 取消勾选<code>Always install with package manager</code>，保存！</p>]]></content>
    
    
    <categories>
      
      <category>Android</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>MQTT开发杂记</title>
    <link href="/2024/03/18/13-MQTT%E5%BC%80%E5%8F%91%E6%9D%82%E8%AE%B0-240318/"/>
    <url>/2024/03/18/13-MQTT%E5%BC%80%E5%8F%91%E6%9D%82%E8%AE%B0-240318/</url>
    
    <content type="html"><![CDATA[<p><img src="https://mosquitto.org/images/mosquitto-text-side-28.png" alt="封面"></p><h1 id="tl-dr"><a href="#tl-dr" class="headerlink" title="tl;dr"></a>tl;dr</h1><p>由于毕设需要用到<code>mqtt</code>网络协议栈，<del>但这个协议我一直没用过，</del>所以打算写这篇博客来记录一下搭建过程。</p><h1 id="MQTT的工作流程"><a href="#MQTT的工作流程" class="headerlink" title="MQTT的工作流程"></a><code>MQTT</code>的工作流程</h1><p>这是一个需要中心化服务器的协议。中心服务器通常称为<code>broker</code>，<br><strong>MQTT（Message Queuing Telemetry Transport）</strong> 是一种轻量级的、基于发布&#x2F;订阅模式的通信协议，常用于物联网设备之间的通信<del><em>废话</em></del>。<br>其工作流程如下：</p><ol><li><strong>连接建立阶段</strong>：<ul><li>客户端通过<code>TCP</code>连接到<code>MQTT</code>代理服务器（通常称为<code>MQTT Broker</code>）。</li><li>客户端发送<code>CONNECT</code>报文，包含客户端ID、用户名、密码等信息。</li><li>服务器响应<code>CONNACK</code>报文，表示连接建立成功或失败。</li></ul></li><li><strong>订阅主题</strong>：<ul><li>客户端发送<code>SUBSCRIBE</code>报文，指定感兴趣的主题和<code>QoS</code>级别。</li><li>服务器记录客户端的订阅关系。</li></ul></li><li><strong>发布消息</strong>：<ul><li>客户端发送<code>PUBLISH</code>报文，包含主题和消息内容。</li><li>服务器将消息传送给所有订阅了相应主题的客户端。</li></ul></li><li><strong>接收消息</strong>：<ul><li>客户端接收到服务器发送的<code>PUBLISH</code>报文，获取消息内容。</li></ul></li><li><strong>取消订阅</strong>：<ul><li>客户端发送<code>UNSUBSCRIBE</code>报文，取消对某个主题的订阅。</li></ul></li><li><strong>断开连接</strong>：<ul><li>客户端或服务器可以发送<code>DISCONNECT</code>报文，正常断开连接。</li></ul></li></ol><p>当有n个客户端订阅了同一个主题<code>we_are_ikun</code>，这n个人谁都可以<code>publish</code>一条包含自定义内容的报文<code>jntm</code>，随后经由<code>broker</code>，会将该消息转发给<em><strong>包括</strong></em>他的所有订阅了<code>we_are_ikun</code>的终端上。此时，其他终端里任何一个人也可以再<code>publish</code>一条包含自定义消息的报文<code>ni gan ma haha aiyo amagi</code>，该报文会经由<code>broker</code>再转发给包括他的所有终端。</p><blockquote><p>是不是很像一个聊天室？对没错！就想象是一群<del><em>小黑子</em></del> ikun呆在同一个房间里一起谈论哥哥的篮球和背带一样，A说的话能被房间里其他人听到，B说的话也可以被其他人听到。</p></blockquote><h1 id="服务器搭建"><a href="#服务器搭建" class="headerlink" title="服务器搭建"></a>服务器搭建</h1><p>我使用的测试服务器是运行在<code>VMware</code>中的<code>Alpine Linux</code>，连接模式选择桥接，以便可以和<code>esp8266</code>在同一个子网下。<br>我使用的客户端有两台，一台是上述虚拟机，一台是我的安卓手机，使用<code>termux</code>。<br>在装好了系统的虚拟机中安装好<code>mosquitto</code>和<code>mosquitto-clients</code>软件包。<br>在<code>termux</code>中安装<code>mosquitto</code>软件包，不需要安装clients包，因为它包含了<code>mosquitto_pub</code>和<code>mosquitto_sub</code>两个程序。</p><blockquote><p>详见GitHub issues <a href="https://github.com/termux/termux-packages/issues/613">#613</a>。</p></blockquote><h1 id="使用虚拟机和termux进行简单的MQTT通信实验"><a href="#使用虚拟机和termux进行简单的MQTT通信实验" class="headerlink" title="使用虚拟机和termux进行简单的MQTT通信实验"></a>使用虚拟机和<code>termux</code>进行简单的<code>MQTT</code>通信实验</h1><p><a href="https://github.com/eclipse/mosquitto">本教程参考官方repo的readme</a><br>在虚拟机中定位到配置文件<code>/etc/mosquitto/mosquitto.conf</code>：</p><blockquote><p>在<code>termux</code>中，该配置文件的路径是<code>/data/user/0/com.termux/files/usr/etc/mosquitto/mosquitto.conf</code></p></blockquote><p>取消注释<code>log_type all</code>以将日志等级设置为<code>all</code>，将<code>log_dest</code>设置为<code>stdout</code>，要不然不会在屏幕上显示日志。<br>或者直接添加下面两行也行：<del>我后来试了一下日志等级不设其实也ok</del></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">log_dest stdout<br>log_type all<br></code></pre></td></tr></table></figure><p>添加以下两行以开启在<code>0.0.0.0</code>监听、允许匿名登录：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">listener 1883 0.0.0.0<br>allow_anonymous true<br></code></pre></td></tr></table></figure><p>在<em><strong>虚拟机</strong></em>的<code>tty1</code>中启动<code>mosquitto</code>服务端程序（使用默认端口<code>1883</code>开服）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mosquitto -c /etc/mosquitto/mosquitto.conf -v<br></code></pre></td></tr></table></figure><p>进入<code>tty2</code>和<code>termux</code>，订阅<code>testTopic</code>的主题：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mosquitto_sub -h 192.168.146.138 -p 1883 -t &quot;testTopic&quot;<br></code></pre></td></tr></table></figure><p>进入<code>tty3</code>，向主题<code>publish</code>一条消息：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mosquitto_pub -h 192.168.146.138 -p 1883 -t &quot;testTopic&quot; -m &quot;message from tty3&quot;<br></code></pre></td></tr></table></figure><p>回到<code>tty2</code>，看看是不是多了一条来自<code>tty3</code>的消息？<code>termux</code>里是不是也有这条消息？<br>进入<code>termux</code>，再开一个<code>session</code>，向主题<code>publish</code>一条消息：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mosquitto_pub -h 192.168.146.138 -p 1883 -t &quot;testTopic&quot; -m &quot;message from termux&quot;<br></code></pre></td></tr></table></figure><p>回到上一个<code>session</code>，看看是不是多了这条消息？<code>tty2</code>里是不是也多了这条消息？</p><h1 id="如何确保MQTT通信的安全？"><a href="#如何确保MQTT通信的安全？" class="headerlink" title="如何确保MQTT通信的安全？"></a>如何确保<code>MQTT</code>通信的安全？</h1><p>这就是简单的<code>MQTT</code>通信实验。我们上点难度：<strong>加个鉴权</strong>。<br><code>MQTT</code>支持密码和密钥两种认证方式，我们先从密码开始。<a href="http://www.steves-internet-guide.com/mqtt-username-password-example/">参考mqtt官方文档</a><br>进入虚拟机，停掉刚刚那个谁都可以加进来的mqtt服务器，编辑<code>/etc/mosquitto/mosquitto.conf</code>，将<code>allow_anonymous</code>设置为<code>false</code>，再添加一行，指向存放密码文件的路径(记得创建这个文件)：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">password_file /etc/mosquitto/passwordfile<br></code></pre></td></tr></table></figure><blockquote><p>⚠注意：在<code>Linux</code>上，需要将密码文件存放到<code>/etc/mosquitto</code>下，要不然就算你在<code>mosquitto.conf</code>中写入了<code>password_file</code>，也无法读取密码文件。</p></blockquote><p><em><strong>添加用户 -方法 1</strong></em><br>往<code>/etc/mosquitto/passwordfile</code>里写入账号和明文密码，一行一个，像这样：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">user1:passwd1<br>usr2:pwd2<br></code></pre></td></tr></table></figure><p>然后运行这行命令来将密码文件加密。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mosquitto_passwd -U passwordfile<br></code></pre></td></tr></table></figure><p>如果有用户是在加密过之后再被添加，写了明文密码，需要再运行一次加密，但是这次加密的时候，系统会只加密明文密码，之前被加密过的密文不会被二次加密。</p><blockquote><p>密码文件必须加密后才能被读取使用！</p></blockquote><p><em><strong>添加用户 -方法 2</strong></em><br>现在，我们添加一个用户，叫<code>alpine</code>，密码<code>a123456</code>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mosquitto_passwd -c /etc/mosquitto/passwordfile alpine<br></code></pre></td></tr></table></figure><p>然后系统会提示你输入该用户的密码，和linux设置用户密码一样。<br>现在，我们再添加一个用户，叫<code>termux</code>，密码<code>t123456</code>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mosquitto_passwd -b /etc/mosquitto/passwordfile termux t123456<br></code></pre></td></tr></table></figure><blockquote><p>注意这里的参数！<br><code>-c</code>是在没有任何用户的情况下，初始化密码文件用。<em><strong>会覆盖写入文件</strong></em><br><code>-b</code>是在有用户的情况下使用。<em><strong>会追加写入文件</strong></em>。增加用户时命令行里需要传递明文密码了。</p></blockquote><p>现在，我们删除一个用户，把上面的<code>user1</code>删了：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mosquitto_passwd -D /etc/mosquitto/passwordfile user1<br></code></pre></td></tr></table></figure><p>在运行的时候，没有关闭<code>mosquitto</code>服务器，但添加&#x2F;删除了用户，怎么重新加载配置文件呢？新开一个终端(或者<code>tty</code>)，运行下面这个命令即可：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">kill -HUP &quot;$(mosquitto)&quot;<br></code></pre></td></tr></table></figure><p>然后就能在运行着<code>mosquitto</code>的终端里看到<code>Reloading config.</code>的提示了，此时新的用户清单会被应用。</p><p><em><strong>怎么连接呢？</strong></em><br>使用 <code>mosquitto_sub</code> 进行订阅，该话题下所有的消息都会显示在这里：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mosquitto_sub -h &lt;broker_addr&gt; -p &lt;broker_port&gt; -t &lt;topic&gt; -i &lt;device_identifier&gt; -u &lt;username&gt; -P &lt;password&gt;<br></code></pre></td></tr></table></figure><p>使用 <code>mosquitto_pub</code> 往指定的话题<code>publish</code>内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mosquitto_pub -h &lt;broker_address&gt; -t &lt;topic&gt; -i &lt;device_identifier&gt; -m &quot;message&quot; -u &lt;username&gt; -P &lt;password&gt;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>其他的开发杂记</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>VsCode搭建ESP8266开发环境</title>
    <link href="/2024/03/16/12-VsCode%E6%90%AD%E5%BB%BAESP8266%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83-240316/"/>
    <url>/2024/03/16/12-VsCode%E6%90%AD%E5%BB%BAESP8266%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83-240316/</url>
    
    <content type="html"><![CDATA[<p><img src="https://www.teachmemicro.com/wp-content/uploads/2020/06/nodemcu-esp8266.png" alt="封面"></p><h1 id="tl-dr"><a href="#tl-dr" class="headerlink" title="tl;dr"></a>tl;dr</h1><p><del><em>哼哼</em></del>啊啊啊啊，又要回去折腾嵌入式了。。。大一暑假决定<del>淦</del>彻底转<del><em>反恐精英</em></del>CS的我几乎没碰过嵌入式的东西了，但是出于学校的自动化专业选题原因，这次毕设决定使用<code>esp8266</code>去做。<br>写这篇文章，纯粹是为了记录一下环境的搭建过程<del><em>，方便以后环境炸了重新安装</em></del>。</p><h1 id="安装Arduino-IDE"><a href="#安装Arduino-IDE" class="headerlink" title="安装Arduino IDE"></a>安装<code>Arduino IDE</code></h1><p>正准备安装IDE，打开<code>Arduino</code>官网，发现官方在推荐我们尝试<code>2.0</code>的<code>IDE</code>。抱着试一试的心态，我下载了个<code>compressed version</code>。<br>一解压，照着1.0版的操作，创建<code>portable</code>文件夹试图绿色版运行。结果不行！它还是往我电脑里写东西了….这可怎么办？上Arduino论坛上查看，翻到这么一个帖子： <a href="https://forum.arduino.cc/t/arduino-ide-2-0-portable/1031833">Arduino IDE 2.0 Portable</a>，<a href="https://forum.arduino.cc/t/arduino-ide-2-0-portable/1031833/7">提到</a>了GitHub上的这个issue<a href="https://github.com/arduino/arduino-ide/issues/122">#122</a>。</p><blockquote><p>The IDE installation and dependencies are stored in multiple separate places on the user’s computer:</p><ul><li>Application folder (e.g., <code>C:\Program Files\Arduino IDE\</code>)</li><li>Configuration folder (e.g., <code>C:\Users\&lt;username&gt;\.arduinoIDE\</code>)</li><li>Data folder (e.g., <code>C:\Users\&lt;username&gt;\AppData\Local\Arduino15\</code>)</li><li>Sketchbook folder (e.g., <code>C:\Users\&lt;username&gt;\Documents\Arduino\</code>)</li></ul></blockquote><p>我去验证了一下，这些文件确实存在，这证明了Arduino的2.0 IDE确实是个<em><strong>非绿色版的</strong></em>。<br>怎么办呢？那当然是换1.x的最后一个版本<code>1.8.19</code>啦！<del><em>草（一种植物</em></del></p><p>回到官网，下载<code>1.8.19</code>的<code>compressed version</code>，解压到我的软件安装目录，根据官方的<a href="https://docs.arduino.cc/software/ide-v1/tutorials/PortableIDE/">这篇教程</a>，创建<code>portable</code>文件夹，完成！</p><h1 id="搭建ESP8266开发环境"><a href="#搭建ESP8266开发环境" class="headerlink" title="搭建ESP8266开发环境"></a>搭建<code>ESP8266</code>开发环境</h1><blockquote><p>在进行一切工作之前，请先安装你的开发板串口芯片的驱动！我的是<code>CH340</code>。</p></blockquote><p>*<em>第一步，添加<code>附加开发板管理器网址</code></em><br>打开<code>Arduino IDE</code> - 左上角<code>文件</code> - <code>首选项</code> - <code>附加开发板管理网址</code>，这里填入<code>http://arduino.esp8266.com/stable/package_esp8266com_index.json</code>，然后确定，回到主界面。</p><p><strong>第二步：添加到开发板管理器</strong><br>打开<code>Arduino IDE</code> - 顶上的<code>工具</code> - <code>开发板:&quot;xxxx&quot;</code> - <code>开发板管理器</code> - 等待开发板定义下载完成 - 搜索<code>8266</code>，找到<code>esp8266 by ESP8266 Community</code>的选项，点击安装。</p><p><strong>第三步：添加库</strong><br>打开<code>Arduino IDE</code> - 顶上的<code>工具</code> - <code>管理库</code> - 等待更新已安装库列表完成 - 搜索<code>8266</code>，找到<code>Arduino Uno WiFi Dev Ed Library by Arduino</code>的选项，点击安装。</p><p><strong>第四步：选择开发板</strong><br>打开<code>Arduino IDE</code> - 顶上的<code>工具</code> - <code>开发板:&quot;xxx&quot;</code> - <code>NodeMCU 1.0 (ESP-12E Module)</code></p><p>此时，我们就可以使用<del><em>巨丑无比的</em></del><code>Arduino IDE</code>进行<code>ESP8266</code>开发啦！</p><p><strong>编写Hello World程序测试环境搭建结果</strong><br>新建工程，保存到你的工程文件夹，输入以下<del><em>C艹</em></del> C++代码，插<del><em>♂</em></del>入你的<code>ESP8266</code>，并编译上传：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs C++"><span class="hljs-comment">// LED 一秒闪一次，并往串口一秒钟输出一次Hello World</span><br><br><span class="hljs-comment">// 引入ESP8266库</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;ESP8266WiFi.h&gt;</span></span><br><br><span class="hljs-comment">// 定义LED引脚</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> LED_PIN D1</span><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">setup</span><span class="hljs-params">()</span> </span>&#123;<br>  <span class="hljs-comment">// 初始化串口通信</span><br>  Serial.<span class="hljs-built_in">begin</span>(<span class="hljs-number">115200</span>);<br><br>  <span class="hljs-comment">// 初始化LED引脚</span><br>  <span class="hljs-built_in">pinMode</span>(LED_PIN, OUTPUT);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">loop</span><span class="hljs-params">()</span> </span>&#123;<br>  <span class="hljs-comment">// LED闪烁</span><br>  <span class="hljs-built_in">digitalWrite</span>(LED_PIN, HIGH); <span class="hljs-comment">// 点亮LED</span><br>  <span class="hljs-built_in">delay</span>(<span class="hljs-number">500</span>); <span class="hljs-comment">// 等待0.5秒</span><br>  <span class="hljs-built_in">digitalWrite</span>(LED_PIN, LOW); <span class="hljs-comment">// 熄灭LED</span><br>  <span class="hljs-built_in">delay</span>(<span class="hljs-number">500</span>); <span class="hljs-comment">// 等待0.5秒</span><br><br>  <span class="hljs-comment">// 每隔一秒向串口打印消息</span><br>  Serial.<span class="hljs-built_in">println</span>(<span class="hljs-string">&quot;Hello, World!&quot;</span>);<br>  <span class="hljs-built_in">delay</span>(<span class="hljs-number">1000</span>); <span class="hljs-comment">// 等待1秒</span><br>&#125;<br></code></pre></td></tr></table></figure><p>上传完成后，打开<code>工具</code> - <code>串口监视器</code>，看看是否达到了预期效果？</p><h1 id="原版Arduino-IDE排错"><a href="#原版Arduino-IDE排错" class="headerlink" title="原版Arduino IDE排错"></a>原版<code>Arduino IDE</code>排错</h1><p>终端这样报错<code>A fatal esptool.py error occurred: Cannot configure port, something went wrong. Original message: PermissionError(13, &#39;����ϵͳ�ϵ��豸û�з������á�&#39;, None, 31)Serial port COM5</code>怎么办？<br><strong>这是没有成功打开串口。</strong></p><p>进入<code>Windows设备管理器</code>，展开<code>端口 (COM 和 LPT)</code>并查看是否出现了<code>USB-SERIAL CH340 (COM114514)</code>。</p><blockquote><p>这里<code>114514</code>端口号，即使是同一台电脑在不同时刻插上开发板，数字也会不一样。</p></blockquote><p>如果没有出现，则是驱动没打上，重新安装<code>CH340</code>驱动即可。<br>如果出现了，那么回到<code>Arduino IDE</code>，找到<code>工具</code> - <code>端口</code>，选择你在<code>设备管理器</code>里看到的端口，比如我是<code>COM114514</code>，然后重试。<br>如果出现了，端口也选对了，还是失败，那么检查一下有没有别的软件占用了串口调试的端口。</p><p>如果上面的问题都排查了，还是失败，那么<strong>恭喜你</strong>和我遇到了一样的问题。下面是我的解决方法：<br>打开<a href="https://github.com/Chuyu-Team/Dism-Multi-language/releases">Dism ++</a>，启用<code>专家模式</code>，进入<code>控制面板</code> - <code>驱动管理</code>，把<code>端口(COM和LPT)</code>和<code>通用串行总线设备</code>下所有的驱动都展开，找到带有<code>Arduino</code>字样的，勾选，然后点击底下的<code>删除驱动</code>，等完成后重新安装<code>CH340</code>驱动 <strong>（具体取决于你的开发板串口芯片型号，我的是<em>CH340</em>）</strong> 即可解决。</p><h1 id="VScode环境搭建-Arduino插件"><a href="#VScode环境搭建-Arduino插件" class="headerlink" title="VScode环境搭建(Arduino插件)"></a><code>VScode</code>环境搭建(<code>Arduino插件</code>)</h1><p>下载<code>arduino</code>插件。</p><p><strong>添加附加开发板管理网址</strong><br>打开的设置，搜索<code>Arduino</code>。找到 <code>Arduino: Path</code> 设置项，填入你的<code>Arduino IDE</code>安装目录；找到<code>Arduino: Board Manager URLs</code>设置项，在其中添加 <code>ESP8266</code> 开发工具的 URL：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">https://arduino.esp8266.com/stable/package_esp8266com_index.json<br></code></pre></td></tr></table></figure><p><strong>添加开发板</strong><br>按下<code>F1</code>打开命令面板，输入<code>Arduino: Board Manager</code>，搜索<code>ESP8266</code>，安装<code>esp8266 by ESP8266 Community</code>。</p><p><strong>添加库</strong><br>按下<code>F1</code>打开命令面板，输入<code>Arduino: Library Manager</code>，搜索<code>8266</code>，安装<code>Arduino Uno WiFi Dev Ed Library by Arduino</code>。</p><p><strong>选择开发板型号</strong><br>按下<code>F1</code>打开命令面板，输入<code>Arduino: Board Config</code>，在<code>Select Board</code>处选择<code>NodeMCU 1.0 (ESP-12E Module)</code>。</p><p><strong>编写和上传代码</strong><br>创建一个新的<code>Arduino</code>文件(<code>.ino</code>)，编写你的<code>ESP8266</code>代码。点击上传按钮或使用快捷键<code>(Ctrl+Alt+U)</code>将代码上传到<code>ESP8266</code>开发板上。</p><p>点击屏幕下面的<code>COM</code>，找到你的8266所在的端口，然后就可以打开串口了。</p><h1 id="VSCode环境搭建-PlatformIO-IDE插件-⭐推荐"><a href="#VSCode环境搭建-PlatformIO-IDE插件-⭐推荐" class="headerlink" title="VSCode环境搭建(PlatformIO IDE插件)⭐推荐"></a><code>VSCode</code>环境搭建(<code>PlatformIO IDE</code>插件)⭐推荐</h1><p><strong>环境搭建</strong><br>先安装<code>PlatformIO IDE</code>插件。<br>点击<code>vscode</code>最底下的一栏中的房子图标，鼠标放上去会提示是<code>PlatformIO: Home</code>，点开它，进入<code>PIO Home</code>。<br>点击左边的<code>Platforms</code> - <code>Embedded</code> - 搜索<code>ESP</code> - 安装<code>Espressif 8266</code></p><p><strong>创建工程</strong><br>进入<code>PIO Home</code>，在<code>Quick Access</code>下面点击<code>New Project</code>，<code>Board</code>选择<code>Espressif 8266</code>分类下的<code>NodeMCU 1.0 (ESP-12E Module)</code>，<code>Framework</code>选择<code>Arduino</code>，<code>Location</code>不要勾选<code>Use default location</code>这样一会儿可以选择保存路径。</p><p>在<code>src/main.cpp</code>中会自动创建模板代码，这里我们需要包含<code>esp8266</code>的头文件才能进行开发。举个例子，该代码会创建一个叫<code>test</code>的热点，密码<code>88888888</code>，并在创建好后往串口里打印<code>ssid</code>和网关IP地址：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;Arduino.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;ESP8266WiFi.h&gt;</span></span><br><br><span class="hljs-type">const</span> <span class="hljs-type">char</span> *ssid = <span class="hljs-string">&quot;test&quot;</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">char</span> *password = <span class="hljs-string">&quot;88888888&quot;</span>;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">setup</span><span class="hljs-params">()</span> </span>&#123;<br>  Serial.<span class="hljs-built_in">begin</span>(<span class="hljs-number">9600</span>);<br>  WiFi.<span class="hljs-built_in">softAP</span>(ssid,password);<br>  Serial.<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;AP:&quot;</span>);<br>  Serial.<span class="hljs-built_in">print</span>(ssid);<br>  Serial.<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;IP:&quot;</span>);<br>  Serial.<span class="hljs-built_in">println</span>(WiFi.<span class="hljs-built_in">softAPIP</span>());<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">loop</span><span class="hljs-params">()</span> </span>&#123;<br>  <br>&#125;<br></code></pre></td></tr></table></figure><p><strong>如何快速格式化代码</strong><br>在<code>vscode</code>菜单栏中点击<code>View</code> - <code>Command Palette</code>，输入<code>Format Document</code>看看它对应的快捷键是哪个，按它的提示去按就行。我的电脑上是<code>Shift Alt F</code></p><p><strong>如何快速展开&#x2F;收起Problems栏</strong><br><code>Ctrl Shift M</code></p>]]></content>
    
    
    <categories>
      
      <category>其他的开发杂记</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>从KDE到Gnome的旅程</title>
    <link href="/2024/03/15/11%E4%BB%8EKDE%E5%88%B0Gnome%E7%9A%84%E6%97%85%E7%A8%8B-240315/"/>
    <url>/2024/03/15/11%E4%BB%8EKDE%E5%88%B0Gnome%E7%9A%84%E6%97%85%E7%A8%8B-240315/</url>
    
    <content type="html"><![CDATA[<p><img src="https://picx.zhimg.com/70/v2-5b90d510defed2ed03f044f2d38e6ccd_1440w.avis?source=172ae18b&biz_tag=Post" alt="封面"><br>(封面图源知乎<a href="https://zhuanlan.zhihu.com/p/474769585">KDE 与 GNOME：什么是 Linux 桌面的终极选择？ | Linux 中国</a>)</p><h1 id="tl-dr"><a href="#tl-dr" class="headerlink" title="tl;dr"></a>tl;dr</h1><p>上周，KDE Plasma发布了6.0版本。<del>可是，我还没做好更新的准备。</del>在更新到KDE6之后，好多的小组件都不兼容了，比如<code>panon</code>、<code>window buttons</code>等，好多好多的都炸了。<br>好巧不巧的是，我苏菲里的<code>Arch Linux</code>也有两个多月没滚了。还记得曾经最顶的一次五个月没滚，然后一滚直接炸（<br>于是这就致使了我这次的重装计划。</p><h1 id="Live-CD阶段"><a href="#Live-CD阶段" class="headerlink" title="Live CD阶段"></a>Live CD阶段</h1><p>先一路跟着<a href="https://wiki.archlinux.org/title/Installation_guide">Arch Wiki Installation Guide</a>把基本系统装好。</p><p>从USB启动Live CD，先使用<a href="https://wiki.archlinux.org/title/Iwd#iwctl">iwctl</a>进行联网：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">进入iwctl</span><br>iwctl<br><span class="hljs-meta prompt_"># </span><span class="language-bash">获取设备列表</span><br>device list<br><span class="hljs-meta prompt_"># </span><span class="language-bash">扫WiFi</span><br>station &lt;device_name&gt; scan<br><span class="hljs-meta prompt_"># </span><span class="language-bash">看看扫到哪些WiFi了</span><br>station &lt;device_name&gt; get-networks<br><span class="hljs-meta prompt_"># </span><span class="language-bash">连WiFi</span><br>station &lt;device_name&gt; connect &lt;ssid&gt;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">退出</span><br>exit<br></code></pre></td></tr></table></figure><p>对磁盘进行分区</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">看看电脑上有哪些磁盘分区</span><br>lsblk<br><span class="hljs-meta prompt_"># </span><span class="language-bash">格式化成ext4文件系统以装系统</span><br>mkfs.ext4 /dev/system_partition<br></code></pre></td></tr></table></figure><p>给LiveCD换源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim /etc/pacman.d/mirrorlist<br><span class="hljs-meta prompt_"># </span><span class="language-bash">在首行添加这行:</span><br>Server = https://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch<br>pacman -Sy<br></code></pre></td></tr></table></figure><p>安装基本系统</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">mount /dev/system_partition /mnt<br>mount --mkdir /dev/esp_partition /mnt/boot<br>pacstrap -K /mnt base linux linux-firmware<br></code></pre></td></tr></table></figure><p>生成fstab</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">genfstab -U /mnt &gt;&gt; /mnt/etc/fstab<br></code></pre></td></tr></table></figure><p>chroot进基本系统做一些初始操作</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs shell">arch-chroot /mnt<br><span class="hljs-meta prompt_"># </span><span class="language-bash">换源</span><br>vim /etc/pacman.d/mirrorlist<br><span class="hljs-meta prompt_"># </span><span class="language-bash">在首行添加这行:</span><br>Server = https://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch<br><span class="hljs-meta prompt_"># </span><span class="language-bash">在 `/etc/pacman.conf` 文件末尾添加以下两行：</span><br>[archlinuxcn]<br>Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch<br><span class="hljs-meta prompt_"># </span><span class="language-bash">之后通过以下命令安装 `archlinuxcn-keyring` 包导入 GPG key。</span><br>pacman -Sy archlinuxcn-keyring<br>pacman-key --lsign-key &quot;farseerfc@archlinux.org&quot;<br>pacman -Sy archlinuxcn-keyring<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">设置时区</span><br>ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime<br><span class="hljs-meta prompt_"># </span><span class="language-bash">同步时钟</span><br>hwclock --systohc<br><span class="hljs-meta prompt_"># </span><span class="language-bash">生成locale</span><br>vim /etc/locale.gen # 然后删除en_US.UTF-8和zh_CN.UTF-8 UTF-8前的#号<br>locale-gen<br><span class="hljs-meta prompt_"># </span><span class="language-bash">设置语言</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">向/etc/locale.conf中写入LANG=en_US.UTF-8</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">设置主机名: 向/etc/hostname写入你的主机名</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">修改hosts</span><br>vim /etc/hosts<br><span class="hljs-meta prompt_"># </span><span class="language-bash">写入以下内容。其中hostname为你电脑的hostname</span><br>127.0.0.1 localhost<br>::1       localhost<br>127.0.1.1 hostname.localdomain hostname<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">设置root密码</span><br>passwd<br></code></pre></td></tr></table></figure><p>安装grub和基本应用程序，这一步也在chroot中进行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">pacman -S grub efibootmgr networkmanager os-prober mtools dosfstools base-devel linux-headers git sudo<br></code></pre></td></tr></table></figure><p>安装微码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">pacman -S intel-ucode # AMD则是amd-ucode<br></code></pre></td></tr></table></figure><p>装grub</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">去掉os-prober让grub可以扫到windows</span><br>vim /etc/default/grub<br><span class="hljs-meta prompt_"># </span><span class="language-bash">解除这行的注释GRUB_DISABLE_OS_PROBER=<span class="hljs-literal">false</span></span><br>grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=Arch<br><span class="hljs-meta prompt_"># </span><span class="language-bash">生成grub.cfg</span><br>grub-mkconfig -o /boot/grub/grub.cfg<br></code></pre></td></tr></table></figure><p>然后重启电脑</p><h1 id="重启进本地系统操作"><a href="#重启进本地系统操作" class="headerlink" title="重启进本地系统操作"></a>重启进本地系统操作</h1><p>登录root用户，用你之前设置的密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">启动网络服务</span><br>systemctl enable --now NetworkManager<br><span class="hljs-meta prompt_"># </span><span class="language-bash">连WiFi</span><br>nmtui<br></code></pre></td></tr></table></figure><p>新建用户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">wheel后面是你的用户名username</span><br>useradd -m -G wheel username<br></code></pre></td></tr></table></figure><p>为用户创建密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">passwd username<br></code></pre></td></tr></table></figure><p>授权</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">EDITOR=vim visudo<br><span class="hljs-meta prompt_"># </span><span class="language-bash">然后找到 uncomment to allow members of group wheel to execute any <span class="hljs-built_in">command</span>的下一行，取消注释</span><br></code></pre></td></tr></table></figure><h1 id="安装Gnome"><a href="#安装Gnome" class="headerlink" title="安装Gnome"></a>安装<code>Gnome</code></h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">pacman -S gdm xorg-xwayland gnome gnome-tweaks nautilus-sendto gnome-nettool gnome-usage gnome-multi-writer adwaita-icon-theme xdg-user-dirs-gtk arc-gtk-theme<br><span class="hljs-meta prompt_"># </span><span class="language-bash">设置开机自启</span><br>sudo systemctl enable --now gdm<br></code></pre></td></tr></table></figure><h1 id="安装中文输入法fcitx"><a href="#安装中文输入法fcitx" class="headerlink" title="安装中文输入法fcitx"></a>安装中文输入法<code>fcitx</code></h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo pacman -S fcitx5-im fcitx5-chinese-addons fcitx5-rime<br></code></pre></td></tr></table></figure><p>然后编辑环境变量，在<code>/etc/environment</code>追加写入：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text"># /etc/environment<br>GTK_IM_MODULE=fcitx<br>QT_IM_MODULE=fcitx<br>XMODIFIERS=@im=fcitx<br>SDL_IM_MODULE=fcitx<br></code></pre></td></tr></table></figure><h1 id="安装paru以安装aur包"><a href="#安装paru以安装aur包" class="headerlink" title="安装paru以安装aur包"></a>安装<code>paru</code>以安装<code>aur</code>包</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo pacman -S base-devel<br>git clone --depth=1 https://aur.archlinux.org/paru.git<br>cd paru<br>makepkg -si<br></code></pre></td></tr></table></figure><h1 id="安装oh-my-zsh及其常用的两个插件"><a href="#安装oh-my-zsh及其常用的两个插件" class="headerlink" title="安装oh-my-zsh及其常用的两个插件"></a>安装<code>oh-my-zsh</code>及其常用的两个插件</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo pacman -S zsh<br>chsh -s $(which zsh)<br>sh -c &quot;$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">安装代码高亮和自动补全插件</span><br>cd $HOME/.oh-my-zsh/plugins<br>git clone --depth=1 https://github.com/zsh-users/zsh-syntax-highlighting.git<br>git clone --depth=1 https://github.com/zsh-users/zsh-autosuggestions.git<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">然后打开~/.zshrc找到plugins=()，在括号里添加git和zsh-syntax-highlighting和zsh-autosuggestions，一行一个，然后保存退出</span><br>source ~/.zshrc<br></code></pre></td></tr></table></figure><h1 id="安装蓝牙音频"><a href="#安装蓝牙音频" class="headerlink" title="安装蓝牙音频"></a>安装蓝牙音频</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">pacman -S bluez bluez-utils bluedevil pulseaudio-bluetooth<br>systemctl enable bluetooth<br></code></pre></td></tr></table></figure><h1 id="更换Linux-surface内核"><a href="#更换Linux-surface内核" class="headerlink" title="更换Linux-surface内核"></a>更换<code>Linux-surface</code>内核</h1><p>参考<a href="https://github.com/linux-surface/linux-surface/wiki/Installation-and-Setup">Linux-surface Wiki</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">添加签名信息</span><br>curl -s https://raw.githubusercontent.com/linux-surface/linux-surface/master/pkg/keys/surface.asc | sudo pacman-key --add -<br><span class="hljs-meta prompt_"># </span><span class="language-bash">添加并信任签名</span><br>sudo pacman-key --finger 56C464BAAC421453<br>sudo pacman-key --lsign-key 56C464BAAC421453<br><span class="hljs-meta prompt_"># </span><span class="language-bash">在/etc/pacman.conf里像这样添加linux0surface仓库</span><br>[linux-surface]<br>Server = https://pkg.surfacelinux.com/arch/<br><span class="hljs-meta prompt_"># </span><span class="language-bash">装内核！</span><br>sudo pacman -Sy linux-surface linux-surface-headers iptsd<br></code></pre></td></tr></table></figure><p><del><em>好了原版内核可以删了</em></del></p><h1 id="安装Gnome插件"><a href="#安装Gnome插件" class="headerlink" title="安装Gnome插件"></a>安装Gnome插件</h1><p>先去<code>Chrome</code>插件商店安装<code>GNOME Shell integration</code>，然后安装<code>gnome-browser-connector</code>，就可以从Gnome插件商店下载插件啦！管理插件在<code>Extinctions</code>应用程序内进行。</p><p>我用的插件</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs text"># 托盘图标。可能有人会说为什么不用Tray Icons: Reloades。因为这东西有问题，不能正确显示托盘图标，所以换了这个。<br>Appindicator and KStatusNotifierItem Support<br># 全局剪贴板历史记录<br>Clipboard Indicator<br># alt-tab切换特效<br>Coverflow Alt-Tab<br># 像Mac的dock栏<br>Dash to Dock<br># 桌面可以放文件<br>Desktop Icons NG (DING)<br># KDE Connect 的Gnome替代品<br>GSConnect<br># 一键闭麦<br>Nothing to Say<br># 窗口拖动时半透明<br>Transparent Window Moving<br># 资源监视器（看了半天就这个最合适）(这个已经没必要了，系统自带一个System Monitor插件，启用它就行)<br>System Monitor Tray Indicator<br># 桌面时钟 有点小bug，就是添加的第一个Widget无法删除<br>Desktop Clock<br># 顶栏图标位置整理插件<br>Top Bar Organizers<br></code></pre></td></tr></table></figure><h1 id="设置开机自启脚本"><a href="#设置开机自启脚本" class="headerlink" title="设置开机自启脚本"></a>设置开机自启脚本</h1><p>在<code>~/.config/autostart</code>下创建<code>xxx.desktop</code>，写入以下内容，即可在<code>Tweaks</code>-<code>Startup Applications</code>中找到并配置它。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs desktop">[Desktop Entry]<br>Name=&lt;应用程序名&gt;<br>Type=Application<br>Exec=&lt;运行的命令&gt;<br>Icon=&lt;图标的完整路径,128x128,svg/png&gt;<br>Terminal=&lt;指定是否在终端内运行&gt;<br>StartupNotify=&lt;&gt;<br>Categories=&lt;类别&gt;<br>Encoding=&lt;编码&gt;<br></code></pre></td></tr></table></figure><h1 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h1><p>安装好后没有性能模式选项：<br>安装<code>power-profiles-daemon</code>然后注销重新登陆。</p><p>某些电脑上没有声卡驱动<br>安装<code>alsa-firmware</code>, <code>sof-firmware</code>和<code>alsa-ucm-conf</code>然后重启电脑。</p><p><code>OBS-Studio</code>开启虚拟摄像头需要安装的插件: <code>v4l2loopback-dkms</code>。参考<a href="https://aur.archlinux.org/packages/wemeet-bin">ArchWiki</a></p><p>防止日志无限制的增长占用磁盘</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">看看日志占了多少空间</span><br>sudo journalctl --disk-usage<br><span class="hljs-meta prompt_"># </span><span class="language-bash">超过5天的自动删除</span><br>sudo journalctl --vacuum-time=5d<br><span class="hljs-meta prompt_"># </span><span class="language-bash">超过500M的自动删除</span><br>sudo journalctl --vacuum-size=500M<br><span class="hljs-meta prompt_"># </span><span class="language-bash">核心转储</span><br>sudo rm /var/lib/systemd/coredump/*<br></code></pre></td></tr></table></figure><p>打开文件夹的应用程序变成了vscode。解决方法：在终端运行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">xdg-mime default org.gnome.Nautilus.desktop inode/directory<br></code></pre></td></tr></table></figure><p>开机会自动挂载所有的磁盘。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">gsettings set org.gnome.desktop.media-handling automount false<br></code></pre></td></tr></table></figure><p>删除某个扩展的配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">查看有哪些扩展的配置可以被删除</span><br>dconf list /org/gnome/shell/extensions/<br><span class="hljs-meta prompt_"># </span><span class="language-bash">删除名为extension_name的扩展的配置</span><br>dconf reset -f /org/gnome/shell/extensions/extension_name/<br></code></pre></td></tr></table></figure><p>想启用一些不支持的插件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">gsettings set org.gnome.shell disable-extension-version-validation true<br></code></pre></td></tr></table></figure><p>删除evince的浏览历史记录和浏览进度：删除这个文件即可</p><blockquote><p>~&#x2F;.local&#x2F;share&#x2F;gvfs-metadata&#x2F;home</p></blockquote><p>启用分数缩放：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">gsettings set org.gnome.mutter experimental-features &quot;[&#x27;scale-monitor-framebuffer&#x27;]&quot;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>折腾一番CloudFlare DDNS</title>
    <link href="/2024/03/02/10%E6%8A%98%E8%85%BE%E4%B8%80%E7%95%AACloudFlare%20DDNS-240302/"/>
    <url>/2024/03/02/10%E6%8A%98%E8%85%BE%E4%B8%80%E7%95%AACloudFlare%20DDNS-240302/</url>
    
    <content type="html"><![CDATA[<p><img src="https://tse3-mm.cn.bing.net/th/id/OIP-C.UQu4ACZzLR3a2dAmE7iYyQHaEK?rs=1&pid=ImgDetMain" alt="封面"></p><h1 id="TL-DR"><a href="#TL-DR" class="headerlink" title="TL;DR"></a>TL;DR</h1><p>今年一开年，Surprise！ipv4家宽开服全寄！<br>趁着过年走亲戚的时候拿<a href="https://github.com/MikeWang000000/Natter">Natter</a>测了一下，我家、亲戚家的网络都是<code>NAT 4</code>类型的。好，好，太好了。</p><p>开学回校后，恰逢校园网基础设施更新，听门口大爷说是上个学期换的一批网络设备坏了返厂维修，开学这段时间到货学校里。<br>我说呢回校第一天怎么宿舍里没WiFi但是图书馆WiFi一切正常，过两天就有WiFi了<em><strong>而且还是WiFi6！</strong></em><del><em>天翼3G太快辣！！！</em></del><br>继续拿<code>Natter</code>测了一下，还是<code>NAT 4</code>，🆗。<br>出寝室买饭还能看到几个技术员在一楼开柜子弄交换机，不过这几天似乎没动静了，但有线网口还是获取不到ip地址，<del><em>所以有线宽带什么时候恢复</em></del>。</p><h1 id="前期探索"><a href="#前期探索" class="headerlink" title="前期探索"></a>前期探索</h1><p>在上个学期，同学送我了个<del><em>中国电信4K超高清</em></del>机顶盒，芯片是晶晨的<code>Amlogic S905X</code>，内存<code>1GB</code>，<del><em>外存</em></del>硬盘<code>6Gb</code>，刷了个<code>ArmBian</code>系统。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs bash">    _    ____  __  __        __   _  _<br>   / \  |  _ \|  \/  |      / /_ | || |<br>  / _ \ | |_) | |\/| |_____| <span class="hljs-string">&#x27;_ \| || |_</span><br><span class="hljs-string"> / ___ \|  _ &lt;| |  | |_____| (_) |__   _|</span><br><span class="hljs-string">/_/   \_\_| \_\_|  |_|      \___/   |_|</span><br><span class="hljs-string"></span><br><span class="hljs-string">Welcome to Ubuntu 20.04.5 LTS with Linux 5.9.0-arm-64</span><br><span class="hljs-string"></span><br><span class="hljs-string">No end-user support: built from trunk</span><br><span class="hljs-string"></span><br><span class="hljs-string">System load:   3%               Up time:       2 min</span><br><span class="hljs-string">Memory usage:  14% of 924M      IP:            192.168.1.102</span><br><span class="hljs-string">CPU temp:      43°C             Usage of /:    30% of 5.8G</span><br><span class="hljs-string"></span><br><span class="hljs-string">Last login: Sun Feb 25 13:17:07 2024</span><br><span class="hljs-string">root@arm-64:~# neofetch</span><br><span class="hljs-string">                                 root@arm-64</span><br><span class="hljs-string">                                 -----------</span><br><span class="hljs-string">      █ █ █ █ █ █ █ █ █ █ █      OS: Armbian focal (20.10) aarch64</span><br><span class="hljs-string">     ███████████████████████     Host: Amlogic Meson GXL (S905X) P212 Development Board</span><br><span class="hljs-string">   ▄▄██                   ██▄▄   Kernel: 5.9.0-arm-64</span><br><span class="hljs-string">   ▄▄██    ███████████    ██▄▄   Uptime: 2 mins</span><br><span class="hljs-string">   ▄▄██   ██         ██   ██▄▄   Packages: 515 (dpkg)</span><br><span class="hljs-string">   ▄▄██   ██         ██   ██▄▄   Shell: bash 5.0.17</span><br><span class="hljs-string">   ▄▄██   ██         ██   ██▄▄   Resolution: 720x576i</span><br><span class="hljs-string">   ▄▄██   █████████████   ██▄▄   Terminal: /dev/pts/0</span><br><span class="hljs-string">   ▄▄██   ██         ██   ██▄▄   CPU: (4) @ 2.016GHz</span><br><span class="hljs-string">   ▄▄██   ██         ██   ██▄▄   Memory: 132MiB / 924MiB</span><br><span class="hljs-string">   ▄▄██   ██         ██   ██▄▄</span><br><span class="hljs-string">   ▄▄██                   ██▄▄</span><br><span class="hljs-string">     ███████████████████████</span><br><span class="hljs-string">      █ █ █ █ █ █ █ █ █ █ █</span><br></code></pre></td></tr></table></figure><p>上个学期我拿它配置了一个<code>FRP</code>连到我国内公网VPS，把寝室环境暴露出去然后方便远程办公。大概细节是，这台<del><em>中国电信4K超高清</em></del>机顶盒充当跳板机，寝室路由器只开放一个端口供我在图书馆通过校园大内网连回寝室跳板机，然后访问位于宿舍的电脑。但是这只解决了校内的互联，还要处理校外公网环境以及回家后怎么办。于是我在跳板机里部署了一个代理软件的服务端，并在后台使用<code>systemd</code>对其进行保活，再用<code>ssh</code>的端口映射将代理软件监听的tcp端口映射到国内公网的VPS上。人在校外，通过手机上或者<del><em>苏菲</em></del>Surface上的代理软件连到国内公网VPS的映射端口，这个时候流量会回到跳板机，再访问内网资源。</p><p><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="599px" height="501px" viewBox="-0.5 -0.5 599 501" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2024-03-02T08:12:03.100Z&quot; agent=&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36 &quot; etag=&quot;_iHpd9Tzzn-96WI1j-Py&quot; version=&quot;24.0.0&quot; type=&quot;device&quot;&gt;&#10;  &lt;diagram name=&quot;Page-1&quot; id=&quot;qOIfiBnbt-_uR34WX2cL&quot;&gt;&#10;    &lt;mxGraphModel dx=&quot;1050&quot; dy=&quot;564&quot; grid=&quot;1&quot; gridSize=&quot;10&quot; guides=&quot;1&quot; tooltips=&quot;1&quot; connect=&quot;1&quot; arrows=&quot;1&quot; fold=&quot;1&quot; page=&quot;1&quot; pageScale=&quot;1&quot; pageWidth=&quot;850&quot; pageHeight=&quot;1100&quot; math=&quot;0&quot; shadow=&quot;0&quot;&gt;&#10;      &lt;root&gt;&#10;        &lt;mxCell id=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;1&quot; parent=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;j0mtV--DJc_brgJgEW1E-40&quot; value=&quot;&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;54.5&quot; y=&quot;58&quot; width=&quot;595.5&quot; height=&quot;500&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;j0mtV--DJc_brgJgEW1E-2&quot; value=&quot;&quot; style=&quot;image;html=1;image=img/lib/clip_art/networking/Router_Icon_128x128.png&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;204&quot; y=&quot;320&quot; width=&quot;80&quot; height=&quot;80&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;j0mtV--DJc_brgJgEW1E-4&quot; value=&quot;&quot; style=&quot;shape=image;html=1;verticalAlign=top;verticalLabelPosition=bottom;labelBackgroundColor=#ffffff;imageAspect=0;aspect=fixed;image=https://cdn2.iconfinder.com/data/icons/boxicons-regular-vol-3/24/bx-server-128.png&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;64&quot; y=&quot;470&quot; width=&quot;48&quot; height=&quot;48&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;j0mtV--DJc_brgJgEW1E-5&quot; value=&quot;&quot; style=&quot;verticalLabelPosition=bottom;html=1;verticalAlign=top;align=center;strokeColor=none;fillColor=#00BEF2;shape=mxgraph.azure.laptop;pointerEvents=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;164&quot; y=&quot;473.5&quot; width=&quot;60&quot; height=&quot;41&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;j0mtV--DJc_brgJgEW1E-6&quot; value=&quot;&quot; style=&quot;sketch=0;pointerEvents=1;shadow=0;dashed=0;html=1;strokeColor=none;fillColor=#505050;labelPosition=center;verticalLabelPosition=bottom;verticalAlign=top;outlineConnect=0;align=center;shape=mxgraph.office.devices.tablet_ipad;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;274&quot; y=&quot;468&quot; width=&quot;39&quot; height=&quot;52&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;j0mtV--DJc_brgJgEW1E-7&quot; value=&quot;&quot; style=&quot;image;aspect=fixed;perimeter=ellipsePerimeter;html=1;align=center;shadow=0;dashed=0;spacingTop=3;image=img/lib/active_directory/windows_server.svg;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;384&quot; y=&quot;469&quot; width=&quot;41&quot; height=&quot;50&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;j0mtV--DJc_brgJgEW1E-8&quot; value=&quot;&quot; style=&quot;endArrow=none;html=1;rounded=0;entryX=0;entryY=1;entryDx=0;entryDy=0;&quot; parent=&quot;1&quot; target=&quot;j0mtV--DJc_brgJgEW1E-2&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;94&quot; y=&quot;460&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;154&quot; y=&quot;380&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;j0mtV--DJc_brgJgEW1E-9&quot; value=&quot;&quot; style=&quot;endArrow=none;html=1;rounded=0;entryX=0.25;entryY=1;entryDx=0;entryDy=0;&quot; parent=&quot;1&quot; target=&quot;j0mtV--DJc_brgJgEW1E-2&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;190&quot; y=&quot;470&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;344&quot; y=&quot;320&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;j0mtV--DJc_brgJgEW1E-10&quot; value=&quot;&quot; style=&quot;endArrow=none;html=1;rounded=0;entryX=0.75;entryY=1;entryDx=0;entryDy=0;&quot; parent=&quot;1&quot; target=&quot;j0mtV--DJc_brgJgEW1E-2&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;294&quot; y=&quot;460&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;344&quot; y=&quot;320&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;j0mtV--DJc_brgJgEW1E-11&quot; value=&quot;&quot; style=&quot;endArrow=none;html=1;rounded=0;entryX=1;entryY=1;entryDx=0;entryDy=0;&quot; parent=&quot;1&quot; target=&quot;j0mtV--DJc_brgJgEW1E-2&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;384&quot; y=&quot;460&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;274&quot; y=&quot;400&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;j0mtV--DJc_brgJgEW1E-12&quot; value=&quot;跳板机&quot; style=&quot;text;strokeColor=none;align=center;fillColor=none;html=1;verticalAlign=middle;whiteSpace=wrap;rounded=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;52&quot; y=&quot;520&quot; width=&quot;60&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;j0mtV--DJc_brgJgEW1E-13&quot; value=&quot;笔记本电脑&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;154&quot; y=&quot;528&quot; width=&quot;80&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;j0mtV--DJc_brgJgEW1E-14&quot; value=&quot;别的电子设备&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;250&quot; y=&quot;528&quot; width=&quot;100&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;j0mtV--DJc_brgJgEW1E-15&quot; value=&quot;宿舍服务器&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;380&quot; y=&quot;528&quot; width=&quot;80&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;j0mtV--DJc_brgJgEW1E-18&quot; value=&quot;&quot; style=&quot;sketch=0;aspect=fixed;pointerEvents=1;shadow=0;dashed=0;html=1;strokeColor=none;labelPosition=center;verticalLabelPosition=bottom;verticalAlign=top;align=center;fillColor=#00188D;shape=mxgraph.azure.tablet;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;590&quot; y=&quot;338&quot; width=&quot;50&quot; height=&quot;37&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;j0mtV--DJc_brgJgEW1E-20&quot; value=&quot;苏菲&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;590&quot; y=&quot;375&quot; width=&quot;50&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;j0mtV--DJc_brgJgEW1E-28&quot; value=&quot;宿舍路由器&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;290&quot; y=&quot;338&quot; width=&quot;80&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;j0mtV--DJc_brgJgEW1E-33&quot; value=&quot;校内访问&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=39;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;460&quot; y=&quot;413.5&quot; width=&quot;180&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;j0mtV--DJc_brgJgEW1E-34&quot; value=&quot;&quot; style=&quot;verticalLabelPosition=bottom;html=1;verticalAlign=top;align=center;strokeColor=none;fillColor=#00BEF2;shape=mxgraph.azure.cloud;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;250&quot; y=&quot;60&quot; width=&quot;287&quot; height=&quot;160&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;j0mtV--DJc_brgJgEW1E-29&quot; value=&quot;&quot; style=&quot;image;html=1;image=img/lib/clip_art/networking/Router_Icon_128x128.png&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;353.5&quot; y=&quot;110&quot; width=&quot;80&quot; height=&quot;80&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;j0mtV--DJc_brgJgEW1E-30&quot; value=&quot;校园网&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;363.5&quot; y=&quot;180&quot; width=&quot;60&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;j0mtV--DJc_brgJgEW1E-36&quot; value=&quot;&quot; style=&quot;endArrow=none;html=1;rounded=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.2;entryY=1;entryDx=0;entryDy=0;entryPerimeter=0;&quot; parent=&quot;1&quot; source=&quot;j0mtV--DJc_brgJgEW1E-2&quot; target=&quot;j0mtV--DJc_brgJgEW1E-34&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;400&quot; y=&quot;310&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;450&quot; y=&quot;260&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;j0mtV--DJc_brgJgEW1E-37&quot; value=&quot;&quot; style=&quot;endArrow=none;html=1;rounded=0;entryX=0.9;entryY=1;entryDx=0;entryDy=0;entryPerimeter=0;exitX=0.02;exitY=0.02;exitDx=0;exitDy=0;exitPerimeter=0;&quot; parent=&quot;1&quot; source=&quot;j0mtV--DJc_brgJgEW1E-18&quot; target=&quot;j0mtV--DJc_brgJgEW1E-34&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;610&quot; y=&quot;300&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;450&quot; y=&quot;240&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;j0mtV--DJc_brgJgEW1E-38&quot; value=&quot;&quot; style=&quot;curved=1;endArrow=classic;html=1;rounded=0;exitX=0;exitY=0.5;exitDx=0;exitDy=0;exitPerimeter=0;&quot; parent=&quot;1&quot; edge=&quot;1&quot; source=&quot;j0mtV--DJc_brgJgEW1E-18&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;640&quot; y=&quot;350&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;240&quot; y=&quot;470&quot; as=&quot;targetPoint&quot; /&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;530&quot; y=&quot;250&quot; /&gt;&#10;              &lt;mxPoint x=&quot;240&quot; y=&quot;240&quot; /&gt;&#10;              &lt;mxPoint x=&quot;60&quot; y=&quot;460&quot; /&gt;&#10;              &lt;mxPoint x=&quot;240&quot; y=&quot;370&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;j0mtV--DJc_brgJgEW1E-41&quot; value=&quot;数据访问通路&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;337.25&quot; y=&quot;250&quot; width=&quot;100&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;      &lt;/root&gt;&#10;    &lt;/mxGraphModel&gt;&#10;  &lt;/diagram&gt;&#10;&lt;/mxfile&gt;&#10;"><defs/><g><g><rect x="2.5" y="0" width="595.5" height="500" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><image x="151.5" y="261.5" width="80" height="80" xlink:href="https://app.diagrams.net/img/lib/clip_art/networking/Router_Icon_128x128.png"/></g><g><image x="11.5" y="411.5" width="48" height="48" xlink:href="https://cdn2.iconfinder.com/data/icons/boxicons-regular-vol-3/24/bx-server-128.png" preserveAspectRatio="none"/></g><g><rect x="112" y="415.5" width="60" height="41" fill="none" stroke="none" pointer-events="all"/><path d="M 117.09 447.31 L 117.09 417.34 C 117.45 416.35 118.25 415.65 119.19 415.5 L 164.63 415.5 C 165.78 415.64 166.72 416.6 166.97 417.88 L 166.97 447.31 L 171.79 453.23 C 172 453.97 171.8 454.74 171.23 455.36 C 170.65 455.98 169.77 456.39 168.78 456.5 L 115.28 456.5 C 114.28 456.4 113.38 455.99 112.8 455.37 C 112.21 454.75 112 453.98 112.21 453.23 Z M 119.07 447.31 L 165.17 447.37 L 165.17 418.5 C 164.95 417.77 164.39 417.25 163.73 417.13 L 120.27 417.13 C 119.62 417.39 119.15 418.05 119.07 418.84 Z M 137.37 451.32 L 135.74 453.98 L 147.06 453.98 L 145.79 451.32 Z" fill="#00bef2" stroke="none" pointer-events="all"/></g><g><rect x="222" y="410" width="39" height="52" fill="none" stroke="none" pointer-events="all"/><path d="M 241.5 413.72 C 241.93 413.72 242.25 413.38 242.25 412.98 C 242.25 412.66 242.01 412.23 241.5 412.23 C 241.05 412.23 240.75 412.61 240.75 412.98 C 240.75 413.46 241.17 413.72 241.5 413.72 Z M 225.75 456.07 L 257.25 456.07 L 257.25 415.94 L 225.75 415.94 Z M 241.57 460.51 C 242.2 460.51 243 459.95 243 459.06 C 243 458.16 242.26 457.55 241.51 457.55 C 240.52 457.55 240 458.38 240 458.98 C 240 459.85 240.62 460.51 241.57 460.51 Z M 224.9 462 C 223.39 462 222 460.63 222 459.13 L 222 412.88 C 222 411.5 223.24 410 224.97 410 L 257.96 410 C 259.77 410 261 411.45 261 412.98 L 261 459.01 C 261 460.75 259.51 462 258.09 462 Z" fill="#505050" stroke="none" pointer-events="all"/></g><g><image x="331.5" y="410.5" width="41" height="50" xlink:href="https://app.diagrams.net/img/lib/active_directory/windows_server.svg"/></g><g><path d="M 42 402 L 152 342" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/></g><g><path d="M 138 412 L 172 342" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/></g><g><path d="M 242 402 L 212 342" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/></g><g><path d="M 332 402 L 232 342" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/></g><g><rect x="0" y="462" width="60" height="30" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 58px; height: 1px; padding-top: 477px; margin-left: 1px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">跳板机</div></div></div></foreignObject><text x="30" y="481" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">跳板机</text></switch></g></g><g><rect x="102" y="470" width="80" height="30" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 485px; margin-left: 142px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">笔记本电脑</div></div></div></foreignObject><text x="142" y="489" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">笔记本电脑</text></switch></g></g><g><rect x="198" y="470" width="100" height="30" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 485px; margin-left: 248px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">别的电子设备</div></div></div></foreignObject><text x="248" y="489" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">别的电子设备</text></switch></g></g><g><rect x="328" y="470" width="80" height="30" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 485px; margin-left: 368px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">宿舍服务器</div></div></div></foreignObject><text x="368" y="489" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">宿舍服务器</text></switch></g></g><g><rect x="538" y="280" width="50" height="37" fill="none" stroke="none" pointer-events="all"/><path d="M 538.12 282.76 C 538 281.37 539.01 280.13 540.38 280 L 585.6 280 C 586.27 280.05 586.89 280.37 587.32 280.89 C 587.76 281.41 587.97 282.08 587.91 282.76 L 587.91 314.29 C 588 315.68 586.97 316.89 585.6 317 L 540.33 317 C 539 316.84 538.03 315.65 538.12 314.29 Z M 541.79 313.17 L 584.09 313.17 L 584.09 283.83 L 541.79 283.83 Z M 566.39 315.93 C 566.77 315.79 567.04 315.42 567.04 315.01 C 567.04 314.59 566.77 314.22 566.39 314.09 L 559.44 314.09 C 559.06 314.22 558.79 314.59 558.79 315.01 C 558.79 315.42 559.06 315.79 559.44 315.93 Z" fill="#00188d" stroke="none" pointer-events="all"/></g><g><rect x="538" y="317" width="50" height="30" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 332px; margin-left: 563px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">苏菲</div></div></div></foreignObject><text x="563" y="336" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">苏菲</text></switch></g></g><g><rect x="238" y="280" width="80" height="30" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 295px; margin-left: 278px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">宿舍路由器</div></div></div></foreignObject><text x="278" y="299" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">宿舍路由器</text></switch></g></g><g><rect x="408" y="355.5" width="180" height="60" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 386px; margin-left: 498px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 39px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">校内访问</div></div></div></foreignObject><text x="498" y="397" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="39px" text-anchor="middle">校内访问</text></switch></g></g><g><path d="M 255.35 161.59 C 232.62 159.42 213.35 146.46 205.71 128.21 C 198.07 109.97 203.4 89.63 219.44 75.83 C 235.47 62.03 259.41 57.18 281.09 63.35 C 290.12 38 314.44 18.67 344.89 12.62 C 375.34 6.57 407.28 14.73 428.7 34.02 C 450.11 53.31 457.74 80.81 448.7 106.15 C 465.8 105.64 480.55 116.21 482.78 130.57 C 485 144.92 473.96 158.36 457.28 161.59 C 457.37 161.39 255.01 162 255.01 162 Z" fill="#00bef2" stroke="none" pointer-events="all"/></g><g><image x="301" y="51.5" width="80" height="80" xlink:href="https://app.diagrams.net/img/lib/clip_art/networking/Router_Icon_128x128.png"/></g><g><rect x="311.5" y="122" width="60" height="30" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 137px; margin-left: 342px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">校园网</div></div></div></foreignObject><text x="342" y="141" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">校园网</text></switch></g></g><g><path d="M 192 262 L 255.4 162" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/></g><g><path d="M 539 280.74 L 456.3 162" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/></g><g><path d="M 538 298.5 Q 478 192 333 187 Q 188 182 98 292 Q 8 402 98 357 Q 188 312 188 405.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 188 410.88 L 184.5 403.88 L 188 405.63 L 191.5 403.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><rect x="285.25" y="192" width="100" height="30" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 207px; margin-left: 335px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">数据访问通路</div></div></div></foreignObject><text x="335" y="211" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">数据访问通路</text></switch></g></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.drawio.com/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg></p><p><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="649px" height="529px" viewBox="-0.5 -0.5 649 529" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2024-03-02T08:13:34.141Z&quot; agent=&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36 &quot; etag=&quot;yR38gaVAreyUvvZ6bsVm&quot; version=&quot;24.0.0&quot; type=&quot;device&quot;&gt;&#10;  &lt;diagram name=&quot;Page-1&quot; id=&quot;dI_hwNI-IPbiKV3huhqv&quot;&gt;&#10;    &lt;mxGraphModel dx=&quot;1050&quot; dy=&quot;564&quot; grid=&quot;1&quot; gridSize=&quot;10&quot; guides=&quot;1&quot; tooltips=&quot;1&quot; connect=&quot;1&quot; arrows=&quot;1&quot; fold=&quot;1&quot; page=&quot;1&quot; pageScale=&quot;1&quot; pageWidth=&quot;850&quot; pageHeight=&quot;1100&quot; math=&quot;0&quot; shadow=&quot;0&quot;&gt;&#10;      &lt;root&gt;&#10;        &lt;mxCell id=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;1&quot; parent=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;XMfhzKKKdkuSQOpPAiJ0-55&quot; value=&quot;&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;60&quot; y=&quot;30&quot; width=&quot;640&quot; height=&quot;520&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;XMfhzKKKdkuSQOpPAiJ0-1&quot; value=&quot;&quot; style=&quot;image;html=1;image=img/lib/clip_art/networking/Router_Icon_128x128.png&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;204&quot; y=&quot;320&quot; width=&quot;80&quot; height=&quot;80&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;XMfhzKKKdkuSQOpPAiJ0-3&quot; value=&quot;&quot; style=&quot;shape=image;html=1;verticalAlign=top;verticalLabelPosition=bottom;labelBackgroundColor=#ffffff;imageAspect=0;aspect=fixed;image=https://cdn0.iconfinder.com/data/icons/social-network-8/50/37-128.png&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;204&quot; y=&quot;30&quot; width=&quot;80&quot; height=&quot;80&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;XMfhzKKKdkuSQOpPAiJ0-4&quot; value=&quot;&quot; style=&quot;shape=image;html=1;verticalAlign=top;verticalLabelPosition=bottom;labelBackgroundColor=#ffffff;imageAspect=0;aspect=fixed;image=https://cdn2.iconfinder.com/data/icons/boxicons-regular-vol-3/24/bx-server-128.png&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;64&quot; y=&quot;470&quot; width=&quot;48&quot; height=&quot;48&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;XMfhzKKKdkuSQOpPAiJ0-5&quot; value=&quot;&quot; style=&quot;verticalLabelPosition=bottom;html=1;verticalAlign=top;align=center;strokeColor=none;fillColor=#00BEF2;shape=mxgraph.azure.laptop;pointerEvents=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;164&quot; y=&quot;473.5&quot; width=&quot;60&quot; height=&quot;41&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;XMfhzKKKdkuSQOpPAiJ0-6&quot; value=&quot;&quot; style=&quot;sketch=0;pointerEvents=1;shadow=0;dashed=0;html=1;strokeColor=none;fillColor=#505050;labelPosition=center;verticalLabelPosition=bottom;verticalAlign=top;outlineConnect=0;align=center;shape=mxgraph.office.devices.tablet_ipad;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;274&quot; y=&quot;468&quot; width=&quot;39&quot; height=&quot;52&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;XMfhzKKKdkuSQOpPAiJ0-7&quot; value=&quot;&quot; style=&quot;image;aspect=fixed;perimeter=ellipsePerimeter;html=1;align=center;shadow=0;dashed=0;spacingTop=3;image=img/lib/active_directory/windows_server.svg;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;384&quot; y=&quot;469&quot; width=&quot;41&quot; height=&quot;50&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;XMfhzKKKdkuSQOpPAiJ0-8&quot; value=&quot;&quot; style=&quot;endArrow=none;html=1;rounded=0;entryX=0;entryY=1;entryDx=0;entryDy=0;&quot; parent=&quot;1&quot; target=&quot;XMfhzKKKdkuSQOpPAiJ0-1&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;94&quot; y=&quot;460&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;154&quot; y=&quot;380&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;XMfhzKKKdkuSQOpPAiJ0-9&quot; value=&quot;&quot; style=&quot;endArrow=none;html=1;rounded=0;entryX=0.25;entryY=1;entryDx=0;entryDy=0;&quot; parent=&quot;1&quot; target=&quot;XMfhzKKKdkuSQOpPAiJ0-1&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;190&quot; y=&quot;470&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;344&quot; y=&quot;320&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;XMfhzKKKdkuSQOpPAiJ0-10&quot; value=&quot;&quot; style=&quot;endArrow=none;html=1;rounded=0;entryX=0.75;entryY=1;entryDx=0;entryDy=0;&quot; parent=&quot;1&quot; target=&quot;XMfhzKKKdkuSQOpPAiJ0-1&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;294&quot; y=&quot;460&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;344&quot; y=&quot;320&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;XMfhzKKKdkuSQOpPAiJ0-12&quot; value=&quot;&quot; style=&quot;endArrow=none;html=1;rounded=0;entryX=1;entryY=1;entryDx=0;entryDy=0;&quot; parent=&quot;1&quot; target=&quot;XMfhzKKKdkuSQOpPAiJ0-1&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;384&quot; y=&quot;460&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;274&quot; y=&quot;400&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;XMfhzKKKdkuSQOpPAiJ0-15&quot; value=&quot;跳板机&quot; style=&quot;text;strokeColor=none;align=center;fillColor=none;html=1;verticalAlign=middle;whiteSpace=wrap;rounded=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;52&quot; y=&quot;520&quot; width=&quot;60&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;XMfhzKKKdkuSQOpPAiJ0-16&quot; value=&quot;笔记本电脑&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;154&quot; y=&quot;528&quot; width=&quot;80&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;XMfhzKKKdkuSQOpPAiJ0-17&quot; value=&quot;别的电子设备&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;250&quot; y=&quot;528&quot; width=&quot;100&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;XMfhzKKKdkuSQOpPAiJ0-18&quot; value=&quot;宿舍服务器&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;380&quot; y=&quot;528&quot; width=&quot;80&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;XMfhzKKKdkuSQOpPAiJ0-19&quot; value=&quot;国内VPS&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;140&quot; y=&quot;55&quot; width=&quot;70&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;XMfhzKKKdkuSQOpPAiJ0-21&quot; value=&quot;&quot; style=&quot;sketch=0;pointerEvents=1;shadow=0;dashed=0;html=1;strokeColor=none;fillColor=#505050;labelPosition=center;verticalLabelPosition=bottom;verticalAlign=top;outlineConnect=0;align=center;shape=mxgraph.office.devices.cell_phone_iphone_proportional;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;610&quot; y=&quot;221&quot; width=&quot;20&quot; height=&quot;43&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;XMfhzKKKdkuSQOpPAiJ0-22&quot; value=&quot;&quot; style=&quot;sketch=0;aspect=fixed;pointerEvents=1;shadow=0;dashed=0;html=1;strokeColor=none;labelPosition=center;verticalLabelPosition=bottom;verticalAlign=top;align=center;fillColor=#00188D;shape=mxgraph.azure.tablet;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;620&quot; y=&quot;316.5&quot; width=&quot;50&quot; height=&quot;37&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;XMfhzKKKdkuSQOpPAiJ0-23&quot; value=&quot;手机热点&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;630&quot; y=&quot;227.5&quot; width=&quot;70&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;XMfhzKKKdkuSQOpPAiJ0-24&quot; value=&quot;苏菲&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;620&quot; y=&quot;359.5&quot; width=&quot;50&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;XMfhzKKKdkuSQOpPAiJ0-25&quot; value=&quot;&quot; style=&quot;fontColor=#0066CC;verticalAlign=top;verticalLabelPosition=bottom;labelPosition=center;align=center;html=1;outlineConnect=0;fillColor=#CCCCCC;strokeColor=#6881B3;gradientColor=none;gradientDirection=north;strokeWidth=2;shape=mxgraph.networks.radio_tower;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;590&quot; y=&quot;30&quot; width=&quot;55&quot; height=&quot;100&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;XMfhzKKKdkuSQOpPAiJ0-26&quot; value=&quot;流量卡基站&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;580&quot; y=&quot;130&quot; width=&quot;80&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;XMfhzKKKdkuSQOpPAiJ0-27&quot; value=&quot;&quot; style=&quot;endArrow=none;html=1;rounded=0;exitX=0.02;exitY=0.02;exitDx=0;exitDy=0;exitPerimeter=0;&quot; parent=&quot;1&quot; target=&quot;XMfhzKKKdkuSQOpPAiJ0-21&quot; edge=&quot;1&quot; source=&quot;XMfhzKKKdkuSQOpPAiJ0-22&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;740&quot; y=&quot;320&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;420&quot; y=&quot;270&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;XMfhzKKKdkuSQOpPAiJ0-28&quot; value=&quot;&quot; style=&quot;endArrow=none;html=1;rounded=0;&quot; parent=&quot;1&quot; source=&quot;XMfhzKKKdkuSQOpPAiJ0-21&quot; target=&quot;XMfhzKKKdkuSQOpPAiJ0-26&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;700&quot; y=&quot;240&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;750&quot; y=&quot;190&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;XMfhzKKKdkuSQOpPAiJ0-29&quot; value=&quot;&quot; style=&quot;endArrow=none;html=1;rounded=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;&quot; parent=&quot;1&quot; source=&quot;XMfhzKKKdkuSQOpPAiJ0-3&quot; target=&quot;XMfhzKKKdkuSQOpPAiJ0-25&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;370&quot; y=&quot;320&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;420&quot; y=&quot;270&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;XMfhzKKKdkuSQOpPAiJ0-30&quot; value=&quot;&quot; style=&quot;curved=1;endArrow=classic;html=1;rounded=0;exitX=0;exitY=0.5;exitDx=0;exitDy=0;exitPerimeter=0;&quot; parent=&quot;1&quot; edge=&quot;1&quot; source=&quot;XMfhzKKKdkuSQOpPAiJ0-22&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;740&quot; y=&quot;340&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;170&quot; y=&quot;460&quot; as=&quot;targetPoint&quot; /&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;560&quot; y=&quot;290&quot; /&gt;&#10;              &lt;mxPoint x=&quot;570&quot; y=&quot;100&quot; /&gt;&#10;              &lt;mxPoint x=&quot;230&quot; y=&quot;70&quot; /&gt;&#10;              &lt;mxPoint x=&quot;160&quot; y=&quot;170&quot; /&gt;&#10;              &lt;mxPoint x=&quot;130&quot; y=&quot;280&quot; /&gt;&#10;              &lt;mxPoint x=&quot;50&quot; y=&quot;490&quot; /&gt;&#10;              &lt;mxPoint x=&quot;210&quot; y=&quot;360&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;XMfhzKKKdkuSQOpPAiJ0-31&quot; value=&quot;数据访问通路&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;354.5&quot; y=&quot;100&quot; width=&quot;100&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;XMfhzKKKdkuSQOpPAiJ0-32&quot; value=&quot;宿舍路由器&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;290&quot; y=&quot;338&quot; width=&quot;80&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;XMfhzKKKdkuSQOpPAiJ0-33&quot; value=&quot;&quot; style=&quot;image;html=1;image=img/lib/clip_art/networking/Router_Icon_128x128.png&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;204&quot; y=&quot;190&quot; width=&quot;80&quot; height=&quot;80&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;XMfhzKKKdkuSQOpPAiJ0-34&quot; value=&quot;校园网路由器&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;284&quot; y=&quot;210&quot; width=&quot;100&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;XMfhzKKKdkuSQOpPAiJ0-35&quot; value=&quot;&quot; style=&quot;endArrow=none;html=1;rounded=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;&quot; parent=&quot;1&quot; source=&quot;XMfhzKKKdkuSQOpPAiJ0-33&quot; target=&quot;XMfhzKKKdkuSQOpPAiJ0-3&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;370&quot; y=&quot;320&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;420&quot; y=&quot;270&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;XMfhzKKKdkuSQOpPAiJ0-36&quot; value=&quot;&quot; style=&quot;endArrow=none;html=1;rounded=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;&quot; parent=&quot;1&quot; source=&quot;XMfhzKKKdkuSQOpPAiJ0-1&quot; target=&quot;XMfhzKKKdkuSQOpPAiJ0-33&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;310&quot; y=&quot;344&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;310&quot; y=&quot;264&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;XMfhzKKKdkuSQOpPAiJ0-56&quot; value=&quot;校外访问&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=39;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;505&quot; y=&quot;393&quot; width=&quot;180&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;      &lt;/root&gt;&#10;    &lt;/mxGraphModel&gt;&#10;  &lt;/diagram&gt;&#10;&lt;/mxfile&gt;&#10;"><defs/><g><g><rect x="8" y="1" width="640" height="520" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><image x="151.5" y="290.5" width="80" height="80" xlink:href="https://app.diagrams.net/img/lib/clip_art/networking/Router_Icon_128x128.png"/></g><g><image x="151.5" y="0.5" width="80" height="80" xlink:href="https://cdn0.iconfinder.com/data/icons/social-network-8/50/37-128.png" preserveAspectRatio="none"/></g><g><image x="11.5" y="440.5" width="48" height="48" xlink:href="https://cdn2.iconfinder.com/data/icons/boxicons-regular-vol-3/24/bx-server-128.png" preserveAspectRatio="none"/></g><g><rect x="112" y="444.5" width="60" height="41" fill="none" stroke="none" pointer-events="all"/><path d="M 117.09 476.31 L 117.09 446.34 C 117.45 445.35 118.25 444.65 119.19 444.5 L 164.63 444.5 C 165.78 444.64 166.72 445.6 166.97 446.88 L 166.97 476.31 L 171.79 482.23 C 172 482.97 171.8 483.74 171.23 484.36 C 170.65 484.98 169.77 485.39 168.78 485.5 L 115.28 485.5 C 114.28 485.4 113.38 484.99 112.8 484.37 C 112.21 483.75 112 482.98 112.21 482.23 Z M 119.07 476.31 L 165.17 476.37 L 165.17 447.5 C 164.95 446.77 164.39 446.25 163.73 446.13 L 120.27 446.13 C 119.62 446.39 119.15 447.05 119.07 447.84 Z M 137.37 480.32 L 135.74 482.98 L 147.06 482.98 L 145.79 480.32 Z" fill="#00bef2" stroke="none" pointer-events="all"/></g><g><rect x="222" y="439" width="39" height="52" fill="none" stroke="none" pointer-events="all"/><path d="M 241.5 442.72 C 241.93 442.72 242.25 442.38 242.25 441.98 C 242.25 441.66 242.01 441.23 241.5 441.23 C 241.05 441.23 240.75 441.61 240.75 441.98 C 240.75 442.46 241.17 442.72 241.5 442.72 Z M 225.75 485.07 L 257.25 485.07 L 257.25 444.94 L 225.75 444.94 Z M 241.57 489.51 C 242.2 489.51 243 488.95 243 488.06 C 243 487.16 242.26 486.55 241.51 486.55 C 240.52 486.55 240 487.38 240 487.98 C 240 488.85 240.62 489.51 241.57 489.51 Z M 224.9 491 C 223.39 491 222 489.63 222 488.13 L 222 441.88 C 222 440.5 223.24 439 224.97 439 L 257.96 439 C 259.77 439 261 440.45 261 441.98 L 261 488.01 C 261 489.75 259.51 491 258.09 491 Z" fill="#505050" stroke="none" pointer-events="all"/></g><g><image x="331.5" y="439.5" width="41" height="50" xlink:href="https://app.diagrams.net/img/lib/active_directory/windows_server.svg"/></g><g><path d="M 42 431 L 152 371" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/></g><g><path d="M 138 441 L 172 371" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/></g><g><path d="M 242 431 L 212 371" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/></g><g><path d="M 332 431 L 232 371" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/></g><g><rect x="0" y="491" width="60" height="30" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 58px; height: 1px; padding-top: 506px; margin-left: 1px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">跳板机</div></div></div></foreignObject><text x="30" y="510" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">跳板机</text></switch></g></g><g><rect x="102" y="499" width="80" height="30" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 514px; margin-left: 142px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">笔记本电脑</div></div></div></foreignObject><text x="142" y="518" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">笔记本电脑</text></switch></g></g><g><rect x="198" y="499" width="100" height="30" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 514px; margin-left: 248px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">别的电子设备</div></div></div></foreignObject><text x="248" y="518" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">别的电子设备</text></switch></g></g><g><rect x="328" y="499" width="80" height="30" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 514px; margin-left: 368px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">宿舍服务器</div></div></div></foreignObject><text x="368" y="518" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">宿舍服务器</text></switch></g></g><g><rect x="88" y="26" width="70" height="30" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 41px; margin-left: 123px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">国内VPS</div></div></div></foreignObject><text x="123" y="45" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">国内VPS</text></switch></g></g><g><rect x="558" y="192" width="20" height="43" fill="none" stroke="none" pointer-events="all"/><path d="M 570.14 195.2 C 570.32 195.2 570.41 195.1 570.41 194.87 C 570.41 194.66 570.3 194.54 570.14 194.54 L 565.93 194.54 C 565.75 194.54 565.69 194.75 565.69 194.87 C 565.69 195.01 565.79 195.2 565.93 195.2 Z M 575.47 227.28 L 575.47 198.62 L 560.62 198.62 L 560.62 227.28 Z M 568.06 232.81 C 568.58 232.81 569.36 232.3 569.36 231.1 C 569.36 230.27 568.77 229.5 568.06 229.5 C 567.26 229.5 566.74 230.34 566.74 231.1 C 566.74 232.28 567.5 232.81 568.06 232.81 Z M 560.57 235 C 559.25 235 558 233.71 558 231.71 L 558 195.31 C 558 193.47 559.13 192 560.59 192 L 575.33 192 C 576.91 192 578 193.6 578 195.26 L 578 231.68 C 578 233.84 576.63 235 575.47 235 Z" fill="#505050" stroke="none" pointer-events="all"/></g><g><rect x="568" y="287.5" width="50" height="37" fill="none" stroke="none" pointer-events="all"/><path d="M 568.12 290.26 C 568 288.87 569.01 287.63 570.38 287.5 L 615.6 287.5 C 616.27 287.55 616.89 287.87 617.32 288.39 C 617.76 288.91 617.97 289.58 617.91 290.26 L 617.91 321.79 C 618 323.18 616.97 324.39 615.6 324.5 L 570.33 324.5 C 569 324.34 568.03 323.15 568.12 321.79 Z M 571.79 320.67 L 614.09 320.67 L 614.09 291.33 L 571.79 291.33 Z M 596.39 323.43 C 596.77 323.29 597.04 322.92 597.04 322.51 C 597.04 322.09 596.77 321.72 596.39 321.59 L 589.44 321.59 C 589.06 321.72 588.79 322.09 588.79 322.51 C 588.79 322.92 589.06 323.29 589.44 323.43 Z" fill="#00188d" stroke="none" pointer-events="all"/></g><g><rect x="578" y="198.5" width="70" height="30" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 214px; margin-left: 613px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">手机热点</div></div></div></foreignObject><text x="613" y="217" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">手机热点</text></switch></g></g><g><rect x="568" y="330.5" width="50" height="30" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 346px; margin-left: 593px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">苏菲</div></div></div></foreignObject><text x="593" y="349" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">苏菲</text></switch></g></g><g><path d="M 542.82 101 L 565.5 17.5 L 588.18 101" fill="none" stroke="#6881b3" stroke-width="2.02" stroke-linejoin="round" stroke-miterlimit="10" pointer-events="all"/><path d="M 587.15 95.43 L 549 78.73 L 578.9 67.6 L 555.7 56.47 L 572.72 45.84 L 560.86 36.22" fill="none" stroke="#6881b3" stroke-width="2.02" stroke-linejoin="round" stroke-miterlimit="10" pointer-events="all"/><rect x="538" y="1" width="0" height="0" fill="none" stroke="#6881b3" stroke-width="2.02" pointer-events="all"/><ellipse cx="565.5" cy="19.52" rx="4.1244844394450695" ry="4.048582995951417" fill="#cccccc" stroke="#6881b3" stroke-width="2.02" pointer-events="all"/><path d="M 572.51 12.64 L 573.96 10.92 C 578.67 15.64 578.67 23.2 573.96 27.92 L 572.51 26.3 C 576.12 22.44 576.12 16.51 572.51 12.64 Z M 577.67 7.58 L 579.11 6.16 C 586.44 13.61 586.44 25.43 579.11 32.88 L 577.67 31.47 C 584.21 24.8 584.21 14.24 577.67 7.58 Z M 582.82 2.52 L 584.27 1 C 589.81 5.62 593 12.39 593 19.52 C 593 26.66 589.81 33.43 584.27 38.04 L 582.82 36.53 C 588.09 32.4 591.16 26.14 591.16 19.52 C 591.16 12.91 588.09 6.65 582.82 2.52 Z M 558.49 12.64 L 557.04 10.92 C 552.33 15.64 552.33 23.2 557.04 27.92 L 558.49 26.3 C 554.88 22.44 554.88 16.51 558.49 12.64 Z M 553.33 7.58 L 551.89 6.16 C 544.56 13.61 544.56 25.43 551.89 32.88 L 553.33 31.47 C 546.79 24.8 546.79 14.24 553.33 7.58 Z M 548.18 2.52 L 546.73 1 C 541.19 5.62 538 12.39 538 19.52 C 538 26.66 541.19 33.43 546.73 38.04 L 548.18 36.53 C 542.91 32.4 539.84 26.14 539.84 19.52 C 539.84 12.91 542.91 6.65 548.18 2.52 Z" fill="#cccccc" stroke="#6881b3" stroke-width="2.02" stroke-miterlimit="10" pointer-events="all"/></g><g><rect x="528" y="101" width="80" height="30" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 116px; margin-left: 568px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">流量卡基站</div></div></div></foreignObject><text x="568" y="120" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">流量卡基站</text></switch></g></g><g><path d="M 569 288.24 L 568.29 235" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/></g><g><path d="M 568 192 L 568 131" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/></g><g><path d="M 232 41 L 538 50.18" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/></g><g><path d="M 568 306 Q 508 261 513 166 Q 518 71 348 56 Q 178 41 143 91 Q 108 141 93 196 Q 78 251 38 356 Q -2 461 78 396 Q 158 331 120.37 425.09" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 118.42 429.96 L 117.77 422.16 L 120.37 425.09 L 124.26 424.76 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><rect x="302.5" y="71" width="100" height="30" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 86px; margin-left: 353px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">数据访问通路</div></div></div></foreignObject><text x="353" y="90" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">数据访问通路</text></switch></g></g><g><rect x="238" y="309" width="80" height="30" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 324px; margin-left: 278px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">宿舍路由器</div></div></div></foreignObject><text x="278" y="328" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">宿舍路由器</text></switch></g></g><g><image x="151.5" y="160.5" width="80" height="80" xlink:href="https://app.diagrams.net/img/lib/clip_art/networking/Router_Icon_128x128.png"/></g><g><rect x="232" y="181" width="100" height="30" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 196px; margin-left: 282px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">校园网路由器</div></div></div></foreignObject><text x="282" y="200" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">校园网路由器</text></switch></g></g><g><path d="M 192 161 L 192 81" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/></g><g><path d="M 192 291 L 192 241" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/></g><g><rect x="453" y="364" width="180" height="60" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 394px; margin-left: 543px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 39px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">校外访问</div></div></div></foreignObject><text x="543" y="406" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="39px" text-anchor="middle">校外访问</text></switch></g></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.drawio.com/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg></p><p>(图片使用<a href="https://app.diagrams.net/">Draw IO</a>绘制svg)</p><p>这么做确实挺方便，我在去年考研期间就是全程这样操作的，因为实在不想把游戏本带到图书馆，不仅电源大还重，还不支持充电宝供电，而且这电脑在买来一年不到的时候因内存条虚焊而跟售后扯皮一个月才同意给我保内换主板。</p><p><strong>这么做的问题在于，需要一个有线的网络环境，最差情况就是路由器要支持无线桥接。</strong> 但是我宿舍里的路由器是2010年代的上古TP-Link，而且截至今天写稿，已回校一周，宿舍有线宽带依旧没恢复，怎么办呢？<del><em>重买解决100%问题</em></del></p><p>我开始考虑<code>CloudFlare</code>的<code>DDNS</code>服务了。恰好大一办的校园流量卡一个月能有150GB校内流量，反正用不完何不用来给电脑搞个<code>ipv6</code>的ddns呢？甚至还能有全球的公网ip，一举两得！</p><h1 id="CloudFlare-DDNS的配置"><a href="#CloudFlare-DDNS的配置" class="headerlink" title="CloudFlare DDNS的配置"></a>CloudFlare DDNS的配置</h1><p>上网找了一圈，全是用第三方集成式的开源项目或者<code>OpenWRT</code>里的DDNS模块。<br>我的需求是：</p><blockquote><p>能在<code>Windows</code>、<code>Linux</code>平台下通跑。<br>无视<code>CPU</code>平台限制。<br>强调在低性能的<code>Linux</code>平台下的高运行效率。<br>使用配置文件进行<code>DDNS</code>，不能把用户信息写死进脚本里。</p></blockquote><p>最终决定使用<code>Shell</code>和<code>Python</code>各编写一份，<code>Linux</code>平台下用<code>Shell</code>，<code>Windows</code>下用<code>Python</code>。<br>在编写时参考了<a href="https://github.com/wherelse/cloudflare-ddns-script">wherelse&#x2F;cloudflare-ddns-script</a>的脚本。</p><p>第一次运行时，会在脚本同级目录下生成<code>config.txt</code>，向里面填写你的个人信息，然后重新运行即可。**<code>Python</code>版和<code>Shell</code>版的配置文件通用！**</p><p>配置文件填写参考这里:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs Text">cf_email_addr=a@b.c  # cloudFlare注册账户邮箱<br>cf_global_api_key=1145141919810   # 你的cloudflare账户Globel API Key<br>domain_main=example.com   # 你的主域名, 如example.com<br>domain_full_ddns=ddnsv6.example.com # ddns用的完整域名, 如ddns.example.com<br>record_type=AAAA             # A or AAAA,ipv4 或 ipv6解析<br>eth_card=eth0             # 使用本地方式获取ip绑定的网卡, 如eth0<br>ip_index=local            # use &quot;internet&quot; or &quot;local&quot;,使用本地方式还是网络方式获取地址<br>reset_ip=0 # 1为将ddns的ip改为localhost，2为手动输入ip，其他任意值为不是<br>enable_cache=0              # 1为保存缓存文件,其他任意值为不保存。保存缓存文件可让下次ddns更新速度更快，但缓存文件泄漏需要你去把cf_global_api_key重新revoke一次，不然会造成隐私泄漏<br>skip_connectivity_check=0 # 0为不跳过脚本最开始运行的时候的检查连接<br>ip_file=ip.txt            # 保存地址信息<br>id_file=cloudflare.ids<br>log_file=cloudflare.log<br></code></pre></td></tr></table></figure><p>这是最终的<code>Shell</code>脚本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br></pre></td><td class="code"><pre><code class="hljs Shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">CHANGE THESE</span><br>cf_email_addr=&quot;&quot;  # cloudFlare注册账户邮箱<br>cf_global_api_key=&quot;&quot;   # 你的cloudflare账户Globel API Key<br>domain_main=&quot;&quot;   # 你的主域名, 如google.com<br>domain_full_ddns=&quot;&quot; # ddns用的完整域名, 如ddns.google.com<br>record_type=&quot;&quot;             # A or AAAA,ipv4 或 ipv6解析<br><br>eth_card=&quot;&quot;             # 使用本地方式获取ip绑定的网卡, 如eth0<br>ip_index=&quot;local&quot;            # use &quot;internet&quot; or &quot;local&quot;,使用本地方式还是网络方式获取地址<br><br>reset_ip=0 # 1为将ddns的ip改为localhost，2为手动输入ip，其他任意值为不是<br>enable_cache=&quot;0&quot;              # 1为保存缓存文件,其他任意值为不保存。保存缓存文件可让下次ddns更新速度更快，但缓存文件泄漏需要你去把cf_global_api_key重新revoke一次，不然会造成隐私泄漏<br>skip_connectivity_check=&quot;0&quot; # 0为不跳过脚本最开始运行的时候的检查连接<br>ip_file=&quot;ip.txt&quot;            # 保存地址信息<br>id_file=&quot;cloudflare.ids&quot;<br>log_file=&quot;cloudflare.log&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">默认配置。需要和上面的变量顺序相同</span><br>default_config_arr=(&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;local&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;ip.txt&quot;,&quot;cloudflare.ids&quot;,&quot;cloudflare.log&quot;)<br>config_file=&quot;config.txt&quot;<br><br>create_default_config_file() &#123;<br>    echo &quot;cf_email_addr=&quot; &gt;&gt; $config_file<br>    echo &quot;cf_global_api_key=&quot; &gt;&gt; $config_file<br>    echo &quot;domain_main=&quot; &gt;&gt; $config_file<br>    echo &quot;domain_full_ddns=&quot; &gt;&gt; $config_file<br>    echo &quot;record_type=&quot; &gt;&gt; $config_file<br>    echo &quot;eth_card=&quot; &gt;&gt; $config_file<br>    echo &quot;ip_index=local&quot; &gt;&gt; $config_file<br>    echo &quot;reset_ip=0&quot; &gt;&gt; $config_file<br>    echo &quot;enable_cache=0&quot; &gt;&gt; $config_file<br>    echo &quot;skip_connectivity_check&quot; &gt;&gt; $config_file<br>    echo &quot;ip_file=ip.txt&quot; &gt;&gt; $config_file<br>    echo &quot;id_file=cloudflare.ids&quot; &gt;&gt; $config_file<br>    echo &quot;log_file=cloudflare.log&quot; &gt;&gt; $config_file<br>&#125;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">声明日志函数</span><br>log() &#123;<br>    if [ &quot;$1&quot; ]; then<br>        if [ &quot;$enable_cache&quot; -eq &quot;1&quot; ]; then<br>            echo -e &quot;[$(date)] - $1&quot; &gt;&gt; $log_file<br>        fi<br>        echo &quot;[$(date)] - $1&quot;<br>    fi<br>&#125;<br>log &quot;Init config&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">初始化配置文件</span><br><br>if [ -e &quot;$config_file&quot; ]; then<br>    log &quot;File $config_file exists.&quot;<br>else<br>    log &quot;File $config_file does not exist.&quot;<br>    create_default_config_file<br>    log &quot;请将该配置文件填写完成:$&#123;config_file&#125;&quot;<br>    exit 1<br>fi<br><br>read_config_key() &#123;<br>    key=$1<br>    value=$(grep &quot;^$&#123;key&#125;=&quot; $config_file | cut -d&#x27;=&#x27; -f2)<br>    echo $value<br>&#125;<br><br>cf_email_addr=$(read_config_key &quot;cf_email_addr&quot;)<br>cf_global_api_key=$(read_config_key &quot;cf_global_api_key&quot;)<br>domain_main=$(read_config_key &quot;domain_main&quot;)<br>domain_full_ddns=$(read_config_key &quot;domain_full_ddns&quot;)<br>record_type=$(read_config_key &quot;record_type&quot;)<br>eth_card=$(read_config_key &quot;eth_card&quot;)<br>ip_index=$(read_config_key &quot;ip_index&quot;)<br>reset_ip=$(read_config_key &quot;reset_ip&quot;)<br>enable_cache=$(read_config_key &quot;enable_cache&quot;)<br>skip_connectivity_check=$(read_config_key &quot;skip_connectivity_check&quot;)<br>ip_file=$(read_config_key &quot;ip_file&quot;)<br>id_file=$(read_config_key &quot;id_file&quot;)<br>log_file=$(read_config_key &quot;log_file&quot;)<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">检查配置文件是否存在以及是否有进行填写</span><br>got_config=()<br>got_config+=$&#123;cf_email_addr&#125;<br>got_config+=$&#123;cf_global_api_key&#125;<br>got_config+=$&#123;domain_main&#125;<br>got_config+=$&#123;domain_full_ddns&#125;<br>got_config+=$&#123;record_type&#125;<br>got_config+=$&#123;eth_card&#125;<br>got_config+=$&#123;ip_index&#125;<br>got_config+=$&#123;reset_ip&#125;<br>got_config+=$&#123;enable_cache&#125;<br>got_config+=$&#123;skip_connectivity_check&#125;<br>got_config+=$&#123;ip_file&#125;<br>got_config+=$&#123;id_file&#125;<br>got_config+=$&#123;log_file&#125;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">将数组默认配置连接成字符串</span><br>def_str=&quot;&quot;<br>for element in &quot;$&#123;default_config_arr[@]&#125;&quot;<br>do<br>    def_str=&quot;$def_str$element&quot;<br>done<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">将获取到的配置连接成字符串</span><br>got_str=&quot;&quot;<br>for element in &quot;$&#123;got_config[@]&#125;&quot;<br>do<br>    got_str=&quot;$got_str$element&quot;<br>done<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">判断字符串是否相等,即用户是否填写了配置文件</span><br>if [ &quot;$def_str&quot; = &quot;$got_str&quot; ]; then<br>    create_default_config_file<br>    log &quot;请将该配置文件填写完成:$&#123;config_file&#125;&quot;<br>fi<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">检查连接</span><br>if [ &quot;$skip_connectivity_check&quot; -eq &quot;0&quot; ]; then<br>    log &quot;Checking connectivity to Cloudflare&quot;<br>    # 检查和api.cloudflare.com的连接性<br>    if curl --connect-timeout 30 -s --head https://api.cloudflare.com/ &gt; /dev/null; then<br>        log &quot;Successfully connected to api.cloudflare.com&quot;<br>        # 连接成功，可以在这里继续后续的命令<br>    else<br>        log &quot;Error connecting to api.cloudflare.com. Stopping script execution.&quot;<br>        exit 1<br>    fi<br>else<br>    log &quot;Skipping check connectivity to Cloudflare&quot;<br>fi<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">开始根据读取到的配置进行ddns设置</span><br>log &quot;Starting DDNS&quot;<br>if [ $record_type = &quot;AAAA&quot; ];then<br>if [ &quot;$reset_ip&quot; -eq &quot;1&quot; ]; then<br>ip=&quot;::1&quot;<br>log &quot;Reset DDNS address to loopback...&quot;<br>elif [ &quot;$reset_ip&quot; -eq &quot;2&quot; ]; then<br>read -p &quot;Please enter an AAAA record IP:\n&quot; ip<br>log &quot;Got it, now setting DDNS...&quot;<br>else<br>if [ $ip_index = &quot;internet&quot; ];then<br>ip=$(curl -6 ip.sb)<br>elif [ $ip_index = &quot;local&quot; ];then<br>if [ &quot;$user&quot; = &quot;root&quot; ];then<br>ip=$(ifconfig $eth_card | grep &#x27;inet6&#x27;| grep -v &#x27;::1&#x27;|grep -v &#x27;fe80&#x27; | cut -f2 | awk &#x27;&#123; print $2&#125;&#x27; | head -1)<br>else<br>ip=$(/sbin/ifconfig $eth_card | grep &#x27;inet6&#x27;| grep -v &#x27;::1&#x27;|grep -v &#x27;fe80&#x27; | cut -f2 | awk &#x27;&#123; print $2&#125;&#x27; | head -1)<br>fi<br>else<br>log &quot;Error IP index, please input the right type&quot;<br>exit 0<br>fi<br>fi<br>elif [ $record_type = &quot;A&quot; ];then<br>if [ &quot;$enable_cache&quot; -eq &quot;1&quot; ]; then<br>ip=&quot;127.0.0.1&quot;<br>log &quot;Reset DDNS address to loopback...&quot;<br>elif [ &quot;$reset_ip&quot; -eq &quot;2&quot; ]; then<br>read -p &quot;Please enter an A record IP:\n&quot; ip<br>log &quot;Got it, now setting DDNS...&quot;<br>else<br>if [ $ip_index = &quot;internet&quot; ];then<br>ip=$(curl -4 ip.sb)<br>elif [ $ip_index = &quot;local&quot; ];then<br>if [ &quot;$user&quot; = &quot;root&quot; ];then<br>ip=$(ifconfig $eth_card | grep &#x27;inet&#x27;| grep -v &#x27;127.0.0.1&#x27; | grep -v &#x27;inet6&#x27;|cut -f2 | awk &#x27;&#123; print $2&#125;&#x27;)<br>else<br>ip=$(/sbin/ifconfig $eth_card | grep &#x27;inet&#x27;| grep -v &#x27;127.0.0.1&#x27; | grep -v &#x27;inet6&#x27;|cut -f2 | awk &#x27;&#123; print $2&#125;&#x27;)<br>fi<br>else<br>log &quot;Error IP index, please input the right type&quot;<br>exit 0<br>fi<br>fi<br>else<br>    log &quot;Error DNS type&quot;<br>    exit 0<br>fi<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">SCRIPT START</span><br>log &quot;Check Initiated&quot;<br>log &quot;Your ip is:    $&#123;ip&#125;&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">判断ip是否发生变化</span><br>if [ &quot;$enable_cache&quot; -eq &quot;1&quot; ]; then<br>    if [ -f $ip_file ]; then<br>        old_ip=$(cat $ip_file)<br>        if [ $ip == $old_ip ]; then<br>            log &quot;IP has not changed.&quot;<br>            exit 0<br>        fi<br>    fi<br>fi<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">获取域名和授权</span><br><br>if [ &quot;$enable_cache&quot; -eq &quot;1&quot; ]; then<br>    if [ -f $id_file ] &amp;&amp; [ $(wc -l $id_file | cut -d &quot; &quot; -f 1) == 2 ]; then<br>        zone_identifier=$(head -1 $id_file)<br>        record_identifier=$(tail -1 $id_file)<br>    else<br>        zone_identifier=$(curl -s -X GET &quot;https://api.cloudflare.com/client/v4/zones?name=$domain_main&quot; \<br>            -H &quot;X-Auth-Email: $cf_email_addr&quot; \<br>            -H &quot;X-Auth-Key: $cf_global_api_key&quot; \<br>            -H &quot;Content-Type: application/json&quot; | grep -Po &#x27;(?&lt;=&quot;id&quot;:&quot;)[^&quot;]*&#x27; | head -1 )<br>        record_identifier=$(curl -s -X GET &quot;https://api.cloudflare.com/client/v4/zones/$zone_identifier/dns_records?type=$&#123;record_type&#125;&amp;name=$domain_full_ddns&quot; \<br>            -H &quot;X-Auth-Email: $cf_email_addr&quot; \<br>            -H &quot;X-Auth-Key: $cf_global_api_key&quot; \<br>            -H &quot;Content-Type: application/json&quot;  | grep -Po &#x27;(?&lt;=&quot;id&quot;:&quot;)[^&quot;]*&#x27;)<br>        log &quot;$zone_identifier&quot; &gt; $id_file<br>        log &quot;$record_identifier&quot; &gt;&gt; $id_file<br>    fi<br>else<br>    zone_identifier=$(curl -s -X GET &quot;https://api.cloudflare.com/client/v4/zones?name=$domain_main&quot; \<br>        -H &quot;X-Auth-Email: $cf_email_addr&quot; \<br>        -H &quot;X-Auth-Key: $cf_global_api_key&quot; \<br>        -H &quot;Content-Type: application/json&quot; | grep -Po &#x27;(?&lt;=&quot;id&quot;:&quot;)[^&quot;]*&#x27; | head -1 )<br>    record_identifier=$(curl -s -X GET &quot;https://api.cloudflare.com/client/v4/zones/$zone_identifier/dns_records?type=$&#123;record_type&#125;&amp;name=$domain_full_ddns&quot; \<br>        -H &quot;X-Auth-Email: $cf_email_addr&quot; \<br>        -H &quot;X-Auth-Key: $cf_global_api_key&quot; \<br>        -H &quot;Content-Type: application/json&quot;  | grep -Po &#x27;(?&lt;=&quot;id&quot;:&quot;)[^&quot;]*&#x27;)<br>fi<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">更新DNS记录</span><br>update=$(curl -s -X PUT &quot;https://api.cloudflare.com/client/v4/zones/$zone_identifier/dns_records/$record_identifier&quot; \<br>    -H &quot;X-Auth-Email: $cf_email_addr&quot; \<br>    -H &quot;X-Auth-Key: $cf_global_api_key&quot; \<br>    -H &quot;Content-Type: application/json&quot; \<br>    --data &quot;&#123;\&quot;type\&quot;:\&quot;$record_type\&quot;,\&quot;name\&quot;:\&quot;$domain_full_ddns\&quot;,\&quot;content\&quot;:\&quot;$ip\&quot;,\&quot;ttl\&quot;:1,\&quot;proxied\&quot;:false&#125;&quot;)<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">输出DDNS更新情况</span><br>if [[ $update == *&quot;\&quot;success\&quot;:true&quot;* ]]; then<br>    message=&quot;$domain_full_ddns -&gt; $ip&quot;<br>    if [ &quot;$enable_cache&quot; -eq &quot;1&quot; ]; then<br>        echo &quot;$message&quot; &gt; $ip_file<br>    fi<br>    log message<br>else<br>    message=&quot;API UPDATE FAILED. DUMPING RESULTS:\n$update&quot;<br>    log &quot;$message&quot;<br>    exit 1<br>fi<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> datetime<br><span class="hljs-keyword">import</span> platform<br><span class="hljs-keyword">import</span> subprocess<br><span class="hljs-keyword">import</span> re<br><br><span class="hljs-comment"># 需要先安装以下pip包才能运行:</span><br><span class="hljs-comment"># requests</span><br><br><span class="hljs-comment"># 配置变量</span><br>cf_email_addr = <span class="hljs-string">&quot;&quot;</span>  <span class="hljs-comment"># CloudFlare注册账户邮箱</span><br>cf_global_api_key = <span class="hljs-string">&quot;&quot;</span>  <span class="hljs-comment"># 你的Cloudflare账户Global API Key</span><br>domain_main = <span class="hljs-string">&quot;&quot;</span>  <span class="hljs-comment"># 你的主域名, 如google.com</span><br>domain_full_ddns = <span class="hljs-string">&quot;&quot;</span>  <span class="hljs-comment"># ddns用的完整域名, 如ddns.google.com</span><br>record_type = <span class="hljs-string">&quot;AAAA&quot;</span>  <span class="hljs-comment"># A or AAAA, ipv4 或 ipv6解析</span><br><br>eth_card = <span class="hljs-string">&quot;&quot;</span>  <span class="hljs-comment"># 使用本地方式获取IP绑定的网卡, 如eth0。此设置项只在linux上生效</span><br>ip_index = <span class="hljs-string">&quot;local&quot;</span>  <span class="hljs-comment"># 使用 &quot;internet&quot; 或 &quot;local&quot;, 获取地址的方式</span><br><br>reset_ip = <span class="hljs-number">0</span> <span class="hljs-comment"># 1为将ddns的ip改为localhost，2为手动输入ip，其他任意值为不是</span><br>enable_cache = <span class="hljs-number">0</span>  <span class="hljs-comment"># 1为保存缓存文件，其他任意值为不保存缓存文件</span><br>skip_connectivity_check = <span class="hljs-number">0</span> <span class="hljs-comment"># 0为不跳过脚本最开始运行的时候的检查连接</span><br>ip_file = <span class="hljs-string">&quot;ip.txt&quot;</span>  <span class="hljs-comment"># 保存地址信息的文件</span><br>id_file = <span class="hljs-string">&quot;cloudflare.ids&quot;</span><br>log_file = <span class="hljs-string">&quot;cloudflare.log&quot;</span><br><br><br><span class="hljs-comment"># 按照这个格式填入config.txt</span><br>example_config_file = &#123;<br>  <span class="hljs-string">&quot;cf_email_addr&quot;</span>: <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-comment"># CloudFlare注册账户邮箱</span><br>  <span class="hljs-string">&quot;cf_global_api_key&quot;</span>: <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-comment"># 你的Cloudflare账户Global API Key</span><br>  <span class="hljs-string">&quot;domain_main&quot;</span>: <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-comment"># 你的主域名, 如google.com</span><br>  <span class="hljs-string">&quot;domain_full_ddns&quot;</span>: <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-comment"># ddns用的完整域名, 如ddns.google.com</span><br>  <span class="hljs-string">&quot;record_type&quot;</span>: <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-comment"># A or AAAA, ipv4 或 ipv6解析</span><br>  <span class="hljs-string">&quot;eth_card&quot;</span>: <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-comment"># 使用本地方式获取IP绑定的网卡, 如eth0。此设置项只在linux上生效</span><br>  <span class="hljs-string">&quot;ip_index&quot;</span>: <span class="hljs-string">&quot;local&quot;</span>, <span class="hljs-comment"># 使用 &quot;internet&quot; 或 &quot;local&quot;, 获取地址的方式。internal不支持获取ipv4地址</span><br>  <span class="hljs-string">&quot;reset_ip&quot;</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># 1为将ddns的ip改为localhost，其他任意值为不是</span><br>  <span class="hljs-string">&quot;enable_cache&quot;</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># 1为保存缓存文件，其他任意值为不保存缓存文件</span><br>  <span class="hljs-string">&quot;skip_connectivity_check&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment"># 0为不跳过脚本最开始运行的时候的检查连接</span><br>  <span class="hljs-string">&quot;ip_file&quot;</span>: <span class="hljs-string">&quot;ip.txt&quot;</span>, <span class="hljs-comment"># 不需要填写</span><br>  <span class="hljs-string">&quot;id_file&quot;</span>: <span class="hljs-string">&quot;cloudflare.ids&quot;</span>, <span class="hljs-comment"># 不需要填写</span><br>  <span class="hljs-string">&quot;log_file&quot;</span>: <span class="hljs-string">&quot;cloudflare.log&quot;</span> <span class="hljs-comment"># 不需要填写</span><br>&#125;<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">log</span>(<span class="hljs-params">message</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;日志函数&quot;&quot;&quot;</span><br>    <span class="hljs-keyword">if</span> message:<br>        <span class="hljs-keyword">if</span> enable_cache == <span class="hljs-number">1</span>:<br>            <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(log_file, <span class="hljs-string">&#x27;a&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>                f.write(<span class="hljs-string">f&quot;[<span class="hljs-subst">&#123;datetime.datetime.now()&#125;</span>] - <span class="hljs-subst">&#123;message&#125;</span>\n&quot;</span>)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[<span class="hljs-subst">&#123;datetime.datetime.now()&#125;</span>] - <span class="hljs-subst">&#123;message&#125;</span>&quot;</span>)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">init_value</span>():<br>    <span class="hljs-keyword">global</span> cf_email_addr, cf_global_api_key, domain_main, domain_full_ddns, record_type, eth_card, skip_connectivity_check, ip_index, reset_ip, enable_cache, ip_file, id_file, og_file<br>    config_dict = &#123;&#125;<br>    script_dir = os.path.dirname(os.path.abspath(__file__))<br>    config_path = os.path.join(script_dir, <span class="hljs-string">&quot;config.txt&quot;</span>)<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(config_path, <span class="hljs-string">&#x27;r&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> file:<br>            <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> file:<br>                line = line.strip()<br>                <span class="hljs-keyword">if</span> line <span class="hljs-keyword">and</span> <span class="hljs-string">&#x27;=&#x27;</span> <span class="hljs-keyword">in</span> line:<br>                    key, value = line.split(<span class="hljs-string">&#x27;=&#x27;</span>, <span class="hljs-number">1</span>)<br>                    config_dict[key] = value<br>            common_keys = <span class="hljs-built_in">set</span>(config_dict.keys()) &amp; <span class="hljs-built_in">set</span>(example_config_file.keys())<br>            different_values = &#123;&#125;<br>            <span class="hljs-keyword">for</span> key <span class="hljs-keyword">in</span> common_keys:<br>                <span class="hljs-keyword">if</span> config_dict[key] != example_config_file[key]:<br>                    different_values[key] = (config_dict[key], example_config_file[key])<br>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(different_values) == <span class="hljs-number">0</span>:<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;请将该配置文件填写完成:<span class="hljs-subst">&#123;config_path&#125;</span>&quot;</span>)<br>                sys.exit()<br>            log(<span class="hljs-string">&quot;File config.txt exists.&quot;</span>)<br>            cf_email_addr = config_dict.get(<span class="hljs-string">&#x27;cf_email_addr&#x27;</span>)<br>            cf_global_api_key = config_dict.get(<span class="hljs-string">&#x27;cf_global_api_key&#x27;</span>)<br>            domain_main = config_dict.get(<span class="hljs-string">&#x27;domain_main&#x27;</span>)<br>            domain_full_ddns = config_dict.get(<span class="hljs-string">&#x27;domain_full_ddns&#x27;</span>)<br>            record_type = config_dict.get(<span class="hljs-string">&#x27;record_type&#x27;</span>)<br>            eth_card = config_dict.get(<span class="hljs-string">&#x27;eth_card&#x27;</span>)<br>            ip_index = config_dict.get(<span class="hljs-string">&#x27;ip_index&#x27;</span>)<br>            reset_ip = <span class="hljs-built_in">int</span>(config_dict.get(<span class="hljs-string">&#x27;reset_ip&#x27;</span>))<br>            enable_cache = <span class="hljs-built_in">int</span>(config_dict.get(<span class="hljs-string">&#x27;enable_cache&#x27;</span>))<br>            skip_connectivity_check = <span class="hljs-built_in">int</span>(config_dict.get(<span class="hljs-string">&#x27;skip_connectivity_check&#x27;</span>))<br>            ip_file = config_dict.get(<span class="hljs-string">&#x27;ip_file&#x27;</span>)<br>            id_file = config_dict.get(<span class="hljs-string">&#x27;id_file&#x27;</span>)<br>            log_file = config_dict.get(<span class="hljs-string">&#x27;log_file&#x27;</span>)<br>    <span class="hljs-keyword">except</span> FileNotFoundError:<br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(config_path, <span class="hljs-string">&#x27;w&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> file:<br>            <span class="hljs-keyword">for</span> key, value <span class="hljs-keyword">in</span> example_config_file.items():<br>                file.write(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;key&#125;</span>=<span class="hljs-subst">&#123;value&#125;</span>\n&#x27;</span>)<br>            <span class="hljs-comment">#json.dump(example_config_file, file, ensure_ascii=False, indent=4)</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;请将该配置文件填写完成:<span class="hljs-subst">&#123;config_path&#125;</span>&quot;</span>)<br>        sys.exit()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_ipv6_address_windows</span>():<br>    <span class="hljs-string">&quot;&quot;&quot;在Windows上获取临时IPv6地址&quot;&quot;&quot;</span><br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-comment"># 执行ipconfig命令并捕获输出</span><br>        output = subprocess.check_output([<span class="hljs-string">&quot;ipconfig&quot;</span>], text=<span class="hljs-literal">True</span>)<br>        <span class="hljs-comment"># 使用正则表达式查找临时IPv6地址</span><br>        <span class="hljs-keyword">match</span> = re.search(<span class="hljs-string">r&quot;临时 IPv6 地址.*: ([a-fA-F0-9:]+)&quot;</span>, output)<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">match</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">match</span>.group(<span class="hljs-number">1</span>)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Error: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_ipv6_address_linux</span>():<br>    <span class="hljs-string">&quot;&quot;&quot;在Linux上获取Global IPv6地址&quot;&quot;&quot;</span><br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-comment"># 执行ip -6 addr show命令并捕获输出</span><br>        output = subprocess.check_output([<span class="hljs-string">&quot;ip&quot;</span>, <span class="hljs-string">&quot;-6&quot;</span>, <span class="hljs-string">&quot;addr&quot;</span>, <span class="hljs-string">&quot;show&quot;</span>, eth_card], text=<span class="hljs-literal">True</span>)<br>        <span class="hljs-comment"># 使用正则表达式查找global scope的IPv6地址</span><br>        <span class="hljs-keyword">match</span> = re.search(<span class="hljs-string">r&quot;inet6\s+([a-fA-F0-9:]+)/\d+\s+scope global&quot;</span>, output)<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">match</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">match</span>.group(<span class="hljs-number">1</span>)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Error: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_ipv6_platform</span>():<br>    <span class="hljs-keyword">if</span> platform.system() == <span class="hljs-string">&quot;Windows&quot;</span>:<br>        <span class="hljs-keyword">return</span> get_ipv6_address_windows()<br>    <span class="hljs-keyword">elif</span> platform.system() == <span class="hljs-string">&quot;Linux&quot;</span>:<br>        <span class="hljs-keyword">return</span> get_ipv6_address_linux()<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_ip</span>():<br>    <span class="hljs-string">&quot;&quot;&quot;获取IP地址&quot;&quot;&quot;</span><br>    <span class="hljs-keyword">if</span> record_type == <span class="hljs-string">&quot;AAAA&quot;</span>:<br>        <span class="hljs-keyword">if</span> reset_ip == <span class="hljs-number">1</span>:<br>            log(<span class="hljs-string">&quot;Reset DDNS address to loopback...&quot;</span>)<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;::1&quot;</span><br>        <span class="hljs-keyword">elif</span> reset_ip == <span class="hljs-number">2</span>:<br>            ip = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;Please enter an AAAA record IP:\n&quot;</span>)<br>            log(<span class="hljs-string">&quot;Got it, now setting DDNS...&quot;</span>)<br>            <span class="hljs-keyword">return</span> ip<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">if</span> ip_index == <span class="hljs-string">&quot;internet&quot;</span>:<br>                <span class="hljs-keyword">return</span> requests.get(<span class="hljs-string">&#x27;https://api64.ipify.org?format=json&#x27;</span>).json()[<span class="hljs-string">&#x27;ip&#x27;</span>]<br>            <span class="hljs-keyword">elif</span> ip_index == <span class="hljs-string">&quot;local&quot;</span>:<br>                <span class="hljs-keyword">return</span> get_ipv6_platform()<br>                <span class="hljs-keyword">pass</span><br>    <span class="hljs-keyword">elif</span> record_type == <span class="hljs-string">&quot;A&quot;</span>:<br>        <span class="hljs-keyword">if</span> reset_ip == <span class="hljs-number">1</span>:<br>            log(<span class="hljs-string">&quot;Reset DDNS address to loopback...&quot;</span>)<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;127.0.0.1&quot;</span><br>        <span class="hljs-keyword">elif</span> reset_ip == <span class="hljs-number">2</span>:<br>            ip = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;Please enter an A record IP:\n&quot;</span>)<br>            log(<span class="hljs-string">&quot;Got it, now setting DDNS...&quot;</span>)<br>            <span class="hljs-keyword">return</span> ip<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">if</span> ip_index == <span class="hljs-string">&quot;internet&quot;</span>:<br>                <span class="hljs-keyword">return</span> requests.get(<span class="hljs-string">&#x27;https://api.ipify.org?format=json&#x27;</span>).json()[<span class="hljs-string">&#x27;ip&#x27;</span>]<br>            <span class="hljs-keyword">elif</span> ip_index == <span class="hljs-string">&quot;local&quot;</span>:<br>                <span class="hljs-comment"># 这里需要自行实现本地获取IPv4地址的逻辑</span><br>                <span class="hljs-keyword">pass</span><br>    <span class="hljs-keyword">else</span>:<br>        log(<span class="hljs-string">&quot;Error DNS type&quot;</span>)<br>        exit(<span class="hljs-number">0</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">update_cloudflare_dns</span>(<span class="hljs-params">ip</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;更新Cloudflare DNS记录&quot;&quot;&quot;</span><br>    headers = &#123;<br>        <span class="hljs-string">&quot;X-Auth-Email&quot;</span>: cf_email_addr,<br>        <span class="hljs-string">&quot;X-Auth-Key&quot;</span>: cf_global_api_key,<br>        <span class="hljs-string">&quot;Content-Type&quot;</span>: <span class="hljs-string">&quot;application/json&quot;</span>,<br>    &#125;<br>    <span class="hljs-comment"># 获取Zone ID</span><br>    zone_response = requests.get(<span class="hljs-string">f&quot;https://api.cloudflare.com/client/v4/zones?name=<span class="hljs-subst">&#123;domain_main&#125;</span>&quot;</span>, headers=headers)<br>    zone_id = zone_response.json()[<span class="hljs-string">&#x27;result&#x27;</span>][<span class="hljs-number">0</span>][<span class="hljs-string">&#x27;id&#x27;</span>]<br><br>    <span class="hljs-comment"># 获取DNS记录ID</span><br>    dns_response = requests.get(<span class="hljs-string">f&quot;https://api.cloudflare.com/client/v4/zones/<span class="hljs-subst">&#123;zone_id&#125;</span>/dns_records?type=<span class="hljs-subst">&#123;record_type&#125;</span>&amp;name=<span class="hljs-subst">&#123;domain_full_ddns&#125;</span>&quot;</span>, headers=headers)<br>    dns_record_id = dns_response.json()[<span class="hljs-string">&#x27;result&#x27;</span>][<span class="hljs-number">0</span>][<span class="hljs-string">&#x27;id&#x27;</span>]<br><br>    <span class="hljs-comment"># 更新DNS记录</span><br>    data = &#123;<br>        <span class="hljs-string">&quot;type&quot;</span>: record_type,<br>        <span class="hljs-string">&quot;name&quot;</span>: domain_full_ddns,<br>        <span class="hljs-string">&quot;content&quot;</span>: ip,<br>        <span class="hljs-string">&quot;ttl&quot;</span>: <span class="hljs-number">1</span>,<br>        <span class="hljs-string">&quot;proxied&quot;</span>: <span class="hljs-literal">False</span><br>    &#125;<br>    update_response = requests.put(<span class="hljs-string">f&quot;https://api.cloudflare.com/client/v4/zones/<span class="hljs-subst">&#123;zone_id&#125;</span>/dns_records/<span class="hljs-subst">&#123;dns_record_id&#125;</span>&quot;</span>, headers=headers, json=data)<br>    <span class="hljs-keyword">return</span> update_response.json()<br><br><br><br><span class="hljs-comment"># 主逻辑</span><br>log(<span class="hljs-string">&quot;Init config&quot;</span>)<br>init_value()<br>log(<span class="hljs-string">&quot;Starting DDNS&quot;</span>)<br><span class="hljs-keyword">if</span> skip_connectivity_check == <span class="hljs-number">0</span>:<br>    <span class="hljs-comment"># 检查连接性</span><br>    log(<span class="hljs-string">&quot;Checking connectivity to cloudflare&quot;</span>)<br>    <span class="hljs-keyword">try</span>:<br>        response = requests.get(<span class="hljs-string">&quot;https://api.cloudflare.com&quot;</span>, timeout=<span class="hljs-number">30</span>)<br>        <span class="hljs-comment"># 如果请求成功，状态码为200</span><br>        <span class="hljs-keyword">if</span> response.ok:<br>            log(<span class="hljs-string">&quot;Successfully connected to https://api.cloudflare.com&quot;</span>)<br>        <span class="hljs-keyword">else</span>:<br>            log(<span class="hljs-string">&quot;Connected to https://api.cloudflare.com but received a non-success status code:&quot;</span>, response.status_code)<br>    <span class="hljs-keyword">except</span> requests.exceptions.RequestException <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-comment"># 处理连接错误</span><br>        log(<span class="hljs-string">&quot;Error connecting to https://api.cloudflare.com&quot;</span>)<br>        log(e)<br>        sys.exit()<br>    <span class="hljs-keyword">except</span> requests.exceptions.Timeout:<br>        <span class="hljs-comment"># 处理连接超时</span><br>        log(<span class="hljs-string">&quot;Timeout connecting to https://api.cloudflare.com&quot;</span>)<br>        log(e)<br>        sys.exit()<br>    log(<span class="hljs-string">&quot;Check Initiated&quot;</span>)<br><span class="hljs-keyword">else</span>:<br>    log(<span class="hljs-string">&quot;Skipping check connectivity to Cloudflare&quot;</span>)<br><br><span class="hljs-comment"># 获取IP地址</span><br>ip = get_ip()<br>log(<span class="hljs-string">f&quot;Your ip is:    <span class="hljs-subst">&#123;ip&#125;</span>&quot;</span>)<br><br><span class="hljs-comment"># 判断IP是否发生变化</span><br>old_ip = <span class="hljs-literal">None</span><br><span class="hljs-keyword">if</span> enable_cache == <span class="hljs-number">1</span> <span class="hljs-keyword">and</span> os.path.exists(ip_file):<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(ip_file) <span class="hljs-keyword">as</span> f:<br>        old_ip = f.read().strip()<br><span class="hljs-keyword">if</span> ip == old_ip:<br>    <span class="hljs-keyword">if</span> ip == <span class="hljs-literal">None</span>:<br>        log(<span class="hljs-string">&quot;Check your Internet connection.&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        log(<span class="hljs-string">&quot;IP has not changed.&quot;</span>)<br>    exit(<span class="hljs-number">0</span>)<br><br><span class="hljs-comment"># 更新DNS记录</span><br>update_result = update_cloudflare_dns(ip)<br><span class="hljs-keyword">if</span> update_result[<span class="hljs-string">&#x27;success&#x27;</span>]:<br>    message = <span class="hljs-string">f&quot;Now <span class="hljs-subst">&#123;domain_full_ddns&#125;</span> -&gt; <span class="hljs-subst">&#123;ip&#125;</span>&quot;</span><br>    <span class="hljs-keyword">if</span> enable_cache == <span class="hljs-number">1</span>:<br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(ip_file, <span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>            f.write(message)<br>    log(message)<br><span class="hljs-keyword">else</span>:<br>    message = <span class="hljs-string">f&quot;API UPDATE FAILED. DUMPING RESULTS:\n<span class="hljs-subst">&#123;update_result&#125;</span>&quot;</span><br>    log(message)<br>    exit(<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><h1 id="Linux设备上的防火墙"><a href="#Linux设备上的防火墙" class="headerlink" title="Linux设备上的防火墙"></a>Linux设备上的防火墙</h1><p>既然有了公网<code>ipv6</code>地址，则不需要跳板机了，需要在终端上配置防火墙。</p><p>我用的是<code>UFW</code>作为我的防火墙。相关的教程直接上<a href="https://wiki.archlinux.org/title/Uncomplicated_Firewall">ArchWiki</a>翻，写的很详细。<br>先启用<code>ipv6</code>下的<code>ufw</code>：将<code>/etc/default/ufw</code>下的<code>IPV6</code>值改为<code>yes</code><br>基操，先禁个<code>Ping</code>：<br><code>ipv6</code>的<code>Ping</code>：将<code>/etc/ufw/before6.rules</code>中的<code>-A ufw6-before-input -p icmpv6 --icmpv6-type echo-request -j ACCEPT</code>最后改为<code>DROP</code><br><code>ipv4</code>的<code>Ping</code>：将<code>/etc/ufw/before.rules</code>中的<code>-A ufw-before-input -p icmp --icmp-type echo-request -j ACCEPT</code>最后改为<code>DROP</code><br><del><em>无脑方法：把配置文件中所有有关<code>icmp</code>的<code>echo-request</code>全改成<code>DROP</code></em></del></p><p>放通<code>KDE Connect</code>:<br>根据官方<a href="https://userbase.kde.org/KDEConnect">文档</a>所写，需要放通1714-1764的<code>UDP</code>和<code>TCP</code>端口。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Shell">sudo ufw allow 1714:1764/udp<br>sudo ufw allow 1714:1764/tcp<br></code></pre></td></tr></table></figure><p>放通<code>Syncthing</code>:<br>直接把软件添加到白名单即可。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">sudo ufw allow syncthing<br></code></pre></td></tr></table></figure><h1 id="更新：使用域API实现"><a href="#更新：使用域API实现" class="headerlink" title="更新：使用域API实现"></a>更新：使用域API实现</h1><p>这个是配置文件，按你的实际情况填写。不想要手动创建，先运行更新记录的脚本，如果脚本发现没有这个文件会自动创建，这里只是提示你这些键值对的意义。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs text">zone_id=你的zoneID<br>record_id=你要修改的记录的record_id<br>api_key=去创建一个只有域权限的API key,只授权修改DNS记录，将API key填这里<br>domain_main=你要修改的二级域名。比如你主域名是domain.com，你要给sub.domain.com添加解析记录，这里就填sub<br>proxied=false 是否对此记录启用cloudflare proxy cdn保护<br>record_type=A或者AAAA<br>eth_card=使用本地方式获取ip绑定的网卡, 如eth0。此项仅在linux上生效。<br>ip_index=&quot;internet&quot; or &quot;local&quot;,使用本地方式还是网络方式获取地址<br>reset_ip=1为将ddns的ip改为localhost，2为手动输入ip，其他任意值为不是<br>enable_cache=1为保存缓存文件,其他任意值为不保存。保存缓存文件可让下次ddns更新速度更快，但缓存文件泄漏需要你去把cf_global_api_key重新revoke一次，不然会造成隐私泄漏<br>skip_connectivity_check=0为不跳过脚本最开始运行的时候的检查连接<br>ip_file=ip.txt   保存地址信息的文件<br>id_file=cloudflare.ids<br>log_file=cloudflare.log<br></code></pre></td></tr></table></figure><p>先获取你域下面所有的域名及其<code>record_id</code>：</p><blockquote><p>python版兼任<code>linux</code>和<code>windows</code>，shell版适合性能差的设备。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">先用get获取到<span class="hljs-built_in">id</span>,然后再填入配置文件</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">CHANGE THESE</span><br>zone_id=&quot;&quot;  # cloudFlare里域名的zone id<br>record_id=&quot;&quot;   # 你要修改的二级域名的record id,通过get脚本获取<br>api_key=&quot;&quot; # 你的API key,用于修改dns记录的key<br>domain_main=&quot;&quot;   # 你的主域名, 如google.com<br>proxied=&quot;false&quot;# 是否要启用cdn。合法值只有true和false<br>record_type=&quot;&quot;             # A or AAAA,ipv4 或 ipv6解析<br><br>eth_card=&quot;&quot;             # 使用本地方式获取ip绑定的网卡, 如eth0<br>ip_index=&quot;local&quot;            # use &quot;internet&quot; or &quot;local&quot;,使用本地方式还是网络方式获取地址<br><br>reset_ip=0 # 1为将ddns的ip改为localhost，2为手动输入ip，其他任意值为不是<br>enable_cache=&quot;0&quot;              # 1为保存缓存文件,其他任意值为不保存。保存缓存文件可让下次ddns更新速度更快，但缓存文件泄漏需要你去把cf_global_api_key重新revoke一次，不然会造成隐私泄漏<br>skip_connectivity_check=&quot;0&quot; # 0为不跳过脚本最开始运行的时候的检查连接<br>ip_file=&quot;ip.txt&quot;            # 保存地址信息<br>id_file=&quot;cloudflare.ids&quot;<br>log_file=&quot;cloudflare.log&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">默认配置。需要和上面的变量顺序相同</span><br>default_config_arr=(&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;false&quot;,&quot;&quot;,&quot;&quot;,&quot;local&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;ip.txt&quot;,&quot;cloudflare.ids&quot;,&quot;cloudflare.log&quot;)<br>config_file=&quot;config.txt&quot;<br><br>create_default_config_file() &#123;<br>    echo &quot;zone_id=&quot; &gt;&gt; $config_file<br>    echo &quot;record_id=&quot; &gt;&gt; $config_file<br>    echo &quot;api_key=&quot; &gt;&gt; $config_file<br>    echo &quot;domain_main=&quot; &gt;&gt; $config_file<br>    echo &quot;proxied=&quot; &gt;&gt; $config_file<br>    echo &quot;record_type=&quot; &gt;&gt; $config_file<br>    echo &quot;eth_card=&quot; &gt;&gt; $config_file<br>    echo &quot;ip_index=local&quot; &gt;&gt; $config_file<br>    echo &quot;reset_ip=0&quot; &gt;&gt; $config_file<br>    echo &quot;enable_cache=0&quot; &gt;&gt; $config_file<br>    echo &quot;skip_connectivity_check&quot; &gt;&gt; $config_file<br>    echo &quot;ip_file=ip.txt&quot; &gt;&gt; $config_file<br>    echo &quot;id_file=cloudflare.ids&quot; &gt;&gt; $config_file<br>    echo &quot;log_file=cloudflare.log&quot; &gt;&gt; $config_file<br>&#125;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">声明日志函数</span><br>log() &#123;<br>    if [ &quot;$1&quot; ]; then<br>        if [ &quot;$enable_cache&quot; -eq &quot;1&quot; ]; then<br>            echo -e &quot;[$(date)] - $1&quot; &gt;&gt; $log_file<br>        fi<br>        echo &quot;[$(date)] - $1&quot;<br>    fi<br>&#125;<br>log &quot;Init config&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">初始化配置文件</span><br><br>if [ -e &quot;$config_file&quot; ]; then<br>    log &quot;File $config_file exists.&quot;<br>else<br>    log &quot;File $config_file does not exist.&quot;<br>    create_default_config_file<br>    log &quot;请将该配置文件填写完成:$&#123;config_file&#125;&quot;<br>    exit 1<br>fi<br><br>read_config_key() &#123;<br>    key=$1<br>    value=$(grep &quot;^$&#123;key&#125;=&quot; $config_file | cut -d&#x27;=&#x27; -f2)<br>    echo $value<br>&#125;<br><br>zone_id=$(read_config_key &quot;zone_id&quot;)<br>record_id=$(read_config_key &quot;record_id&quot;)<br>api_key=$(read_config_key &quot;api_key&quot;)<br>domain_main=$(read_config_key &quot;domain_main&quot;)<br>proxied=$(read_config_key &quot;proxied&quot;)<br>record_type=$(read_config_key &quot;record_type&quot;)<br>eth_card=$(read_config_key &quot;eth_card&quot;)<br>ip_index=$(read_config_key &quot;ip_index&quot;)<br>reset_ip=$(read_config_key &quot;reset_ip&quot;)<br>enable_cache=$(read_config_key &quot;enable_cache&quot;)<br>skip_connectivity_check=$(read_config_key &quot;skip_connectivity_check&quot;)<br>ip_file=$(read_config_key &quot;ip_file&quot;)<br>id_file=$(read_config_key &quot;id_file&quot;)<br>log_file=$(read_config_key &quot;log_file&quot;)<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">检查配置文件是否存在以及是否有进行填写</span><br>got_config=()<br>got_config+=$&#123;zone_id&#125;<br>got_config+=$&#123;record_id&#125;<br>got_config+=$&#123;api_key&#125;<br>got_config+=$&#123;domain_main&#125;<br>got_config+=$&#123;proxied&#125;<br>got_config+=$&#123;record_type&#125;<br>got_config+=$&#123;eth_card&#125;<br>got_config+=$&#123;ip_index&#125;<br>got_config+=$&#123;reset_ip&#125;<br>got_config+=$&#123;enable_cache&#125;<br>got_config+=$&#123;skip_connectivity_check&#125;<br>got_config+=$&#123;ip_file&#125;<br>got_config+=$&#123;id_file&#125;<br>got_config+=$&#123;log_file&#125;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">将数组默认配置连接成字符串</span><br>def_str=&quot;&quot;<br>for element in &quot;$&#123;default_config_arr[@]&#125;&quot;<br>do<br>    def_str=&quot;$def_str$element&quot;<br>done<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">将获取到的配置连接成字符串</span><br>got_str=&quot;&quot;<br>for element in &quot;$&#123;got_config[@]&#125;&quot;<br>do<br>    got_str=&quot;$got_str$element&quot;<br>done<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">判断字符串是否相等,即用户是否填写了配置文件</span><br>if [ &quot;$def_str&quot; = &quot;$got_str&quot; ]; then<br>    create_default_config_file<br>    log &quot;请将该配置文件填写完成:$&#123;config_file&#125;&quot;<br>fi<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">检查连接</span><br>if [ &quot;$skip_connectivity_check&quot; -eq &quot;0&quot; ]; then<br>    log &quot;Checking connectivity to Cloudflare&quot;<br>    # 检查和api.cloudflare.com的连接性<br>    if curl --connect-timeout 30 -s --head https://api.cloudflare.com/ &gt; /dev/null; then<br>        log &quot;Successfully connected to api.cloudflare.com&quot;<br>        # 连接成功，可以在这里继续后续的命令<br>    else<br>        log &quot;Error connecting to api.cloudflare.com. Stopping script execution.&quot;<br>        exit 1<br>    fi<br>else<br>    log &quot;Skipping check connectivity to Cloudflare&quot;<br>fi<br><br><br>curl --request GET \<br>  --url &quot;https://api.cloudflare.com/client/v4/zones/$zone_id/dns_records&quot; \<br>  --header &#x27;Content-Type: application/json&#x27; \<br>  --header &quot;Authorization: Bearer $api_key&quot;<br></code></pre></td></tr></table></figure><p>这是python版的：</p><blockquote><p>python版兼任<code>linux</code>和<code>windows</code>，shell版适合性能差的设备。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> datetime<br><span class="hljs-keyword">import</span> platform<br><span class="hljs-keyword">import</span> subprocess<br><span class="hljs-keyword">import</span> re<br><br><span class="hljs-comment"># 需要先安装以下pip包才能运行:</span><br><span class="hljs-comment"># requests</span><br><br><span class="hljs-comment"># 配置变量</span><br>zone_id=<span class="hljs-string">&quot;&quot;</span>  <span class="hljs-comment"># cloudFlare里域名的zone id</span><br>record_id=<span class="hljs-string">&quot;&quot;</span>   <span class="hljs-comment"># 你要修改的二级域名的record id,通过get脚本获取</span><br>api_key=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-comment"># 你的API key,用于修改dns记录的key</span><br>domain_main=<span class="hljs-string">&quot;&quot;</span>   <span class="hljs-comment"># 你的主域名, 如google.com</span><br>proxied=<span class="hljs-string">&quot;false&quot;</span><span class="hljs-comment"># 是否要启用cdn。合法值只有true和false</span><br>record_type = <span class="hljs-string">&quot;AAAA&quot;</span>  <span class="hljs-comment"># A or AAAA, ipv4 或 ipv6解析</span><br><br>eth_card = <span class="hljs-string">&quot;&quot;</span>  <span class="hljs-comment"># 使用本地方式获取IP绑定的网卡, 如eth0。此设置项只在linux上生效</span><br>ip_index = <span class="hljs-string">&quot;local&quot;</span>  <span class="hljs-comment"># 使用 &quot;internet&quot; 或 &quot;local&quot;, 获取地址的方式</span><br><br>reset_ip = <span class="hljs-number">0</span> <span class="hljs-comment"># 1为将ddns的ip改为localhost，2为手动输入ip，其他任意值为不是</span><br>enable_cache = <span class="hljs-number">0</span>  <span class="hljs-comment"># 1为保存缓存文件，其他任意值为不保存缓存文件</span><br>skip_connectivity_check = <span class="hljs-number">0</span> <span class="hljs-comment"># 0为不跳过脚本最开始运行的时候的检查连接</span><br>ip_file = <span class="hljs-string">&quot;ip.txt&quot;</span>  <span class="hljs-comment"># 保存地址信息的文件</span><br>id_file = <span class="hljs-string">&quot;cloudflare.ids&quot;</span><br>log_file = <span class="hljs-string">&quot;cloudflare.log&quot;</span><br><br><br><span class="hljs-comment"># 按照这个格式填入config.txt</span><br>example_config_file = &#123;<br>  <span class="hljs-string">&quot;zone_id&quot;</span>: <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-comment"># cloudFlare里域名的zone id</span><br>  <span class="hljs-string">&quot;record_id&quot;</span>: <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-comment"># 你要修改的二级域名的record id,通过get脚本获取</span><br>  <span class="hljs-string">&quot;api_key&quot;</span>: <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-comment"># 你的API key,用于修改dns记录的key</span><br>  <span class="hljs-string">&quot;domain_main&quot;</span>: <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-comment"># 你的主域名, 如google.com</span><br>  <span class="hljs-string">&quot;proxied&quot;</span>: <span class="hljs-string">&quot;false&quot;</span>, <span class="hljs-comment"># 是否要启用cdn。合法值只有true和false</span><br>  <span class="hljs-string">&quot;record_type&quot;</span>: <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-comment"># A or AAAA, ipv4 或 ipv6解析</span><br>  <span class="hljs-string">&quot;eth_card&quot;</span>: <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-comment"># 使用本地方式获取IP绑定的网卡, 如eth0。此设置项只在linux上生效</span><br>  <span class="hljs-string">&quot;ip_index&quot;</span>: <span class="hljs-string">&quot;local&quot;</span>, <span class="hljs-comment"># 使用 &quot;internet&quot; 或 &quot;local&quot;, 获取地址的方式。internal不支持获取ipv4地址</span><br>  <span class="hljs-string">&quot;reset_ip&quot;</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># 1为将ddns的ip改为localhost，其他任意值为不是</span><br>  <span class="hljs-string">&quot;enable_cache&quot;</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># 1为保存缓存文件，其他任意值为不保存缓存文件</span><br>  <span class="hljs-string">&quot;skip_connectivity_check&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment"># 0为不跳过脚本最开始运行的时候的检查连接</span><br>  <span class="hljs-string">&quot;ip_file&quot;</span>: <span class="hljs-string">&quot;ip.txt&quot;</span>, <span class="hljs-comment"># 不需要填写</span><br>  <span class="hljs-string">&quot;id_file&quot;</span>: <span class="hljs-string">&quot;cloudflare.ids&quot;</span>, <span class="hljs-comment"># 不需要填写</span><br>  <span class="hljs-string">&quot;log_file&quot;</span>: <span class="hljs-string">&quot;cloudflare.log&quot;</span> <span class="hljs-comment"># 不需要填写</span><br>&#125;<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">log</span>(<span class="hljs-params">message</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;日志函数&quot;&quot;&quot;</span><br>    <span class="hljs-keyword">if</span> message:<br>        <span class="hljs-keyword">if</span> enable_cache == <span class="hljs-number">1</span>:<br>            <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(log_file, <span class="hljs-string">&#x27;a&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>                f.write(<span class="hljs-string">f&quot;[<span class="hljs-subst">&#123;datetime.datetime.now()&#125;</span>] - <span class="hljs-subst">&#123;message&#125;</span>\n&quot;</span>)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[<span class="hljs-subst">&#123;datetime.datetime.now()&#125;</span>] - <span class="hljs-subst">&#123;message&#125;</span>&quot;</span>)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">init_value</span>():<br>    <span class="hljs-keyword">global</span> zone_id, record_id, api_key, domain_main, proxied, record_type, eth_card, skip_connectivity_check, ip_index, reset_ip, enable_cache, ip_file, id_file, og_file<br>    config_dict = &#123;&#125;<br>    script_dir = os.path.dirname(os.path.abspath(__file__))<br>    config_path = os.path.join(script_dir, <span class="hljs-string">&quot;config.txt&quot;</span>)<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(config_path, <span class="hljs-string">&#x27;r&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> file:<br>            <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> file:<br>                line = line.strip()<br>                <span class="hljs-keyword">if</span> line <span class="hljs-keyword">and</span> <span class="hljs-string">&#x27;=&#x27;</span> <span class="hljs-keyword">in</span> line:<br>                    key, value = line.split(<span class="hljs-string">&#x27;=&#x27;</span>, <span class="hljs-number">1</span>)<br>                    config_dict[key] = value<br>            common_keys = <span class="hljs-built_in">set</span>(config_dict.keys()) &amp; <span class="hljs-built_in">set</span>(example_config_file.keys())<br>            different_values = &#123;&#125;<br>            <span class="hljs-keyword">for</span> key <span class="hljs-keyword">in</span> common_keys:<br>                <span class="hljs-keyword">if</span> config_dict[key] != example_config_file[key]:<br>                    different_values[key] = (config_dict[key], example_config_file[key])<br>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(different_values) == <span class="hljs-number">0</span>:<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;请将该配置文件填写完成:<span class="hljs-subst">&#123;config_path&#125;</span>&quot;</span>)<br>                sys.exit()<br>            log(<span class="hljs-string">&quot;File config.txt exists.&quot;</span>)<br>            zone_id = config_dict.get(<span class="hljs-string">&#x27;zone_id&#x27;</span>)<br>            record_id = config_dict.get(<span class="hljs-string">&#x27;record_id&#x27;</span>)<br>            api_key = config_dict.get(<span class="hljs-string">&#x27;api_key&#x27;</span>)<br>            domain_main = config_dict.get(<span class="hljs-string">&#x27;domain_main&#x27;</span>)<br>            proxied = config_dict.get(<span class="hljs-string">&#x27;proxied&#x27;</span>)<br>            record_type = config_dict.get(<span class="hljs-string">&#x27;record_type&#x27;</span>)<br>            eth_card = config_dict.get(<span class="hljs-string">&#x27;eth_card&#x27;</span>)<br>            ip_index = config_dict.get(<span class="hljs-string">&#x27;ip_index&#x27;</span>)<br>            reset_ip = <span class="hljs-built_in">int</span>(config_dict.get(<span class="hljs-string">&#x27;reset_ip&#x27;</span>))<br>            enable_cache = <span class="hljs-built_in">int</span>(config_dict.get(<span class="hljs-string">&#x27;enable_cache&#x27;</span>))<br>            skip_connectivity_check = <span class="hljs-built_in">int</span>(config_dict.get(<span class="hljs-string">&#x27;skip_connectivity_check&#x27;</span>))<br>            ip_file = config_dict.get(<span class="hljs-string">&#x27;ip_file&#x27;</span>)<br>            id_file = config_dict.get(<span class="hljs-string">&#x27;id_file&#x27;</span>)<br>            log_file = config_dict.get(<span class="hljs-string">&#x27;log_file&#x27;</span>)<br>    <span class="hljs-keyword">except</span> FileNotFoundError:<br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(config_path, <span class="hljs-string">&#x27;w&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> file:<br>            <span class="hljs-keyword">for</span> key, value <span class="hljs-keyword">in</span> example_config_file.items():<br>                file.write(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;key&#125;</span>=<span class="hljs-subst">&#123;value&#125;</span>\n&#x27;</span>)<br>            <span class="hljs-comment">#json.dump(example_config_file, file, ensure_ascii=False, indent=4)</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;请将该配置文件填写完成:<span class="hljs-subst">&#123;config_path&#125;</span>&quot;</span>)<br>        sys.exit()<br><br><br><br><span class="hljs-string">&quot;&quot;&quot;更新Cloudflare DNS记录&quot;&quot;&quot;</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_cloudflare_dns</span>():    <br>    headers = &#123;<br>        <span class="hljs-string">&quot;Authorization&quot;</span>: <span class="hljs-string">&quot;Bearer &quot;</span> + api_key,<br>        <span class="hljs-string">&quot;Content-Type&quot;</span>: <span class="hljs-string">&quot;application/json&quot;</span>,<br>    &#125;<br>    update_response = requests.get(<span class="hljs-string">&quot;https://api.cloudflare.com/client/v4/zones/&quot;</span> + zone_id + <span class="hljs-string">&quot;/dns_records&quot;</span>, headers=headers)<br>    <span class="hljs-built_in">print</span>(update_response.json())<br><br><br><br><span class="hljs-comment"># 主逻辑</span><br>log(<span class="hljs-string">&quot;Init config&quot;</span>)<br>init_value()<br>get_cloudflare_dns()<br></code></pre></td></tr></table></figure><p>记住你的<code>zone_id</code>和<code>record_id</code>，填入配置文件中，然后使用下面的脚本更新解析记录：</p><blockquote><p>python版兼任<code>linux</code>和<code>windows</code>，shell版适合性能差的设备。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">先用get获取到<span class="hljs-built_in">id</span>,然后再填入配置文件</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">CHANGE THESE</span><br>zone_id=&quot;&quot;  # cloudFlare里域名的zone id<br>record_id=&quot;&quot;   # 你要修改的二级域名的record id,通过get脚本获取<br>api_key=&quot;&quot; # 你的API key,用于修改dns记录的key<br>domain_main=&quot;&quot;   # 你的主域名, 如google.com<br>proxied=&quot;false&quot;# 是否要启用cdn。合法值只有true和false<br>record_type=&quot;&quot;             # A or AAAA,ipv4 或 ipv6解析<br><br>eth_card=&quot;&quot;             # 使用本地方式获取ip绑定的网卡, 如eth0<br>ip_index=&quot;local&quot;            # use &quot;internet&quot; or &quot;local&quot;,使用本地方式还是网络方式获取地址<br><br>reset_ip=0 # 1为将ddns的ip改为localhost，2为手动输入ip，其他任意值为不是<br>enable_cache=&quot;0&quot;              # 1为保存缓存文件,其他任意值为不保存。保存缓存文件可让下次ddns更新速度更快，但缓存文件泄漏需要你去把cf_global_api_key重新revoke一次，不然会造成隐私泄漏<br>skip_connectivity_check=&quot;0&quot; # 0为不跳过脚本最开始运行的时候的检查连接<br>ip_file=&quot;ip.txt&quot;            # 保存地址信息<br>id_file=&quot;cloudflare.ids&quot;<br>log_file=&quot;cloudflare.log&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">默认配置。需要和上面的变量顺序相同</span><br>default_config_arr=(&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;false&quot;,&quot;&quot;,&quot;&quot;,&quot;local&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;ip.txt&quot;,&quot;cloudflare.ids&quot;,&quot;cloudflare.log&quot;)<br>config_file=&quot;config.txt&quot;<br><br>create_default_config_file() &#123;<br>    echo &quot;zone_id=&quot; &gt;&gt; $config_file<br>    echo &quot;record_id=&quot; &gt;&gt; $config_file<br>    echo &quot;api_key=&quot; &gt;&gt; $config_file<br>    echo &quot;domain_main=&quot; &gt;&gt; $config_file<br>    echo &quot;proxied=&quot; &gt;&gt; $config_file<br>    echo &quot;record_type=&quot; &gt;&gt; $config_file<br>    echo &quot;eth_card=&quot; &gt;&gt; $config_file<br>    echo &quot;ip_index=local&quot; &gt;&gt; $config_file<br>    echo &quot;reset_ip=0&quot; &gt;&gt; $config_file<br>    echo &quot;enable_cache=0&quot; &gt;&gt; $config_file<br>    echo &quot;skip_connectivity_check&quot; &gt;&gt; $config_file<br>    echo &quot;ip_file=ip.txt&quot; &gt;&gt; $config_file<br>    echo &quot;id_file=cloudflare.ids&quot; &gt;&gt; $config_file<br>    echo &quot;log_file=cloudflare.log&quot; &gt;&gt; $config_file<br>&#125;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">声明日志函数</span><br>log() &#123;<br>    if [ &quot;$1&quot; ]; then<br>        if [ &quot;$enable_cache&quot; -eq &quot;1&quot; ]; then<br>            echo -e &quot;[$(date)] - $1&quot; &gt;&gt; $log_file<br>        fi<br>        echo &quot;[$(date)] - $1&quot;<br>    fi<br>&#125;<br>log &quot;Init config&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">初始化配置文件</span><br><br>if [ -e &quot;$config_file&quot; ]; then<br>    log &quot;File $config_file exists.&quot;<br>else<br>    log &quot;File $config_file does not exist.&quot;<br>    create_default_config_file<br>    log &quot;请将该配置文件填写完成:$&#123;config_file&#125;&quot;<br>    exit 1<br>fi<br><br>read_config_key() &#123;<br>    key=$1<br>    value=$(grep &quot;^$&#123;key&#125;=&quot; $config_file | cut -d&#x27;=&#x27; -f2)<br>    echo $value<br>&#125;<br><br>zone_id=$(read_config_key &quot;zone_id&quot;)<br>record_id=$(read_config_key &quot;record_id&quot;)<br>api_key=$(read_config_key &quot;api_key&quot;)<br>domain_main=$(read_config_key &quot;domain_main&quot;)<br>proxied=$(read_config_key &quot;proxied&quot;)<br>record_type=$(read_config_key &quot;record_type&quot;)<br>eth_card=$(read_config_key &quot;eth_card&quot;)<br>ip_index=$(read_config_key &quot;ip_index&quot;)<br>reset_ip=$(read_config_key &quot;reset_ip&quot;)<br>enable_cache=$(read_config_key &quot;enable_cache&quot;)<br>skip_connectivity_check=$(read_config_key &quot;skip_connectivity_check&quot;)<br>ip_file=$(read_config_key &quot;ip_file&quot;)<br>id_file=$(read_config_key &quot;id_file&quot;)<br>log_file=$(read_config_key &quot;log_file&quot;)<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">检查配置文件是否存在以及是否有进行填写</span><br>got_config=()<br>got_config+=$&#123;zone_id&#125;<br>got_config+=$&#123;record_id&#125;<br>got_config+=$&#123;api_key&#125;<br>got_config+=$&#123;domain_main&#125;<br>got_config+=$&#123;proxied&#125;<br>got_config+=$&#123;record_type&#125;<br>got_config+=$&#123;eth_card&#125;<br>got_config+=$&#123;ip_index&#125;<br>got_config+=$&#123;reset_ip&#125;<br>got_config+=$&#123;enable_cache&#125;<br>got_config+=$&#123;skip_connectivity_check&#125;<br>got_config+=$&#123;ip_file&#125;<br>got_config+=$&#123;id_file&#125;<br>got_config+=$&#123;log_file&#125;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">将数组默认配置连接成字符串</span><br>def_str=&quot;&quot;<br>for element in &quot;$&#123;default_config_arr[@]&#125;&quot;<br>do<br>    def_str=&quot;$def_str$element&quot;<br>done<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">将获取到的配置连接成字符串</span><br>got_str=&quot;&quot;<br>for element in &quot;$&#123;got_config[@]&#125;&quot;<br>do<br>    got_str=&quot;$got_str$element&quot;<br>done<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">判断字符串是否相等,即用户是否填写了配置文件</span><br>if [ &quot;$def_str&quot; = &quot;$got_str&quot; ]; then<br>    create_default_config_file<br>    log &quot;请将该配置文件填写完成:$&#123;config_file&#125;&quot;<br>fi<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">检查连接</span><br>if [ &quot;$skip_connectivity_check&quot; -eq &quot;0&quot; ]; then<br>    log &quot;Checking connectivity to Cloudflare&quot;<br>    # 检查和api.cloudflare.com的连接性<br>    if curl --connect-timeout 30 -s --head https://api.cloudflare.com/ &gt; /dev/null; then<br>        log &quot;Successfully connected to api.cloudflare.com&quot;<br>        # 连接成功，可以在这里继续后续的命令<br>    else<br>        log &quot;Error connecting to api.cloudflare.com. Stopping script execution.&quot;<br>        exit 1<br>    fi<br>else<br>    log &quot;Skipping check connectivity to Cloudflare&quot;<br>fi<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">开始根据读取到的配置进行ddns设置</span><br>log &quot;Starting DDNS&quot;<br>if [ $record_type = &quot;AAAA&quot; ];then<br>if [ &quot;$reset_ip&quot; -eq &quot;1&quot; ]; then<br>ip=&quot;::1&quot;<br>log &quot;Reset DDNS address to loopback...&quot;<br>elif [ &quot;$reset_ip&quot; -eq &quot;2&quot; ]; then<br>read -p &quot;Please enter an AAAA record IP:\n&quot; ip<br>log &quot;Got it, now setting DDNS...&quot;<br>else<br>if [ $ip_index = &quot;internet&quot; ];then<br>ip=$(curl -6 ip.sb)<br>elif [ $ip_index = &quot;local&quot; ];then<br>if [ &quot;$user&quot; = &quot;root&quot; ];then<br># ip=$(ifconfig $eth_card | grep &#x27;inet6&#x27;| grep -v &#x27;::1&#x27;|grep -v &#x27;fe80&#x27; | cut -f2 | awk &#x27;&#123; print $2&#125;&#x27; | head -1)<br>ip=$(ifconfig $eth_card | awk &#x27;/inet6 24/&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | head -1)<br>else<br>ip=$(/sbin/ifconfig $eth_card | grep &#x27;inet6&#x27;| grep -v &#x27;::1&#x27;|grep -v &#x27;fe80&#x27; | cut -f2 | awk &#x27;&#123; print $2&#125;&#x27; | head -1)<br>fi<br>else<br>log &quot;Error IP index, please input the right type&quot;<br>exit 0<br>fi<br>fi<br>elif [ $record_type = &quot;A&quot; ];then<br>if [ &quot;$reset_ip&quot; -eq &quot;1&quot; ]; then<br>ip=&quot;127.0.0.1&quot;<br>log &quot;Reset DDNS address to loopback...&quot;<br>elif [ &quot;$reset_ip&quot; -eq &quot;2&quot; ]; then<br>read -p &quot;Please enter an A record IP:\n&quot; ip<br>log &quot;Got it, now setting DDNS...&quot;<br>else<br>if [ $ip_index = &quot;internet&quot; ];then<br>ip=$(curl -4 ip.sb)<br>elif [ $ip_index = &quot;local&quot; ];then<br>if [ &quot;$user&quot; = &quot;root&quot; ];then<br>ip=$(ifconfig $eth_card | grep &#x27;inet&#x27;| grep -v &#x27;127.0.0.1&#x27; | grep -v &#x27;inet6&#x27;|cut -f2 | awk &#x27;&#123; print $2&#125;&#x27;)<br>else<br>ip=$(/sbin/ifconfig $eth_card | grep &#x27;inet&#x27;| grep -v &#x27;127.0.0.1&#x27; | grep -v &#x27;inet6&#x27;|cut -f2 | awk &#x27;&#123; print $2&#125;&#x27;)<br>fi<br>else<br>log &quot;Error IP index, please input the right type&quot;<br>exit 0<br>fi<br>fi<br>else<br>    log &quot;Error DNS type&quot;<br>    exit 0<br>fi<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">SCRIPT START</span><br>log &quot;Check Initiated&quot;<br>log &quot;Your ip is:    $&#123;ip&#125;&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">判断ip是否发生变化</span><br>if [ &quot;$enable_cache&quot; -eq &quot;1&quot; ]; then<br>    if [ -f $ip_file ]; then<br>        old_ip=$(cat $ip_file)<br>        if [ $ip == $old_ip ]; then<br>            log &quot;IP has not changed.&quot;<br>            exit 0<br>        fi<br>    fi<br>fi<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">更新DNS记录</span><br>update=$(curl --request PATCH \<br>  --url &quot;https://api.cloudflare.com/client/v4/zones/$zone_id/dns_records/$record_id&quot; \<br>  --header &#x27;Content-Type: application/json&#x27; \<br>  --header &quot;Authorization: Bearer $api_key&quot; \<br>  --data &quot;&#123;\&quot;content\&quot;: \&quot;$ip\&quot;, \&quot;proxied\&quot;: $proxied, \&quot;type\&quot;: \&quot;$record_type\&quot;, \&quot;comment\&quot;: \&quot;DDNS\&quot;, \&quot;ttl\&quot;: 1&#125;&quot;)<br><br>echo &quot;$update&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">输出DDNS更新情况</span><br>if [[ $update == *&quot;\&quot;success\&quot;:true&quot;* ]]; then<br>    message=&quot;$api_key -&gt; $ip&quot;<br>    if [ &quot;$enable_cache&quot; -eq &quot;1&quot; ]; then<br>        echo &quot;$message&quot; &gt; $ip_file<br>    fi<br>    log &quot;$message&quot;<br>else<br>    message=&quot;API UPDATE FAILED. DUMPING RESULTS:\n$update&quot;<br>    log &quot;$message&quot;<br>    exit 1<br>fi<br></code></pre></td></tr></table></figure><p>这是python版的：</p><blockquote><p>python版兼任<code>linux</code>和<code>windows</code>，shell版适合性能差的设备。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> datetime<br><span class="hljs-keyword">import</span> platform<br><span class="hljs-keyword">import</span> subprocess<br><span class="hljs-keyword">import</span> re<br><br><span class="hljs-comment"># 需要先安装以下pip包才能运行:</span><br><span class="hljs-comment"># requests</span><br><br><span class="hljs-comment"># 配置变量</span><br>zone_id=<span class="hljs-string">&quot;&quot;</span>  <span class="hljs-comment"># cloudFlare里域名的zone id</span><br>record_id=<span class="hljs-string">&quot;&quot;</span>   <span class="hljs-comment"># 你要修改的二级域名的record id,通过get脚本获取</span><br>api_key=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-comment"># 你的API key,用于修改dns记录的key</span><br>domain_main=<span class="hljs-string">&quot;&quot;</span>   <span class="hljs-comment"># 你的主域名, 如google.com</span><br>proxied=<span class="hljs-string">&quot;false&quot;</span><span class="hljs-comment"># 是否要启用cdn。合法值只有true和false</span><br>record_type = <span class="hljs-string">&quot;AAAA&quot;</span>  <span class="hljs-comment"># A or AAAA, ipv4 或 ipv6解析</span><br><br>eth_card = <span class="hljs-string">&quot;&quot;</span>  <span class="hljs-comment"># 使用本地方式获取IP绑定的网卡, 如eth0。此设置项只在linux上生效</span><br>ip_index = <span class="hljs-string">&quot;local&quot;</span>  <span class="hljs-comment"># 使用 &quot;internet&quot; 或 &quot;local&quot;, 获取地址的方式</span><br><br>reset_ip = <span class="hljs-number">0</span> <span class="hljs-comment"># 1为将ddns的ip改为localhost，2为手动输入ip，其他任意值为不是</span><br>enable_cache = <span class="hljs-number">0</span>  <span class="hljs-comment"># 1为保存缓存文件，其他任意值为不保存缓存文件</span><br>skip_connectivity_check = <span class="hljs-number">0</span> <span class="hljs-comment"># 0为不跳过脚本最开始运行的时候的检查连接</span><br>ip_file = <span class="hljs-string">&quot;ip.txt&quot;</span>  <span class="hljs-comment"># 保存地址信息的文件</span><br>id_file = <span class="hljs-string">&quot;cloudflare.ids&quot;</span><br>log_file = <span class="hljs-string">&quot;cloudflare.log&quot;</span><br><br><br><span class="hljs-comment"># 按照这个格式填入config.txt</span><br>example_config_file = &#123;<br>  <span class="hljs-string">&quot;zone_id&quot;</span>: <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-comment"># cloudFlare里域名的zone id</span><br>  <span class="hljs-string">&quot;record_id&quot;</span>: <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-comment"># 你要修改的二级域名的record id,通过get脚本获取</span><br>  <span class="hljs-string">&quot;api_key&quot;</span>: <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-comment"># 你的API key,用于修改dns记录的key</span><br>  <span class="hljs-string">&quot;domain_main&quot;</span>: <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-comment"># 你的主域名, 如google.com</span><br>  <span class="hljs-string">&quot;proxied&quot;</span>: <span class="hljs-string">&quot;false&quot;</span>, <span class="hljs-comment"># 是否要启用cdn。合法值只有true和false</span><br>  <span class="hljs-string">&quot;record_type&quot;</span>: <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-comment"># A or AAAA, ipv4 或 ipv6解析</span><br>  <span class="hljs-string">&quot;eth_card&quot;</span>: <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-comment"># 使用本地方式获取IP绑定的网卡, 如eth0。此设置项只在linux上生效</span><br>  <span class="hljs-string">&quot;ip_index&quot;</span>: <span class="hljs-string">&quot;local&quot;</span>, <span class="hljs-comment"># 使用 &quot;internet&quot; 或 &quot;local&quot;, 获取地址的方式。internal不支持获取ipv4地址</span><br>  <span class="hljs-string">&quot;reset_ip&quot;</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># 1为将ddns的ip改为localhost，其他任意值为不是</span><br>  <span class="hljs-string">&quot;enable_cache&quot;</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># 1为保存缓存文件，其他任意值为不保存缓存文件</span><br>  <span class="hljs-string">&quot;skip_connectivity_check&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment"># 0为不跳过脚本最开始运行的时候的检查连接</span><br>  <span class="hljs-string">&quot;ip_file&quot;</span>: <span class="hljs-string">&quot;ip.txt&quot;</span>, <span class="hljs-comment"># 不需要填写</span><br>  <span class="hljs-string">&quot;id_file&quot;</span>: <span class="hljs-string">&quot;cloudflare.ids&quot;</span>, <span class="hljs-comment"># 不需要填写</span><br>  <span class="hljs-string">&quot;log_file&quot;</span>: <span class="hljs-string">&quot;cloudflare.log&quot;</span> <span class="hljs-comment"># 不需要填写</span><br>&#125;<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">log</span>(<span class="hljs-params">message</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;日志函数&quot;&quot;&quot;</span><br>    <span class="hljs-keyword">if</span> message:<br>        <span class="hljs-keyword">if</span> enable_cache == <span class="hljs-number">1</span>:<br>            <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(log_file, <span class="hljs-string">&#x27;a&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>                f.write(<span class="hljs-string">f&quot;[<span class="hljs-subst">&#123;datetime.datetime.now()&#125;</span>] - <span class="hljs-subst">&#123;message&#125;</span>\n&quot;</span>)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[<span class="hljs-subst">&#123;datetime.datetime.now()&#125;</span>] - <span class="hljs-subst">&#123;message&#125;</span>&quot;</span>)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">init_value</span>():<br>    <span class="hljs-keyword">global</span> zone_id, record_id, api_key, domain_main, proxied, record_type, eth_card, skip_connectivity_check, ip_index, reset_ip, enable_cache, ip_file, id_file, og_file<br>    config_dict = &#123;&#125;<br>    script_dir = os.path.dirname(os.path.abspath(__file__))<br>    config_path = os.path.join(script_dir, <span class="hljs-string">&quot;config.txt&quot;</span>)<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(config_path, <span class="hljs-string">&#x27;r&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> file:<br>            <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> file:<br>                line = line.strip()<br>                <span class="hljs-keyword">if</span> line <span class="hljs-keyword">and</span> <span class="hljs-string">&#x27;=&#x27;</span> <span class="hljs-keyword">in</span> line:<br>                    key, value = line.split(<span class="hljs-string">&#x27;=&#x27;</span>, <span class="hljs-number">1</span>)<br>                    config_dict[key] = value<br>            common_keys = <span class="hljs-built_in">set</span>(config_dict.keys()) &amp; <span class="hljs-built_in">set</span>(example_config_file.keys())<br>            different_values = &#123;&#125;<br>            <span class="hljs-keyword">for</span> key <span class="hljs-keyword">in</span> common_keys:<br>                <span class="hljs-keyword">if</span> config_dict[key] != example_config_file[key]:<br>                    different_values[key] = (config_dict[key], example_config_file[key])<br>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(different_values) == <span class="hljs-number">0</span>:<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;请将该配置文件填写完成:<span class="hljs-subst">&#123;config_path&#125;</span>&quot;</span>)<br>                sys.exit()<br>            log(<span class="hljs-string">&quot;File config.txt exists.&quot;</span>)<br>            zone_id = config_dict.get(<span class="hljs-string">&#x27;zone_id&#x27;</span>)<br>            record_id = config_dict.get(<span class="hljs-string">&#x27;record_id&#x27;</span>)<br>            api_key = config_dict.get(<span class="hljs-string">&#x27;api_key&#x27;</span>)<br>            domain_main = config_dict.get(<span class="hljs-string">&#x27;domain_main&#x27;</span>)<br>            proxied = config_dict.get(<span class="hljs-string">&#x27;proxied&#x27;</span>)<br>            record_type = config_dict.get(<span class="hljs-string">&#x27;record_type&#x27;</span>)<br>            eth_card = config_dict.get(<span class="hljs-string">&#x27;eth_card&#x27;</span>)<br>            ip_index = config_dict.get(<span class="hljs-string">&#x27;ip_index&#x27;</span>)<br>            reset_ip = <span class="hljs-built_in">int</span>(config_dict.get(<span class="hljs-string">&#x27;reset_ip&#x27;</span>))<br>            enable_cache = <span class="hljs-built_in">int</span>(config_dict.get(<span class="hljs-string">&#x27;enable_cache&#x27;</span>))<br>            skip_connectivity_check = <span class="hljs-built_in">int</span>(config_dict.get(<span class="hljs-string">&#x27;skip_connectivity_check&#x27;</span>))<br>            ip_file = config_dict.get(<span class="hljs-string">&#x27;ip_file&#x27;</span>)<br>            id_file = config_dict.get(<span class="hljs-string">&#x27;id_file&#x27;</span>)<br>            log_file = config_dict.get(<span class="hljs-string">&#x27;log_file&#x27;</span>)<br>    <span class="hljs-keyword">except</span> FileNotFoundError:<br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(config_path, <span class="hljs-string">&#x27;w&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> file:<br>            <span class="hljs-keyword">for</span> key, value <span class="hljs-keyword">in</span> example_config_file.items():<br>                file.write(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;key&#125;</span>=<span class="hljs-subst">&#123;value&#125;</span>\n&#x27;</span>)<br>            <span class="hljs-comment">#json.dump(example_config_file, file, ensure_ascii=False, indent=4)</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;请将该配置文件填写完成:<span class="hljs-subst">&#123;config_path&#125;</span>&quot;</span>)<br>        sys.exit()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_ipv6_address_windows</span>():<br>    <span class="hljs-string">&quot;&quot;&quot;在Windows上获取临时IPv6地址&quot;&quot;&quot;</span><br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-comment"># 执行ipconfig命令并捕获输出</span><br>        output = subprocess.check_output([<span class="hljs-string">&quot;ipconfig&quot;</span>], text=<span class="hljs-literal">True</span>)<br>        <span class="hljs-comment"># 使用正则表达式查找临时IPv6地址</span><br>        <span class="hljs-keyword">match</span> = re.search(<span class="hljs-string">r&quot;临时 IPv6 地址.*: ([a-fA-F0-9:]+)&quot;</span>, output)<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">match</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">match</span>.group(<span class="hljs-number">1</span>)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Error: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_ipv6_address_linux</span>():<br>    <span class="hljs-string">&quot;&quot;&quot;在Linux上获取Global IPv6地址&quot;&quot;&quot;</span><br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-comment"># 执行ip -6 addr show命令并捕获输出</span><br>        output = subprocess.check_output([<span class="hljs-string">&quot;ip&quot;</span>, <span class="hljs-string">&quot;-6&quot;</span>, <span class="hljs-string">&quot;addr&quot;</span>, <span class="hljs-string">&quot;show&quot;</span>, eth_card], text=<span class="hljs-literal">True</span>)<br>        <span class="hljs-comment"># 使用正则表达式查找global scope的IPv6地址</span><br>        <span class="hljs-keyword">match</span> = re.search(<span class="hljs-string">r&quot;inet6\s+([a-fA-F0-9:]+)/\d+\s+scope global&quot;</span>, output)<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">match</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">match</span>.group(<span class="hljs-number">1</span>)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Error: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_ipv6_platform</span>():<br>    <span class="hljs-keyword">if</span> platform.system() == <span class="hljs-string">&quot;Windows&quot;</span>:<br>        <span class="hljs-keyword">return</span> get_ipv6_address_windows()<br>    <span class="hljs-keyword">elif</span> platform.system() == <span class="hljs-string">&quot;Linux&quot;</span>:<br>        <span class="hljs-keyword">return</span> get_ipv6_address_linux()<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_ip</span>():<br>    <span class="hljs-string">&quot;&quot;&quot;获取IP地址&quot;&quot;&quot;</span><br>    <span class="hljs-keyword">if</span> record_type == <span class="hljs-string">&quot;AAAA&quot;</span>:<br>        <span class="hljs-keyword">if</span> reset_ip == <span class="hljs-number">1</span>:<br>            log(<span class="hljs-string">&quot;Reset DDNS address to loopback...&quot;</span>)<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;::1&quot;</span><br>        <span class="hljs-keyword">elif</span> reset_ip == <span class="hljs-number">2</span>:<br>            ip = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;Please enter an AAAA record IP:\n&quot;</span>)<br>            log(<span class="hljs-string">&quot;Got it, now setting DDNS...&quot;</span>)<br>            <span class="hljs-keyword">return</span> ip<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">if</span> ip_index == <span class="hljs-string">&quot;internet&quot;</span>:<br>                <span class="hljs-keyword">return</span> requests.get(<span class="hljs-string">&#x27;https://api64.ipify.org?format=json&#x27;</span>).json()[<span class="hljs-string">&#x27;ip&#x27;</span>]<br>            <span class="hljs-keyword">elif</span> ip_index == <span class="hljs-string">&quot;local&quot;</span>:<br>                <span class="hljs-keyword">return</span> get_ipv6_platform()<br>                <span class="hljs-keyword">pass</span><br>    <span class="hljs-keyword">elif</span> record_type == <span class="hljs-string">&quot;A&quot;</span>:<br>        <span class="hljs-keyword">if</span> reset_ip == <span class="hljs-number">1</span>:<br>            log(<span class="hljs-string">&quot;Reset DDNS address to loopback...&quot;</span>)<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;127.0.0.1&quot;</span><br>        <span class="hljs-keyword">elif</span> reset_ip == <span class="hljs-number">2</span>:<br>            ip = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;Please enter an A record IP:\n&quot;</span>)<br>            log(<span class="hljs-string">&quot;Got it, now setting DDNS...&quot;</span>)<br>            <span class="hljs-keyword">return</span> ip<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">if</span> ip_index == <span class="hljs-string">&quot;internet&quot;</span>:<br>                <span class="hljs-keyword">return</span> requests.get(<span class="hljs-string">&#x27;https://api.ipify.org?format=json&#x27;</span>).json()[<span class="hljs-string">&#x27;ip&#x27;</span>]<br>            <span class="hljs-keyword">elif</span> ip_index == <span class="hljs-string">&quot;local&quot;</span>:<br>                <span class="hljs-keyword">return</span> <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;输入你的ipv4地址\n&quot;</span>)<br>                <span class="hljs-keyword">pass</span><br>    <span class="hljs-keyword">else</span>:<br>        log(<span class="hljs-string">&quot;Error DNS type&quot;</span>)<br>        exit(<span class="hljs-number">0</span>)<br>        <br><br><span class="hljs-string">&quot;&quot;&quot;更新Cloudflare DNS记录&quot;&quot;&quot;</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">update_cloudflare_dns</span>(<span class="hljs-params">ip</span>):<br>    <span class="hljs-comment"># 更新DNS记录</span><br>    <br>    proxied_tmp = <span class="hljs-literal">False</span><br>    <span class="hljs-keyword">if</span> proxied == <span class="hljs-string">&quot;true&quot;</span>:<br>        proxied_tmp = <span class="hljs-literal">True</span><br>    <br>    headers = &#123;<br>        <span class="hljs-string">&quot;Authorization&quot;</span>: <span class="hljs-string">&quot;Bearer &quot;</span> + api_key,<br>        <span class="hljs-string">&quot;Content-Type&quot;</span>: <span class="hljs-string">&quot;application/json&quot;</span>,<br>    &#125;<br>    data = &#123;<br>        <span class="hljs-string">&quot;content&quot;</span>: ip,<br>        <span class="hljs-string">&quot;name&quot;</span>: domain_main,<br>        <span class="hljs-string">&quot;proxied&quot;</span>: proxied_tmp,<br>        <span class="hljs-string">&quot;type&quot;</span>: record_type,<br>        <span class="hljs-string">&quot;comment&quot;</span>: <span class="hljs-string">&quot;DDNS&quot;</span>,<br>        <span class="hljs-string">&quot;ttl&quot;</span>: <span class="hljs-string">&quot;1&quot;</span><br>    &#125;<br>    update_response = requests.patch(<span class="hljs-string">&quot;https://api.cloudflare.com/client/v4/zones/&quot;</span> + zone_id + <span class="hljs-string">&quot;/dns_records/&quot;</span> + record_id, headers=headers, json=data)<br>    <span class="hljs-keyword">return</span> update_response.json()<br><br><br><br><span class="hljs-comment"># 主逻辑</span><br>log(<span class="hljs-string">&quot;Init config&quot;</span>)<br>init_value()<br>log(<span class="hljs-string">&quot;Starting DDNS&quot;</span>)<br><span class="hljs-keyword">if</span> skip_connectivity_check == <span class="hljs-number">0</span>:<br>    <span class="hljs-comment"># 检查连接性</span><br>    log(<span class="hljs-string">&quot;Checking connectivity to cloudflare&quot;</span>)<br>    <span class="hljs-keyword">try</span>:<br>        response = requests.get(<span class="hljs-string">&quot;https://api.cloudflare.com&quot;</span>, timeout=<span class="hljs-number">30</span>)<br>        <span class="hljs-comment"># 如果请求成功，状态码为200</span><br>        <span class="hljs-keyword">if</span> response.ok:<br>            log(<span class="hljs-string">&quot;Successfully connected to https://api.cloudflare.com&quot;</span>)<br>        <span class="hljs-keyword">else</span>:<br>            log(<span class="hljs-string">&quot;Connected to https://api.cloudflare.com but received a non-success status code:&quot;</span>, response.status_code)<br>    <span class="hljs-keyword">except</span> requests.exceptions.RequestException <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-comment"># 处理连接错误</span><br>        log(<span class="hljs-string">&quot;Error connecting to https://api.cloudflare.com&quot;</span>)<br>        log(e)<br>        sys.exit()<br>    <span class="hljs-keyword">except</span> requests.exceptions.Timeout:<br>        <span class="hljs-comment"># 处理连接超时</span><br>        log(<span class="hljs-string">&quot;Timeout connecting to https://api.cloudflare.com&quot;</span>)<br>        log(e)<br>        sys.exit()<br>    log(<span class="hljs-string">&quot;Check Initiated&quot;</span>)<br><span class="hljs-keyword">else</span>:<br>    log(<span class="hljs-string">&quot;Skipping check connectivity to Cloudflare&quot;</span>)<br><br><span class="hljs-comment"># 获取IP地址</span><br>ip = get_ip()<br>log(<span class="hljs-string">f&quot;Your ip is:    <span class="hljs-subst">&#123;ip&#125;</span>&quot;</span>)<br><br><span class="hljs-comment"># 判断IP是否发生变化</span><br>old_ip = <span class="hljs-literal">None</span><br><span class="hljs-keyword">if</span> enable_cache == <span class="hljs-number">1</span> <span class="hljs-keyword">and</span> os.path.exists(ip_file):<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(ip_file) <span class="hljs-keyword">as</span> f:<br>        old_ip = f.read().strip()<br><span class="hljs-keyword">if</span> ip == old_ip:<br>    <span class="hljs-keyword">if</span> ip == <span class="hljs-literal">None</span>:<br>        log(<span class="hljs-string">&quot;Check your Internet connection.&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        log(<span class="hljs-string">&quot;IP has not changed.&quot;</span>)<br>    exit(<span class="hljs-number">0</span>)<br><br><span class="hljs-comment"># 更新DNS记录</span><br>update_result = update_cloudflare_dns(ip)<br><span class="hljs-keyword">if</span> update_result[<span class="hljs-string">&#x27;success&#x27;</span>]:<br>    message = <span class="hljs-string">f&quot;Now <span class="hljs-subst">&#123;record_id&#125;</span> -&gt; <span class="hljs-subst">&#123;ip&#125;</span>&quot;</span><br>    <span class="hljs-keyword">if</span> enable_cache == <span class="hljs-number">1</span>:<br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(ip_file, <span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>            f.write(message)<br>    log(message)<br><span class="hljs-keyword">else</span>:<br>    message = <span class="hljs-string">f&quot;API UPDATE FAILED. DUMPING RESULTS:\n<span class="hljs-subst">&#123;update_result&#125;</span>&quot;</span><br>    log(message)<br>    exit(<span class="hljs-number">1</span>)<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>记本科毕业实习的代码</title>
    <link href="/2024/03/01/9%E8%AE%B0%E6%9C%AC%E7%A7%91%E6%AF%95%E4%B8%9A%E5%AE%9E%E4%B9%A0%E7%9A%84%E4%BB%A3%E7%A0%81-240301/"/>
    <url>/2024/03/01/9%E8%AE%B0%E6%9C%AC%E7%A7%91%E6%AF%95%E4%B8%9A%E5%AE%9E%E4%B9%A0%E7%9A%84%E4%BB%A3%E7%A0%81-240301/</url>
    
    <content type="html"><![CDATA[<p><img src="https://www.runoob.com/wp-content/uploads/2013/07/pic_html5.gif" alt="封面"></p><h1 id="tl-dr"><a href="#tl-dr" class="headerlink" title="tl;dr"></a>tl;dr</h1><p>说来也怪，自动化专业开html css的毕业实习</p><p>所有效果均可在<a href="https://syugraduate.coolenoch.ink/">这里</a>预览。<del>我加了一点小私货hhh</del></p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><h2 id="main-html"><a href="#main-html" class="headerlink" title="main.html"></a><a href="https://syugraduate.coolenoch.ink/main.html"><code>main.html</code></a></h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>沈阳大学实习<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        helloworld<br>        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>一级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>二级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>三级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h4</span>&gt;</span>四级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h5</span>&gt;</span>五级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h5</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>六级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">hr</span>/&gt;</span><br><br>        <span class="hljs-comment">&lt;!-- 图片标签 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;img/miku.jpg&quot;</span>/&gt;</span><br><br>        <span class="hljs-comment">&lt;!-- 超链接标签 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://coolenoch.ink&quot;</span>&gt;</span>访问博客<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">imput</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">imput</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="cssdemo-html"><a href="#cssdemo-html" class="headerlink" title="cssdemo.html"></a><a href="https://syugraduate.coolenoch.ink/cssdemo.html"><code>cssdemo.html</code></a></h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>wdnmd<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span><br><span class="language-css">            <span class="hljs-selector-tag">h1</span>&#123;</span><br><span class="language-css">                <span class="hljs-attribute">color</span>:red; <span class="hljs-comment">/*颜色*/</span></span><br><span class="language-css">                <span class="hljs-attribute">font-size</span>: <span class="hljs-number">40px</span>; <span class="hljs-comment">/*字号*/</span></span><br><span class="language-css">            &#125;</span><br><span class="language-css">            <span class="hljs-selector-class">.yan</span>&#123;</span><br><span class="language-css">                <span class="hljs-attribute">color</span>: <span class="hljs-number">#ff6700</span>;</span><br><span class="language-css">            &#125;</span><br><span class="language-css">        </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>hello<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>goodbye<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>hi<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>oppo<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- 类选择器 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;yan&quot;</span>&gt;</span>vivo<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;yan&quot;</span>&gt;</span>huawei<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="elasticView-html"><a href="#elasticView-html" class="headerlink" title="elasticView.html"></a><a href="https://syugraduate.coolenoch.ink/elasticView.html"><code>elasticView.html</code></a></h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>wdnmd<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;css/elasticView/view.css&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>hello<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;first&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;one&quot;</span>&gt;</span>one<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;two&quot;</span>&gt;</span>two<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;three&quot;</span>&gt;</span>three<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="miShop-html"><a href="#miShop-html" class="headerlink" title="miShop.html"></a><a href="https://syugraduate.coolenoch.ink/miShop.html"><code>miShop.html</code></a></h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>wdnmd<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;css/miShop/mi.css&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;header&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;pro&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>其他的开发杂记</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>记一次未完成的Android编译....</title>
    <link href="/2024/01/25/8%E8%AE%B0%E4%B8%80%E6%AC%A1%E6%9C%AA%E5%AE%8C%E6%88%90%E7%9A%84Android%E7%BC%96%E8%AF%91....-240125/"/>
    <url>/2024/01/25/8%E8%AE%B0%E4%B8%80%E6%AC%A1%E6%9C%AA%E5%AE%8C%E6%88%90%E7%9A%84Android%E7%BC%96%E8%AF%91....-240125/</url>
    
    <content type="html"><![CDATA[<p><img src="https://tse1-mm.cn.bing.net/th/id/OIP-C.PXi-K-Ym4EAqkcjluImyBAHaD-?w=276&h=180&c=7&r=0&o=5&dpr=1.3&pid=1.7" alt="封面"></p><h1 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h1><p>这是一台“过时”的华为平板，搭载高通616处理器，3+16GB存储组合，10.1英尺1920x1200屏幕。<br><em><strong>⚠️万字长文预警</strong></em></p><h1 id="硬件和软件环境"><a href="#硬件和软件环境" class="headerlink" title="硬件和软件环境"></a>硬件和软件环境</h1><p>我用的是平时拿来干活的笔记本。硬件方面：<code>i5-10300H</code>的处理器，<code>16GB 2933MHz</code>的主存，编译环境用的硬盘是<code>Samsung Evo 870 1TB</code>；软件方面：采用<code>Debian 12</code>系统。<del><em>主要是Ubuntu太臃肿了</em></del></p><h1 id="装依赖"><a href="#装依赖" class="headerlink" title="装依赖"></a>装依赖</h1><h2 id="Part-1-下载和解压"><a href="#Part-1-下载和解压" class="headerlink" title="Part 1: 下载和解压"></a>Part 1: 下载和解压</h2><p>第一个要装的就是<code>adb</code>和<code>fastboot</code>。</p><blockquote><p>⚠️ 注意！不要去<code>apt</code>源里下载，那里的版本太老了。前往谷歌官方下载：<code>https://dl.google.com/android/repository/platform-tools-latest-linux.zip</code></p></blockquote><p>按照<code>Lineage</code>官方的<a href="https://wiki.lineageos.org/devices/dipper/build/#prepare-the-device-specific-code">说法(这一部分不分机型，都是通的，所以这个超链接指向了小米8的页面)</a>，把他解压到<code>~</code>下吧：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">unzip platform-tools-latest-linux.zip -d ~<br></code></pre></td></tr></table></figure><p>现在你确定一下<code>~</code>目录下是否存在<code>platform-tools</code>文件夹，如果存在则继续。<br>打开你的<code>~/.profile</code>或者<code>~/.zshrc</code>(本文全文将以<code>.zshrc</code>进行举例说明)，在<code>source $ZSH/oh-my-zsh.sh</code>前添加以下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># add Android SDK platform tools to path</span><br><span class="hljs-keyword">if</span> [ -d <span class="hljs-string">&quot;<span class="hljs-variable">$HOME</span>/platform-tools&quot;</span> ] ; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">export</span> PATH=<span class="hljs-string">&quot;<span class="hljs-variable">$HOME</span>/platform-tools:<span class="hljs-variable">$PATH</span>&quot;</span><br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><p>然后，<code>source</code>它，然后<code>echo $PATH</code>一下看看环境变量里是否存在<code>~/platform-tools</code>，存在就可以进行下一步。</p><h2 id="Part-2-从apt源安装"><a href="#Part-2-从apt源安装" class="headerlink" title="Part 2: 从apt源安装"></a>Part 2: 从apt源安装</h2><p>使用apt把这些都装进去：<code>bc bison build-essential ccache curl flex g++-multilib gcc-multilib git git-lfs gnupg gperf imagemagick lib32readline-dev lib32z1-dev libelf-dev liblz4-tool libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev</code><br>对于我使用的<code>Debian 12</code>系统，再安装这些:<code>lib32ncurses-dev libncurses5 libncurses5-dev</code></p><p>对于<code>Ubuntu</code>用户，请按照<code>Lineage</code>官网说法进行操作：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs text"># For Ubuntu 23.10 (mantic), install libncurses5 from 23.04 (lunar) as follows:<br>wget http://archive.ubuntu.com/ubuntu/pool/universe/n/ncurses/libtinfo5_6.4-2_amd64.deb &amp;&amp; sudo dpkg -i libtinfo5_6.4-2_amd64.deb &amp;&amp; rm -f libtinfo5_6.4-2_amd64.deb<br>wget http://archive.ubuntu.com/ubuntu/pool/universe/n/ncurses/libncurses5_6.4-2_amd64.deb &amp;&amp; sudo dpkg -i libncurses5_6.4-2_amd64.deb &amp;&amp; rm -f libncurses5_6.4-2_amd64.deb<br><br># While for Ubuntu versions older than 23.10 (mantic), simply install:<br>lib32ncurses5-dev libncurses5 libncurses5-dev<br><br># Additionally, for Ubuntu versions older than 20.04 (focal), install also:<br>libwxgtk3.0-dev<br><br># While for Ubuntu versions older than 16.04 (xenial), install:<br>libwxgtk2.8-dev<br></code></pre></td></tr></table></figure><h2 id="Part-3-OpenJDK的安装"><a href="#Part-3-OpenJDK的安装" class="headerlink" title="Part 3: OpenJDK的安装"></a>Part 3: OpenJDK的安装</h2><p><code>OpenJDK</code>的版本取决于你想要编译的<code>Lineage OS</code>版本。<br>下面的信息来自于上面提到的<code>Lineage</code>官网教程。<br><code>LineageOS</code> 18.1及更高版本: <code>openjdk-11 openjdk-11-source</code><br><code>LineageOS</code> 16.0-17.1: <code>openjdk-9 openjdk-9-source</code><br><code>LineageOS</code> 14.1-15.1: <code>openjdk-8-jdk</code></p><blockquote><p>⚠️注意: 构建这些版本时你需要在<code>/etc/java-8-openjdk/security/java.security</code>中从<code>jdk.tls.disabledAlgorithms</code>中移除<code>TLSv1</code>和<code>TLSv1.1</code>相关的东西。</p></blockquote><p><code>LineageOS</code> 11.0-13.0: <code>openjdk-7-jdk</code></p><blockquote><p><del><code>Ubuntu 16.04</code>及更新版本的软件源中已将<code>OpenJDK 1.7</code>移除了。解决方案参考<code>Ask Ubuntu</code>上的问题<a href="http://askubuntu.com/questions/761127/how-do-i-install-openjdk-7-on-ubuntu-16-04-or-higher">“How do I install openjdk 7 on Ubuntu 16.04 or higher?”</a>。注意热评里那个叫你添加<code>ppa</code>源的老登，因为<code>ppa</code>源缺乏安全性维护，所以别看他的回答，看后面一个叫你去Debian官网下载的回答。</del><br><del>笔者评：截止写稿时，<code>Debian 12</code>源上的<code>openjdk</code>只有<code>17</code>版本了。所以只能去网站上下载<code>.deb</code>包然后安装。这里提供两个下载站：<a href="https://jdk.java.net/archive/">OpenJDK Archive(无需登陆但没有deb)</a>；<a href="https://www.oracle.com/java/technologies/downloads/archive/">Java SE Archive(概率登陆但有deb)</a>。</del></p></blockquote><blockquote><p>但是！我们是不是可以整点活？比如直接去隔壁<code>Ubuntu</code>的镜像源网站上下载？比如清华源：<br>Ubuntu系统前往这里下载：<a href="https://mirrors.tuna.tsinghua.edu.cn/ubuntu/pool/universe/o/openjdk-lts/">下载jdk11-universe</a><a href="https://mirrors.tuna.tsinghua.edu.cn/ubuntu/pool/main/o/openjdk-lts/">下载jdk11-main</a>；<a href="https://mirrors.tuna.tsinghua.edu.cn/ubuntu/pool/universe/o/openjdk-9/">下载jdk9-universe</a>；<a href="https://mirrors.tuna.tsinghua.edu.cn/ubuntu/pool/universe/o/openjdk-8/">下载jdk8-universe</a><a href="https://mirrors.tuna.tsinghua.edu.cn/ubuntu/pool/main/o/openjdk-8/">下载jdk8-main</a>；<a href="https://mirrors.tuna.tsinghua.edu.cn/ubuntu/pool/main/o/openjdk-7/">下载jdk7-main</a><br>Debian系统前往这里下载：<a href="https://mirrors.tuna.tsinghua.edu.cn/debian/pool/main/o/openjdk-11/">下载jdk11-main</a><a href="https://mirrors.tuna.tsinghua.edu.cn/debian/pool/main/o/openjdk-8/">下载jdk8-main</a><br>使用此方法时如提示缺失依赖则需要补全依赖然后再安装，否则<code>apt</code>会报错：<code>ca-certificates-java java-common libc6</code><br>需要把<code>openjdk-xx-jdk</code>及其<code>headless</code>版本、<code>openjdk-xx-jre</code>及其<code>headless</code>版本和<code>openjdk-xx-source</code>都安装上再继续。</p></blockquote><h2 id="Part-4-Python的安装"><a href="#Part-4-Python的安装" class="headerlink" title="Part 4: Python的安装"></a>Part 4: Python的安装</h2><p><del><em>啥？这都什么年代了还教咋装Python？</em></del>要不是因为不同<code>Lineage</code>版本要求的Python版本不一样，<del>我也懒得写了</del><br><code>LineageOS</code> 17.1及更高版本: <code>python3</code><br><code>LineageOS</code> 11.0-16.0: <code>python2</code><br>如果你电脑上有多个<del>蟒蛇</del><code>Python</code>互相冲突，<code>Lineage</code>官网推荐的解决方案是用<code>venv</code>。相关的东西这里不再赘述。</p><h1 id="进入准备工作！"><a href="#进入准备工作！" class="headerlink" title="进入准备工作！"></a>进入准备工作！</h1><h2 id="建立工作目录"><a href="#建立工作目录" class="headerlink" title="建立工作目录"></a>建立工作目录</h2><blockquote><p>⚠️ Lineage和清华源上的教程写的不一样，这里冲突部分采用的是Lineage官网教程。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p ~/bin<br><span class="hljs-built_in">mkdir</span> -p ~/android/lineage<br></code></pre></td></tr></table></figure><p>其中<code>~/bin</code>存放<code>git-repo</code>工具，<code>~/android/lineage</code>存放<code>LineageOS</code>的源码。</p><h2 id="安装repo工具"><a href="#安装repo工具" class="headerlink" title="安装repo工具"></a>安装repo工具</h2><blockquote><p>这是个啥？<br><code>repo</code>是个由Google开发的<code>git</code>的增强工具，和<code>git</code>配合食用。<a href="https://source.android.google.cn/docs/setup/download">参考Google官方文档。</a></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> ~/bin<br>PATH=~/bin:<span class="hljs-variable">$PATH</span><br>curl https://mirrors.tuna.tsinghua.edu.cn/git/git-repo &gt; ~/bin/repo<br><span class="hljs-built_in">chmod</span> a+x ~/bin/repo<br></code></pre></td></tr></table></figure><p>更新repo使用这个命令：<code>export REPO_URL=&#39;https://mirrors.tuna.tsinghua.edu.cn/git/git-repo&#39;</code><br>然后再使用上面添加<code>adb</code>的方法将<code>~/bin</code>目录添加到环境变量中，编辑<code>.zshrc</code>…:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># set PATH so it includes user&#x27;s private bin if it exists</span><br><span class="hljs-keyword">if</span> [ -d <span class="hljs-string">&quot;<span class="hljs-variable">$HOME</span>/bin&quot;</span> ] ; <span class="hljs-keyword">then</span><br>    PATH=<span class="hljs-string">&quot;<span class="hljs-variable">$HOME</span>/bin:<span class="hljs-variable">$PATH</span>&quot;</span><br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><p>别忘了再次<code>source</code>它一下！</p><h2 id="配置Git"><a href="#配置Git" class="headerlink" title="配置Git"></a>配置Git</h2><p>没啥好说的，设置一下用户名和邮箱，这步没做的话下一步初始化仓库的时候命令行里也会叫你提供这两个信息。</p><blockquote><p>⚠️ 注意: 这里的操作是对整个电脑全局的设置。如果你只想在编译系统的源码仓库文件夹内设置这两个信息，则请跳过设置信息这一步，直接进行<code>lfs</code>初始化。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.email <span class="hljs-string">&quot;you@example.com&quot;</span><br>git config --global user.name <span class="hljs-string">&quot;Your Name&quot;</span><br></code></pre></td></tr></table></figure><p>为了能让<code>git</code>存放大文件，需要初始化一下<code>Large File Storage</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git lfs install<br></code></pre></td></tr></table></figure><p>设置<code>Git</code>的<code>Change-Id</code>：<code>Lineage</code>官方说为了防止重复的<code>Change-Id</code>,就要这么操作一下。但是我没有进行这一步设置。</p><blockquote><p>To avoid duplicated Change-Id: trailers in commit messages, especially when cherry-picking changes, make Change-Id: a known trailer to git:</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global trailer.changeid.key <span class="hljs-string">&quot;Change-Id&quot;</span><br></code></pre></td></tr></table></figure><h2 id="配置编译缓存"><a href="#配置编译缓存" class="headerlink" title="配置编译缓存"></a>配置编译缓存</h2><p>这是用<code>ccache</code>来加快编译的。将这些内容放入<code>.zshrc</code>中然后再<code>source</code>一下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> USE_CCACHE=1<br><span class="hljs-built_in">export</span> CCACHE_EXEC=/usr/bin/ccache<br></code></pre></td></tr></table></figure><p>然后回到命令行终端，设置<code>ccache</code>大小:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ccache -M 50G<br></code></pre></td></tr></table></figure><p><code>ccache</code>大小影响你的编译速度。如果只编译一个设备，那么给<code>20-50GB</code>就够了；如果编译多个设备(不共享内核源码)，则建议配置<code>75-100GB</code>。<br>当然，你也可以启用压缩：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">ccache -o compression=<span class="hljs-literal">true</span><br>````<br>&gt; 启用压缩后，一台设备大概给`20G`就够了。<br><br><br><br><span class="hljs-comment"># 处理源码</span><br><br><br><span class="hljs-comment">## 初始化仓库</span><br>&gt; ⚠️ 这个过程需要保证网络绝对畅通<br><br>``` bash<br>repo init -u https://mirrors.tuna.tsinghua.edu.cn/git/lineageOS/LineageOS/android.git -b lineage-20.0 --git-lfs<br></code></pre></td></tr></table></figure><p>参数<code>-b</code>后面接的是系统版本，前往<a href="https://github.com/LineageOS/android/tree/lineage-20.0">这里</a>查看可以选择哪些分支版本。其中<code>lineage-16.0</code>对应<code>Android 9</code>，后续<code>los</code>版本号整数加一对应<code>Android</code>版本号的整数加一，比如<code>lineage-17.0</code>对应<code>Android 10</code>。</p><h2 id="将仓库源码地址设为国内镜像站"><a href="#将仓库源码地址设为国内镜像站" class="headerlink" title="将仓库源码地址设为国内镜像站"></a>将仓库源码地址设为国内镜像站</h2><p>这里用清华源<br>打开.repo&#x2F;manifests&#x2F;default.xml，将</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">remote</span>  <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;github&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">fetch</span>=<span class="hljs-string">&quot;..&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">review</span>=<span class="hljs-string">&quot;review.lineageos.org&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><p>改成</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">remote</span>  <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;github&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">fetch</span>=<span class="hljs-string">&quot;https://github.com/&quot;</span> /&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">remote</span>  <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;lineage&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">fetch</span>=<span class="hljs-string">&quot;https://mirrors.tuna.tsinghua.edu.cn/git/lineageOS/&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">review</span>=<span class="hljs-string">&quot;review.lineageos.org&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><p>将</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">remote</span>  <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;aosp&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">fetch</span>=<span class="hljs-string">&quot;https://android.googlesource.com&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">xxx</span>=<span class="hljs-string">&quot;...&quot;</span>/&gt;</span><br></code></pre></td></tr></table></figure><p>改成</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">remote</span>  <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;aosp&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">fetch</span>=<span class="hljs-string">&quot;https://mirrors.tuna.tsinghua.edu.cn/git/AOSP&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">xxx</span>=<span class="hljs-string">&quot;...&quot;</span>/&gt;</span><br></code></pre></td></tr></table></figure><p>将</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">default</span> <span class="hljs-attr">revision</span>=<span class="hljs-string">&quot;...&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">remote</span>=<span class="hljs-string">&quot;github&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">xxx</span>=<span class="hljs-string">&quot;...&quot;</span>/&gt;</span><br></code></pre></td></tr></table></figure><p>改成</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">default</span> <span class="hljs-attr">revision</span>=<span class="hljs-string">&quot;...&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">remote</span>=<span class="hljs-string">&quot;lineage&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">xxx</span>=<span class="hljs-string">&quot;...&quot;</span>/&gt;</span><br></code></pre></td></tr></table></figure><h2 id="同步源码树"><a href="#同步源码树" class="headerlink" title="同步源码树"></a>同步源码树</h2><p>以后都使用这个来同步。这会从清华服务器上下载源码而非Lineage官网下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Use default thread and branch parameters, which is &quot;-j 4 -c&quot; here.</span><br>repo <span class="hljs-built_in">sync</span><br><span class="hljs-comment"># Use custom parameters, which means use 2 threads to sync.</span><br>repo <span class="hljs-built_in">sync</span> -j2<br></code></pre></td></tr></table></figure><blockquote><p>注意: 这个命令默认添加参数<code>-j 4 -c</code>。其中<code>-j 4</code>代表使用四线程进行同步。如果你遇到了服务器对线程的限制或性能问题，手动添加该参数以降低线程数，像第二行。<br><code>-c</code>代表着只克隆上一步选定的分支而非所有分支。<strong>该参数不建议进行人为额外操作</strong>。</p></blockquote><h2 id="处理设备配置文件"><a href="#处理设备配置文件" class="headerlink" title="处理设备配置文件"></a>处理设备配置文件</h2><blockquote><p><del>我要编译的设备不在<code>Lineage</code>的<a href="https://wiki.lineageos.org/devices/">官方维护列表</a>内，所以需要自己配置配置文件。如果你的设备在官方维护列表内，可以跳过这一步。</del></p></blockquote><p>在<code>~/android/lineage/.repo/local_manifests/</code>下创建文件<code>federer.xml</code></p><blockquote><p><code>federer</code>是我设备的代号，这里也可以填写别的名字作为代号，主要就是区分设备用</p></blockquote><p>写入以下信息:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">manifest</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">remote</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;vendor&quot;</span> <span class="hljs-attr">fetch</span>=<span class="hljs-string">&quot;https://github.com&quot;</span> <span class="hljs-attr">revision</span>=<span class="hljs-string">&quot;la-17.1&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">remote</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;device&quot;</span> <span class="hljs-attr">fetch</span>=<span class="hljs-string">&quot;https://github.com&quot;</span> <span class="hljs-attr">revision</span>=<span class="hljs-string">&quot;la-17.1&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">remote</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;device-common&quot;</span> <span class="hljs-attr">fetch</span>=<span class="hljs-string">&quot;https://github.com&quot;</span> <span class="hljs-attr">revision</span>=<span class="hljs-string">&quot;la-17.1&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">remote</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;kernel&quot;</span> <span class="hljs-attr">fetch</span>=<span class="hljs-string">&quot;https://github.com&quot;</span> <span class="hljs-attr">revision</span>=<span class="hljs-string">&quot;LaOS-15.1&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">remote</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;kernel-common&quot;</span> <span class="hljs-attr">fetch</span>=<span class="hljs-string">&quot;https://github.com&quot;</span> <span class="hljs-attr">revision</span>=<span class="hljs-string">&quot;la-17.1&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">remote</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;sepolicy_legacy&quot;</span> <span class="hljs-attr">fetch</span>=<span class="hljs-string">&quot;https://github.com&quot;</span> <span class="hljs-attr">revision</span>=<span class="hljs-string">&quot;lineage-20.0&quot;</span>/&gt;</span><br>    <span class="hljs-comment">&lt;!-- Vendor folders --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;vendor/huawei/federer&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;datenpanne/android_vendor_huawei_federer&quot;</span> <span class="hljs-attr">remote</span>=<span class="hljs-string">&quot;vendor&quot;</span> /&gt;</span><br>    <span class="hljs-comment">&lt;!--Device Trees--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;device/huawei/federer&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;datenpanne/android_device_huawei_federer&quot;</span> <span class="hljs-attr">remote</span>=<span class="hljs-string">&quot;device&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;device/huawei/t2-common&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;datenpanne/android_device_huawei_t2-common&quot;</span> <span class="hljs-attr">remote</span>=<span class="hljs-string">&quot;device-common&quot;</span> /&gt;</span><br>    <span class="hljs-comment">&lt;!--Kernel--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;kernel/huawei/federer&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;datenpanne/android_kernel_huawei_federer&quot;</span> <span class="hljs-attr">remote</span>=<span class="hljs-string">&quot;kernel&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;kernel/huawei/federer&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;datenpanne/android_kernel_huawei_t2-common&quot;</span> <span class="hljs-attr">remote</span>=<span class="hljs-string">&quot;kernel-common&quot;</span> /&gt;</span><br>    <span class="hljs-comment">&lt;!--SePolicy Legacy. I tried to compile but throw an error to me said about I don&#x27;t have these files. I searched on Bing and found this repository, then I add it here. For other devices, you don&#x27;t need to add this .--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;device/qcom/sepolicy-legacy&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;LineageOS/android_device_qcom_sepolicy&quot;</span> <span class="hljs-attr">remote</span>=<span class="hljs-string">&quot;sepolicy_legacy&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">manifest</span>&gt;</span><br></code></pre></td></tr></table></figure><p>其中<code>remote</code>字段中的<code>fetch</code>字段意思是该代码托管的提供商名。如果你的代码也托管在<code>Github</code>上，则无需修改该字段。<br>其中<code>remote</code>字段中的<code>revision</code>字段意思是该代码在仓库里的分支名。<br>其中<code>project</code>字段中的<code>path</code>字段意为存放该源码的本地位置，。<br>其中<code>project</code>字段中的<code>name</code>字段意为仓库链接去掉<code>https://github.com</code>之后剩下的，即<code>作者/仓库名</code>。</p><p>然后再次进行<code>repo sync</code>一下，以下载设备树、内核源码等信息。</p><blockquote><p>⚠️ 注意：如果提示sync失败，则多次使用<code>repo sync -j1 --fail-fast</code>重试。<br>注意xml的格式化问题，不然sync会报错。比如xml最开头的字符不是<code>&lt;</code>而是空格时报如下错误:<code>error: in \</code>sync`: error parsing manifest ~&#x2F;android&#x2F;lineage&#x2F;.repo&#x2F;local_manifests&#x2F;federer.xml: XML or text declaration not at start of entity: line 1, column 1&#96;</p></blockquote><h2 id="提取设备专属固件"><a href="#提取设备专属固件" class="headerlink" title="提取设备专属固件"></a>提取设备专属固件</h2><p>插上已经root了的lineage设备(<strong>一定要是你即将编译的设备，比如我的是华为Federer-A01w</strong>)，终端前往<code>~/android/lineage/device/huawei/federer</code>文件夹，运行当前目录下的<code>./extract-files.sh</code></p><blockquote><p>如果提示<code>Unable to find helper script at ./../../../vendor/lineage/build/tools/extract_utils.sh</code>则前往<code>~/android/lineage/vendor/lineage/build/tools</code>，将<code>https://github.com/LineageOS/android_tools_extract-utils</code>下的所有文件全部下载到这个文件夹，保证<code>~/android/lineage/vendor/lineage/build/tools</code>文件夹下有<code>extract_utils.sh</code>脚本，再回去重新运行<code>./extract-files.sh</code></p></blockquote><blockquote><p>如果一直没有弹出授权提示，并且手动<code>adb devices</code>提示<code>(missing udev rules? user is in the plugdev group); see [http://developer.android.com/tools/device.html]</code>，则先将你的用户组添加入<code>plugdev</code>然后安装<code>android-sdk-platform-tools-common</code>。具体操作如下：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo usermod -aG plugdev <span class="hljs-variable">$LOGNAME</span><br>sudo apt-get install android-sdk-platform-tools-common<br></code></pre></td></tr></table></figure><p>然后<strong>重启电脑</strong>。再次<code>adb devices</code>，设备上就会弹出授权弹窗了。回到<code>~/android/lineage/device/huawei/federer</code>再次执行<code>./extract-files.sh</code></p><h1 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h1><h2 id="选择默认内核编译配置文件"><a href="#选择默认内核编译配置文件" class="headerlink" title="选择默认内核编译配置文件"></a>选择默认内核编译配置文件</h2><p>在进行内核编译的时候，总要选择一个内核配置文件，也就是<code>defconfig</code>。通常在内核源码目录<code>/arch/arm64/configs</code>文件夹下，然后内核源码在lineage工程文件夹下的目录是<code>~/android/lineage/kernel/huawei/federer/</code>。<br>将你要用的<code>defconfig</code>记下，打开<code>device/huawei/federer/BoardConfig.mk</code>，找到(如果没有就新建)<code>TARGET_KERNEL_CONFIG</code>字段，将<code>defconfig</code>文件名作为字段值填入。最终可以找到这么一行信息：</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs makefile">TARGET_KERNEL_CONFIG := merge_hi6250_defconfig<br></code></pre></td></tr></table></figure><p>同样的，设置<code>TARGET_KERNEL_SOURCE</code>指向内核源码所在目录：</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs makefile">TARGET_KERNEL_SOURCE := kernel/huawei/federer<br></code></pre></td></tr></table></figure><h2 id="准备开始编译"><a href="#准备开始编译" class="headerlink" title="准备开始编译"></a>准备开始编译</h2><p>进入<code>~/android/lineage</code>文件夹。<br>进行最后的环境准备：<code>source build/envsetup.sh</code><br>选择要编译的设备：<code>lunch</code><br>然后会有一个设备列表，像这样：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">...<br>27. lineage_federer-eng<br>28. lineage_federer-userdebug<br>...<br>Which would you like? [aosp_arm-eng]<br></code></pre></td></tr></table></figure><p>像我的设备，刚刚创建的是<code>federer</code>,那就选27或者28都行。</p><h2 id="开始编译！"><a href="#开始编译！" class="headerlink" title="开始编译！"></a>开始编译！</h2><blockquote><p>⚠️⚠️警告: 如果你的电脑和我一样只有<code>16GB</code>物理内存的话，请一定要<strong>开启</strong><code>SWAP</code>，否则会编到一半爆内存卡死，等待你的只有强制重启。<br>我的电脑<code>SWAP</code>给了<code>16GB</code>, 启用了<code>ZRAM</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">croot<br>brunch federer<br></code></pre></td></tr></table></figure><h2 id="我遇到的一些问题"><a href="#我遇到的一些问题" class="headerlink" title="我遇到的一些问题"></a>我遇到的一些问题</h2><h3 id="Problem-1"><a href="#Problem-1" class="headerlink" title="Problem 1"></a>Problem 1</h3><blockquote><p>include path缺失：system&#x2F;core&#x2F;base&#x2F;include&#x2F;android-base&#x2F;</p></blockquote><p>我从<del>咕噜咕噜</del>Google的AOSP源仓库里下载了这个文件。访问<a href="https://android.googlesource.com/platform/system/core/+/c0e6e40/base/include/android-base">这里</a>，然后你能在屏幕顶上看到一个<code>tgz</code>按钮，点它然后下载，再在你的本地los工作目录里创建这个文件夹：<code>~/android/lineage/system/core/base/include/android-base/</code>，把压缩包里的文件全丢进去，再重新编译<del>等待下一个报错</del>。</p><h3 id="Problem-2"><a href="#Problem-2" class="headerlink" title="Problem 2"></a>Problem 2</h3><blockquote><p>device&#x2F;huawei&#x2F;federer&#x2F;sensors&#x2F;Android.mk: error: sensors.msm8916: LOCAL_COPY_HEADERS is obsolete. See <a href="https://android.googlesource.com/platform/build/+/master/Changes.md#copy_headers">https://android.googlesource.com/platform/build/+/master/Changes.md#copy_headers</a></p></blockquote><p>参见<a href="https://github.com/crdroidandroid/android/issues/57">此issue</a><br>这是makefile语法过时问题。打开<code>/home/android233/android/lineage/device/huawei/federer/BoardConfigCommon.mk</code>，在最前面添加<code>BUILD_BROKEN_USES_BUILD_COPY_HEADERS := true</code><br>~~<br>打开<code>device/huawei/federer/sensors/Android.mk</code>，将以下部分</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><span class="hljs-comment"># Export calibration library needed dependency headers</span><br>LOCAL_COPY_HEADERS_TO := sensors/inc<br>LOCAL_COPY_HEADERS := \<br>CalibrationModule.h \<br>sensors_extension.h \<br>sensors.h<br></code></pre></td></tr></table></figure><p>替换为</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><span class="hljs-comment"># Export calibration library needed dependency headers</span><br>LOCAL_COPY_HEADERS_TO := sensors/inc<br>LOCAL_EXPORT_C_INCLUDES := <span class="hljs-variable">$(LOCAL_PATH)</span><br></code></pre></td></tr></table></figure><p>~~</p><h3 id="Problem-3"><a href="#Problem-3" class="headerlink" title="Problem 3"></a>Problem 3</h3><blockquote><p>device&#x2F;huawei&#x2F;t2-common&#x2F;camera&#x2F;QCamera2&#x2F;stack&#x2F;mm-camera-interface&#x2F;Android.mk: error: libmmcamera_interface: LOCAL_COPY_HEADERS is obsolete. See <a href="https://android.googlesource.com/platform/build/+/master/Changes.md#copy_headers">https://android.googlesource.com/platform/build/+/master/Changes.md#copy_headers</a></p></blockquote><p>问题与<a href="#problem-2">Problem 2</a>重复。这是makefile语法过时问题。打开<code>/home/android233/android/lineage/device/huawei/t2-common/BoardConfigCommon.mk</code>，在最前面添加<code>BUILD_BROKEN_USES_BUILD_COPY_HEADERS := true</code><br>~~<br>打开<code>device/huawei/t2-common/camera/QCamera2/stack/mm-camera-interface/Android.mk</code>，将以下部分</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs makefile">LOCAL_COPY_HEADERS_TO := mm-camera-interface<br>LOCAL_COPY_HEADERS += ../common/cam_intf.h<br>LOCAL_COPY_HEADERS += ../common/cam_types.h<br></code></pre></td></tr></table></figure><p>修改为</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs makefile">LOCAL_COPY_HEADERS_TO := mm-camera-interface<br>LOCAL_EXPORT_C_INCLUDES += <span class="hljs-variable">$(LOCAL_PATH)</span>/../common<br></code></pre></td></tr></table></figure><p>~~</p><h3 id="Problem-4"><a href="#Problem-4" class="headerlink" title="Problem 4"></a>Problem 4</h3><blockquote><p>device&#x2F;huawei&#x2F;t2-common&#x2F;gps&#x2F;core&#x2F;Android.mk: error: libloc_core: LOCAL_COPY_HEADERS is obsolete. See <a href="https://android.googlesource.com/platform/build/+/master/Changes.md#copy_headers">https://android.googlesource.com/platform/build/+/master/Changes.md#copy_headers</a></p></blockquote><p>问题与<a href="#problem-2">Problem 2</a>重复。打开<code>/home/android233/android/lineage/device/huawei/federer/BoardConfigCommon.mk</code>，在最前面添加<code>BUILD_BROKEN_USES_BUILD_COPY_HEADERS := true</code><br>~~<br>这是makefile语法过时问题。<br>打开<code>device/huawei/t2-common/gps/core/Android.mk</code>，将以下部分</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs makefile">LOCAL_COPY_HEADERS:= \<br>    LocApiBase.h \<br>    LocAdapterBase.h \<br>    ContextBase.h \<br>    LocDualContext.h \<br>    LBSProxyBase.h \<br>    UlpProxyBase.h \<br>    gps_extended_c.h \<br>    gps_extended.h \<br>    loc_core_log.h \<br>    LocAdapterProxyBase.h<br></code></pre></td></tr></table></figure><p>修改为</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs makefile">LOCAL_EXPORT_C_INCLUDES := <span class="hljs-variable">$(LOCAL_PATH)</span><br></code></pre></td></tr></table></figure><p>~~</p><h3 id="Problem-5"><a href="#Problem-5" class="headerlink" title="Problem 5"></a>Problem 5</h3><blockquote><p>device&#x2F;huawei&#x2F;t2-common&#x2F;gps&#x2F;loc_api&#x2F;libloc_api_50001&#x2F;Android.mk: error: libloc_eng: LOCAL_COPY_HEADERS is obsolete. See <a href="https://android.googlesource.com/platform/build/+/master/Changes.md#copy_headers">https://android.googlesource.com/platform/build/+/master/Changes.md#copy_headers</a></p></blockquote><p>问题与<a href="#problem-2">Problem 2</a>重复。打开<code>/home/android233/android/lineage/device/huawei/t2-common/BoardConfigCommon.mk</code>，在最前面添加<code>BUILD_BROKEN_USES_BUILD_COPY_HEADERS := true</code><br>~~<br>这是makefile语法过时问题。<br>打开<code>device/huawei/t2-common/gps/loc_api/libloc_api_50001/Android.mk</code>，将以下部分</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs makefile">LOCAL_COPY_HEADERS:= \<br>   LocEngAdapter.h \<br>   loc.h \<br>   loc_eng.h \<br>   loc_eng_xtra.h \<br>   loc_eng_ni.h \<br>   loc_eng_agps.h \<br>   loc_eng_msg.h \<br>   loc_eng_log.h<br></code></pre></td></tr></table></figure><p>修改为</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs makefile">LOCAL_EXPORT_C_INCLUDES := <span class="hljs-variable">$(LOCAL_PATH)</span><br></code></pre></td></tr></table></figure><p>~~</p><h3 id="Problem-6"><a href="#Problem-6" class="headerlink" title="Problem 6"></a>Problem 6</h3><blockquote><p>device&#x2F;huawei&#x2F;t2-common&#x2F;gps&#x2F;utils&#x2F;Android.mk: error: libgps.utils: LOCAL_COPY_HEADERS is obsolete. See <a href="https://android.googlesource.com/platform/build/+/master/Changes.md#copy_headers">https://android.googlesource.com/platform/build/+/master/Changes.md#copy_headers</a></p></blockquote><p>问题与<a href="#problem-2">Problem 2</a>重复。打开<code>/home/android233/android/lineage/device/huawei/t2-common/BoardConfigCommon.mk</code>，在最前面添加<code>BUILD_BROKEN_USES_BUILD_COPY_HEADERS := true</code><br>这是makefile语法过时问题。<br>打开<code>device/huawei/t2-common/gps/utils/Android.mk</code>，将以下部分</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs makefile">LOCAL_COPY_HEADERS:= \<br>   loc_log.h \<br>   loc_cfg.h \<br>   log_util.h \<br>   linked_list.h \<br>   msg_q.h \<br>   MsgTask.h \<br>   LocHeap.h \<br>   LocThread.h \<br>   LocTimer.h \<br>   loc_target.h \<br>   loc_timer.h \<br>   LocSharedLock.h \<br>   platform_lib_abstractions/platform_lib_includes.h \<br>   platform_lib_abstractions/platform_lib_time.h \<br>   platform_lib_abstractions/platform_lib_macros.h \<br>   loc_misc_utils.h<br></code></pre></td></tr></table></figure><p>修改为</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs makefile">LOCAL_EXPORT_C_INCLUDES := <span class="hljs-variable">$(LOCAL_PATH)</span><br></code></pre></td></tr></table></figure><h3 id="Problem-7"><a href="#Problem-7" class="headerlink" title="Problem 7"></a>Problem 7</h3><blockquote><p>build&#x2F;make&#x2F;core&#x2F;base_rules.mk:338: error: device&#x2F;huawei&#x2F;t2-common&#x2F;gps&#x2F;utils: <a href="mailto:&#x4d;&#79;&#x44;&#x55;&#76;&#x45;&#46;&#x54;&#65;&#x52;&#71;&#x45;&#x54;&#x2e;&#x53;&#x48;&#x41;&#82;&#x45;&#x44;&#95;&#76;&#73;&#66;&#x52;&#x41;&#82;&#x49;&#x45;&#x53;&#46;&#x61;&#x6e;&#x64;&#114;&#x6f;&#x69;&#x64;&#46;&#x68;&#x69;&#100;&#x6c;&#x2e;&#x62;&#97;&#x73;&#101;&#64;&#49;&#46;&#48;">&#x4d;&#79;&#x44;&#x55;&#76;&#x45;&#46;&#x54;&#65;&#x52;&#71;&#x45;&#x54;&#x2e;&#x53;&#x48;&#x41;&#82;&#x45;&#x44;&#95;&#76;&#73;&#66;&#x52;&#x41;&#82;&#x49;&#x45;&#x53;&#46;&#x61;&#x6e;&#x64;&#114;&#x6f;&#x69;&#x64;&#46;&#x68;&#x69;&#100;&#x6c;&#x2e;&#x62;&#97;&#x73;&#101;&#64;&#49;&#46;&#48;</a> already defined by hardware&#x2F;lineage&#x2F;compat.</p></blockquote><p>这是被多个makefile重定义的问题。<br>打开<code>build/make/core/base_rules.mk</code>将第338行注释掉，<code>make clean</code>一下然后重新编译：</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><span class="hljs-comment">#$(error $(LOCAL_PATH): $(module_id) already defined by $($(module_id)))</span><br></code></pre></td></tr></table></figure><h3 id="Problem-8"><a href="#Problem-8" class="headerlink" title="Problem 8"></a>Problem 8</h3><blockquote><p>device&#x2F;huawei&#x2F;t2-common&#x2F;mdm-helper&#x2F;Android.mk: error: libmdmdetect: LOCAL_COPY_HEADERS is obsolete. See <a href="https://android.googlesource.com/platform/build/+/master/Changes.md#copy_headers">https://android.googlesource.com/platform/build/+/master/Changes.md#copy_headers</a></p></blockquote><p>问题与<a href="#problem-2">Problem 2</a>重复。这是makefile语法过时问题。打开<code>/home/android233/android/lineage/device/huawei/t2-common/BoardConfigCommon.mk</code>，在最前面添加<code>BUILD_BROKEN_USES_BUILD_COPY_HEADERS := true</code><br>~~<br>打开<code>device/huawei/t2-common/mdm-helper/Android.mk</code>，将以下部分</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs makefile">LOCAL_COPY_HEADERS := libmdmdetect/mdm_detect.h<br></code></pre></td></tr></table></figure><p>修改为</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs makefile">LOCAL_EXPORT_C_INCLUDES := <span class="hljs-variable">$(LOCAL_PATH)</span>/libmdmdetect<br></code></pre></td></tr></table></figure><p>~~</p><h3 id="Problem-9"><a href="#Problem-9" class="headerlink" title="Problem 9"></a>Problem 9</h3><blockquote><p>device&#x2F;huawei&#x2F;t2-common&#x2F;camera&#x2F;QCamera2&#x2F;HAL&#x2F;Android.mk: error: “camera.msm8916 (SHARED_LIBRARIES android-arm) missing libqdMetaData (SHARED_LIBRARIES android-arm)”<br>You can set ALLOW_MISSING_DEPENDENCIES&#x3D;true in your environment if this is intentional, but that may defer real problems until later in the build.<br>device&#x2F;huawei&#x2F;t2-common&#x2F;camera&#x2F;QCamera2&#x2F;HAL&#x2F;Android.mk: error: “camera.msm8916 (SHARED_LIBRARIES android-arm) missing libqservice (SHARED_LIBRARIES android-arm)”<br>You can set ALLOW_MISSING_DEPENDENCIES&#x3D;true in your environment if this is intentional, but that may defer real problems until later in the build.</p></blockquote><p>~~<br>这是个HAL层高通QCAM2驱动依赖缺失。先按照提示，设置环境变量<code>export ALLOW_MISSING_DEPENDENCIES=true</code>忽略此类问题。<br>打开<code>device/huawei/t2-common/camera/QCamera2/HAL/Android.mk</code>，将以下部分</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs makefile">LOCAL_SHARED_LIBRARIES += libqdMetaData libqservice libbinder<br></code></pre></td></tr></table></figure><p>修改为</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs makefile">LOCAL_SHARED_LIBRARIES += libbinder<br></code></pre></td></tr></table></figure><p>~~<br>不能这么做！<br>经过核查，LineageOS在19.0开始从源码清单里将<code>msm8916</code>部分驱动删除了：我们可以从这个<a href="https://github.com/LineageOS/android/blob/lineage-19.0/snippets/lineage.xml">文件</a>的<code>74、99、100、101</code>行看出。我们只需将其补充到<code>~/android/lineage/.repo/local_manifests/federer.xml</code>中，然后重新<code>repo sync</code>再跑编译即可。<br>在<code>/home/android233/android/lineage/hardware/qcom-caf/msm8916/display/libqdutils/Android.mk</code>的26行，证明了我的说法：</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs makefile">LOCAL_MODULE  := libqdMetaData<br></code></pre></td></tr></table></figure><p>解决方法：直接往<code>~/android/lineage/.repo/local_manifests/federer.xml</code>中添加以下语句：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">linkfile</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;os_pickup.mk&quot;</span> <span class="hljs-attr">dest</span>=<span class="hljs-string">&quot;hardware/qcom-caf/msm8916/Android.mk&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;hardware/qcom-caf/msm8916/audio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;LineageOS/android_hardware_qcom_audio&quot;</span> <span class="hljs-attr">groups</span>=<span class="hljs-string">&quot;qcom,qcom_audio,pdk-qcom&quot;</span> <span class="hljs-attr">revision</span>=<span class="hljs-string">&quot;lineage-19.0-caf-msm8916&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;hardware/qcom-caf/msm8916/display&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;LineageOS/android_hardware_qcom_display&quot;</span> <span class="hljs-attr">groups</span>=<span class="hljs-string">&quot;pdk-qcom,qcom,qcom_display&quot;</span> <span class="hljs-attr">revision</span>=<span class="hljs-string">&quot;lineage-19.0-caf-msm8916&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;hardware/qcom-caf/msm8916/media&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;LineageOS/android_hardware_qcom_media&quot;</span> <span class="hljs-attr">groups</span>=<span class="hljs-string">&quot;qcom,pdk-qcom&quot;</span> <span class="hljs-attr">revision</span>=<span class="hljs-string">&quot;lineage-19.0-caf-msm8916&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><p>解决方法：我是修补<code>~/android/lineage/.repo/manifests/snippets/lineage.xml</code>实现的：（已弃用，用上面那个方法去。）<br>108行后添加:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;hardware/qcom-caf/msm8916/audio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;LineageOS/android_hardware_qcom_audio&quot;</span> <span class="hljs-attr">groups</span>=<span class="hljs-string">&quot;qcom,qcom_audio,pdk-qcom&quot;</span> <span class="hljs-attr">revision</span>=<span class="hljs-string">&quot;lineage-19.0-caf-msm8916&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;hardware/qcom-caf/msm8916/display&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;LineageOS/android_hardware_qcom_display&quot;</span> <span class="hljs-attr">groups</span>=<span class="hljs-string">&quot;pdk-qcom,qcom,qcom_display&quot;</span> <span class="hljs-attr">revision</span>=<span class="hljs-string">&quot;lineage-19.0-caf-msm8916&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;hardware/qcom-caf/msm8916/media&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;LineageOS/android_hardware_qcom_media&quot;</span> <span class="hljs-attr">groups</span>=<span class="hljs-string">&quot;qcom,pdk-qcom&quot;</span> <span class="hljs-attr">revision</span>=<span class="hljs-string">&quot;lineage-19.0-caf-msm8916&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><p>84行添加</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">linkfile</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;os_pickup.mk&quot;</span> <span class="hljs-attr">dest</span>=<span class="hljs-string">&quot;hardware/qcom-caf/msm8916/Android.mk&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><p><strong>当前正在和作者确认….上面只是我的解决方法。 &#x2F;&#x2F;TODO</strong></p><h3 id="Problem-10"><a href="#Problem-10" class="headerlink" title="Problem 10"></a>Problem 10</h3><blockquote><p>hardware&#x2F;qcom-caf&#x2F;msm8916&#x2F;display&#x2F;libhwcomposer&#x2F;..&#x2F;common.mk: error: “hwcomposer.msm8916 (SHARED_LIBRARIES android-arm64) missing libbfqio (SHARED_LIBRARIES android-arm64)”<br>You can set ALLOW_MISSING_DEPENDENCIES&#x3D;true in your environment if this is intentional, but that may defer real problems until later in the build.<br>hardware&#x2F;qcom-caf&#x2F;msm8916&#x2F;display&#x2F;libhwcomposer&#x2F;..&#x2F;common.mk: error: “hwcomposer.msm8916 (SHARED_LIBRARIES android-arm) missing libbfqio (SHARED_LIBRARIES android-arm)”<br>You can set ALLOW_MISSING_DEPENDENCIES&#x3D;true in your environment if this is intentional, but that may defer real problems until later in the build.</p></blockquote><p>果然，修补<code>lineage.xml</code>后出现了同样的错误：缺少<del><em>libFa♂Qio</em></del><code>libbfqio</code>。<br>前往github下载legacy的依赖库，添加到<code>~/android/lineage/.repo/local_manifests/federer.xml</code>中：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--libbfqio--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">remote</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;libbfqio&quot;</span> <span class="hljs-attr">fetch</span>=<span class="hljs-string">&quot;https://github.com&quot;</span> <span class="hljs-attr">revision</span>=<span class="hljs-string">&quot;android-9.0.0&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;hardware/qcom-caf/msm8916/display/libbfqio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;AOSP-Legacy-MSM8916/platform_external_libbfqio&quot;</span> <span class="hljs-attr">remote</span>=<span class="hljs-string">&quot;libbfqio&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><h3 id="Problem-11"><a href="#Problem-11" class="headerlink" title="Problem 11"></a>Problem 11</h3><blockquote><p>vendor&#x2F;lineage&#x2F;build&#x2F;tasks&#x2F;kernel.mk:139: warning: ***************************************************************<br>vendor&#x2F;lineage&#x2F;build&#x2F;tasks&#x2F;kernel.mk:140: warning: * Using prebuilt kernel binary instead of source              *<br>vendor&#x2F;lineage&#x2F;build&#x2F;tasks&#x2F;kernel.mk:141: warning: * THIS IS DEPRECATED, AND IS NOT ADVISED.                     *<br>vendor&#x2F;lineage&#x2F;build&#x2F;tasks&#x2F;kernel.mk:142: warning: * Please configure your device to download the kernel         *<br>vendor&#x2F;lineage&#x2F;build&#x2F;tasks&#x2F;kernel.mk:143: warning: * source repository to kernel&#x2F;huawei&#x2F;t2-common&#x2F;<br>vendor&#x2F;lineage&#x2F;build&#x2F;tasks&#x2F;kernel.mk:144: warning: * for more information                                        *<br>vendor&#x2F;lineage&#x2F;build&#x2F;tasks&#x2F;kernel.mk:145: warning: ***************************************************************</p></blockquote><p>啊这是个警告，就是说在编译vendor的时候一些东西直接拿之前编译好的二进制来用的话是不建议的。<br>后续补：诶卧槽不对，好像是我又下少东西了淦，就是上面配置<code>federer.xml</code>的地方，后来我多加了一行kernel-common。但是现在重新<code>repo sync</code>肯定是不行的，所以我们直接去<code>~/android/lineage/kernel/huawei</code>里将<code>t2-common</code>内核clone进来：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> --depth=1 https://github.com/datenpanne/android_kernel_huawei_t2-common.git t2-common<br></code></pre></td></tr></table></figure><p>这个步骤因机型而异！！不要因为我这么操作了，你也这么操作！！</p><h3 id="Problem-12"><a href="#Problem-12" class="headerlink" title="Problem 12"></a>Problem 12</h3><blockquote><p>FAILED: ninja: ‘out&#x2F;target&#x2F;product&#x2F;federer&#x2F;kernel’, needed by ‘out&#x2F;target&#x2F;product&#x2F;federer&#x2F;recovery.img’, missing and no known rule to make it</p></blockquote><p>这是源码仓库提供的编译链里缺失了<code>dtbToolLineage</code>这个工具。我们只需要将其源码下载下来然后编译，再将其复制进去即可。具体操作如下：<br>前往<code>https://github.com/LineageOS/android_system_tools_dtbtool</code>仓库，将<code>dtbtool.c</code>文件直接下载到桌面，用gcc编译<code>gcc dtbtool.c -o dtbToolLineage</code>，生成的文件为<code>dtbToolLineage</code>，然后将它手动放到<code>~/android/lineage/out/host/linux-x86/bin/</code>下，重新运行<code>brunch federer</code>即可。<br>或者往<code>~/android/lineage/.repo/local_manifests/federer.xml</code>里添加如下内容：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--dtbtool--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">remote</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;dtbtool&quot;</span> <span class="hljs-attr">fetch</span>=<span class="hljs-string">&quot;https://github.com&quot;</span> <span class="hljs-attr">revision</span>=<span class="hljs-string">&quot;lineage-18.1&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;system/tools/dtbtool&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;LineageOS/android_system_tools_dtbtool&quot;</span> <span class="hljs-attr">remote</span>=<span class="hljs-string">&quot;dtbtool&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><h3 id="Problem-13"><a href="#Problem-13" class="headerlink" title="Problem 13"></a>Problem 13</h3><blockquote><p>FAILED: ninja: ‘external&#x2F;ant-wireless&#x2F;antradio-library&#x2F;com.dsi.ant.antradio_library.xml’, needed by ‘out&#x2F;target&#x2F;product&#x2F;federer&#x2F;system&#x2F;vendor&#x2F;etc&#x2F;permissions&#x2F;com.dsi.ant.antradio_library.xml’, missing and no known rule to make it</p></blockquote><p>这是缺失<code>com.dsi.ant.antradio_library.xml</code>，我一看，好家伙这个目录下直接把它的父目录<code>antradio-library</code>整个弄丢了。我们只需要前往github将这个目录clone进去即可。<br>前往<code>~/android/lineage/external/ant-wireless/</code>执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> --depth=1 https://github.com/LineageOS/android_external_ant-wireless_antradio-library.git antradio-library<br></code></pre></td></tr></table></figure><h3 id="Problem-14"><a href="#Problem-14" class="headerlink" title="Problem 14"></a>Problem 14</h3><blockquote><p>FAILED: ninja: ‘vendor&#x2F;huawei&#x2F;federer&#x2F;proprietary&#x2F;vendor&#x2F;bin&#x2F;fm_qsoc_patches’, needed by ‘out&#x2F;target&#x2F;product&#x2F;federer&#x2F;system&#x2F;vendor&#x2F;bin&#x2F;fm_qsoc_patches’, missing and no known rule to make it</p></blockquote><p>这是缺失<code>fm_qsoc_patches</code>，我去原始<code>vendor</code>仓库找了一遍确实找到了，但是有点奇怪的是为什么我的电脑上这个文件不存在了。先不管了，回到<a href="https://github.com/datenpanne/android_vendor_huawei_federer/blob/la-17.1/proprietary/vendor/bin/fm_qsoc_patches">github原始仓库</a>里把这个文件下下来手动放进<code>~/android/lineage/vendor/huawei/federer/proprietary/vendor/bin</code>再继续吧。</p><h3 id="Problem-15"><a href="#Problem-15" class="headerlink" title="Problem 15"></a>Problem 15</h3><blockquote><p>FAILED: ninja: ‘device&#x2F;huawei&#x2F;t2-common&#x2F;configs&#x2F;wpa_supplicant_overlay.conf’, needed by ‘out&#x2F;target&#x2F;product&#x2F;federer&#x2F;system&#x2F;vendor&#x2F;etc&#x2F;wifi&#x2F;wpa_supplicant_overlay.conf’, missing and no known rule to make it</p></blockquote><p>这是缺失<code>wpa_supplicant_overlay.conf</code>，我在原始仓库里找了一圈也没找到，但是在平板的<code>/vendor/etc/wifi/wpa_supplicant_overlay.conf</code>下找到了。<br>解决方法: 在<code>~/android/lineage/device/huawei/t2-common/configs</code>下创建文件<code>wpa_supplicant_overlay.conf</code>，内容填入如下:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs text">disable_scan_offload=1<br>p2p_disabled=1<br>p2p_no_group_iface=1<br>tdls_external_control=1<br>interworking=1<br>hs20=1<br>auto_interworking=0<br>bss_max_count=512<br>bss_no_flush_when_down=1<br>driver_param=use_p2p_group_interface=1<br></code></pre></td></tr></table></figure><h3 id="Problem-16"><a href="#Problem-16" class="headerlink" title="Problem 16"></a>Problem 16</h3><blockquote><p>FAILED: ninja: ‘out&#x2F;target&#x2F;product&#x2F;federer&#x2F;obj_arm&#x2F;SHARED_LIBRARIES&#x2F;libqdMetaData_intermediates&#x2F;libqdMetaData.so.toc’, needed by ‘out&#x2F;target&#x2F;product&#x2F;federer&#x2F;obj_arm&#x2F;SHARED_LIBRARIES&#x2F;camera.msm8916_intermediates&#x2F;LINKED&#x2F;camera.msm8916.so’, missing and no known rule to make it</p></blockquote><p>问题与<a href="#problem-9">Problem 9</a>重复。把那个问题按照修补<code>~/android/lineage/.repo/local_manifests/federer.xml</code>的过程修补之后此报错就不会出现。</p><h3 id="Problem-17"><a href="#Problem-17" class="headerlink" title="Problem 17"></a>Problem 17</h3><blockquote><p>FAILED: build&#x2F;make&#x2F;core&#x2F;main.mk:1312: warning:  device&#x2F;huawei&#x2F;federer&#x2F;lineage_federer.mk includes non-existent modules in PRODUCT_PACKAGES<br>Offending entries: Snap TimeKeep <a href="mailto:&#97;&#x6e;&#100;&#114;&#x6f;&#105;&#100;&#46;&#104;&#97;&#114;&#100;&#119;&#97;&#x72;&#101;&#x2e;&#x61;&#x75;&#x64;&#x69;&#x6f;&#46;&#x65;&#x66;&#x66;&#x65;&#x63;&#116;&#x40;&#x32;&#x2e;&#x30;&#x2d;&#x73;&#101;&#x72;&#x76;&#x69;&#99;&#101;">&#97;&#x6e;&#100;&#114;&#x6f;&#105;&#100;&#46;&#104;&#97;&#114;&#100;&#119;&#97;&#x72;&#101;&#x2e;&#x61;&#x75;&#x64;&#x69;&#x6f;&#46;&#x65;&#x66;&#x66;&#x65;&#x63;&#116;&#x40;&#x32;&#x2e;&#x30;&#x2d;&#x73;&#101;&#x72;&#x76;&#x69;&#99;&#101;</a> <a href="mailto:&#x61;&#110;&#x64;&#x72;&#x6f;&#x69;&#x64;&#46;&#104;&#x61;&#114;&#x64;&#119;&#x61;&#x72;&#x65;&#46;&#98;&#x6c;&#x75;&#x65;&#x74;&#x6f;&#x6f;&#x74;&#x68;&#x2e;&#x61;&#x32;&#x64;&#112;&#64;&#x31;&#46;&#x30;&#45;&#x69;&#109;&#x70;&#108;">&#x61;&#110;&#x64;&#x72;&#x6f;&#x69;&#x64;&#46;&#104;&#x61;&#114;&#x64;&#119;&#x61;&#x72;&#x65;&#46;&#98;&#x6c;&#x75;&#x65;&#x74;&#x6f;&#x6f;&#x74;&#x68;&#x2e;&#x61;&#x32;&#x64;&#112;&#64;&#x31;&#46;&#x30;&#45;&#x69;&#109;&#x70;&#108;</a> <a href="mailto:&#97;&#x6e;&#x64;&#x72;&#x6f;&#x69;&#100;&#46;&#104;&#x61;&#114;&#x64;&#119;&#97;&#114;&#101;&#46;&#x64;&#x72;&#x6d;&#64;&#x31;&#x2e;&#50;&#x2d;&#x73;&#x65;&#114;&#118;&#105;&#99;&#101;&#46;&#119;&#105;&#100;&#101;&#x76;&#x69;&#110;&#x65;">&#97;&#x6e;&#x64;&#x72;&#x6f;&#x69;&#100;&#46;&#104;&#x61;&#114;&#x64;&#119;&#97;&#114;&#101;&#46;&#x64;&#x72;&#x6d;&#64;&#x31;&#x2e;&#50;&#x2d;&#x73;&#x65;&#114;&#118;&#105;&#99;&#101;&#46;&#119;&#105;&#100;&#101;&#x76;&#x69;&#110;&#x65;</a> <a href="mailto:&#x61;&#x6e;&#100;&#114;&#111;&#x69;&#100;&#46;&#x68;&#97;&#x72;&#x64;&#119;&#x61;&#114;&#x65;&#x2e;&#x67;&#x72;&#97;&#112;&#x68;&#x69;&#x63;&#115;&#x2e;&#x63;&#x6f;&#x6d;&#112;&#111;&#115;&#x65;&#x72;&#64;&#x32;&#46;&#x31;&#45;&#105;&#109;&#x70;&#x6c;">&#x61;&#x6e;&#100;&#114;&#111;&#x69;&#100;&#46;&#x68;&#97;&#x72;&#x64;&#119;&#x61;&#114;&#x65;&#x2e;&#x67;&#x72;&#97;&#112;&#x68;&#x69;&#x63;&#115;&#x2e;&#x63;&#x6f;&#x6d;&#112;&#111;&#115;&#x65;&#x72;&#64;&#x32;&#46;&#x31;&#45;&#105;&#109;&#x70;&#x6c;</a> <a href="mailto:&#x61;&#110;&#x64;&#114;&#111;&#105;&#100;&#x2e;&#x68;&#x61;&#x72;&#100;&#x77;&#97;&#114;&#101;&#46;&#x70;&#x6f;&#x77;&#101;&#x72;&#x40;&#49;&#46;&#x32;&#x2d;&#x73;&#101;&#x72;&#118;&#105;&#x63;&#x65;&#45;&#113;&#x74;&#105;">&#x61;&#110;&#x64;&#114;&#111;&#105;&#100;&#x2e;&#x68;&#x61;&#x72;&#100;&#x77;&#97;&#114;&#101;&#46;&#x70;&#x6f;&#x77;&#101;&#x72;&#x40;&#49;&#46;&#x32;&#x2d;&#x73;&#101;&#x72;&#118;&#105;&#x63;&#x65;&#45;&#113;&#x74;&#105;</a> <a href="mailto:&#97;&#x6e;&#x64;&#x72;&#111;&#x69;&#x64;&#46;&#x68;&#x61;&#114;&#x64;&#x77;&#97;&#x72;&#101;&#46;&#114;&#101;&#x6e;&#x64;&#101;&#x72;&#x73;&#x63;&#114;&#x69;&#112;&#x74;&#x40;&#49;&#46;&#x30;&#x2d;&#x73;&#101;&#x72;&#118;&#x69;&#99;&#x65;">&#97;&#x6e;&#x64;&#x72;&#111;&#x69;&#x64;&#46;&#x68;&#x61;&#114;&#x64;&#x77;&#97;&#x72;&#101;&#46;&#114;&#101;&#x6e;&#x64;&#101;&#x72;&#x73;&#x63;&#114;&#x69;&#112;&#x74;&#x40;&#49;&#46;&#x30;&#x2d;&#x73;&#101;&#x72;&#118;&#x69;&#99;&#x65;</a> <a href="mailto:&#97;&#x6e;&#x64;&#114;&#111;&#105;&#x64;&#46;&#x68;&#97;&#x72;&#x64;&#119;&#97;&#x72;&#x65;&#46;&#x77;&#105;&#102;&#105;&#x2e;&#111;&#102;&#102;&#108;&#111;&#97;&#100;&#x40;&#x31;&#46;&#48;&#45;&#x73;&#x65;&#x72;&#118;&#105;&#x63;&#x65;">&#97;&#x6e;&#x64;&#114;&#111;&#105;&#x64;&#46;&#x68;&#97;&#x72;&#x64;&#119;&#97;&#x72;&#x65;&#46;&#x77;&#105;&#102;&#105;&#x2e;&#111;&#102;&#102;&#108;&#111;&#97;&#100;&#x40;&#x31;&#46;&#48;&#45;&#x73;&#x65;&#x72;&#118;&#105;&#x63;&#x65;</a> <a href="mailto:&#97;&#110;&#100;&#x72;&#x6f;&#105;&#x64;&#x2e;&#x68;&#105;&#x64;&#x6c;&#x2e;&#x6d;&#97;&#x6e;&#x61;&#x67;&#101;&#114;&#x40;&#49;&#x2e;&#x30;&#x2d;&#106;&#x61;&#x76;&#x61;">&#97;&#110;&#100;&#x72;&#x6f;&#105;&#x64;&#x2e;&#x68;&#105;&#x64;&#x6c;&#x2e;&#x6d;&#97;&#x6e;&#x61;&#x67;&#101;&#114;&#x40;&#49;&#x2e;&#x30;&#x2d;&#106;&#x61;&#x76;&#x61;</a> copybit.msm8916 ebtables ethertypes keystore.msm8916 libOmxCore libOmxSwVencHevc libOmxVdecHevc libQWiFiSoftApCfg libbt-vendor libcnefeatureconfig libdashplayer libebtc libgenlock libmm-omxcore libmm-qcamera libqsap_sdk libstagefrighthw make_ext4fs thermal.msm8916 timekeep <a href="mailto:&#x76;&#101;&#110;&#100;&#x6f;&#x72;&#46;&#113;&#116;&#105;&#46;&#x68;&#97;&#x72;&#100;&#119;&#97;&#x72;&#101;&#46;&#99;&#x72;&#121;&#112;&#x74;&#102;&#x73;&#104;&#119;&#64;&#x31;&#x2e;&#x30;&#45;&#x73;&#x65;&#x72;&#x76;&#x69;&#x63;&#101;&#x2d;&#113;&#116;&#x69;&#x2e;&#x71;&#115;&#101;&#x65;">&#x76;&#101;&#110;&#100;&#x6f;&#x72;&#46;&#113;&#116;&#105;&#46;&#x68;&#97;&#x72;&#100;&#119;&#97;&#x72;&#101;&#46;&#99;&#x72;&#121;&#112;&#x74;&#102;&#x73;&#104;&#119;&#64;&#x31;&#x2e;&#x30;&#45;&#x73;&#x65;&#x72;&#x76;&#x69;&#x63;&#101;&#x2d;&#113;&#116;&#x69;&#x2e;&#x71;&#115;&#101;&#x65;</a> wifilogd<br>build&#x2F;make&#x2F;core&#x2F;main.mk:1312: error: Build failed.</p></blockquote><p>参考前面的QCamera2问题，系统提示叫你加环境变量的那个，产生原因和他也相同，本处不再详细分析，具体参考<code>https://github.com/LineageOS/android</code>中不同分支下的<code>snippets/lineage.xml</code>差异。<br>解决方案：<br>打开<code>~/android/lineage/device/huawei/t2-common/t2.mk</code>，将这些内容所在行全部用<code>#</code>注释掉(将他们先拖到所在块的最后一行，如果上一行有<code>\\</code>字符，则也要把上一行的这个字符删了，然后再注释掉最后一行，要不然会导致<code>MakeFile</code>语法错误。直接删掉也不是不行<del><em>能注释就不要删</em></del>)：</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs makefile">android.hardware.audio.effect@2.0-service<br>android.hardware.bluetooth.a2dp@1.0-impl<br>android.hardware.drm@1.2-service.widevine<br>android.hardware.wifi.offload@1.0-service<br>android.hidl.manager@1.0-java<br>android.hardware.renderscript@1.0-service<br></code></pre></td></tr></table></figure><p>还是上面那个文件，将以下内容进行替换：</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs makefile">android.hardware.graphics.composer@2.1-impl 替换为 android.hardware.graphics.composer3<br>android.hardware.power@1.2-service-qti 替换为 android.hardware.power@1.2<br></code></pre></td></tr></table></figure><p>还是上面那个文件，将这几段注释掉：</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs makefile">PRODUCT_PACKAGES += \<br>    vendor.qti.hardware.cryptfshw@1.0-service-qti.qsee<br>还有<br>PRODUCT_PACKAGES += \<br>    libbt-vendor<br>还有<br>PRODUCT_PACKAGES += \<br>    keystore.msm8916<br>还有下面这些<br>    libOmxSwVencHevc \<br>    libOmxVdecHevc \<br>    libQWiFiSoftApCfg \<br>    libebtc<br>    libgenlock<br>    libqsap_sdk<br>    make_ext4fs<br>    thermal.msm8916<br>    wifilogd<br></code></pre></td></tr></table></figure><p>~~<br>编辑<code>~/android/lineage/.repo/manifests/default.xml</code>将这一行注释掉：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;hardware/qcom/bt&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;platform/hardware/qcom/bt&quot;</span> <span class="hljs-attr">groups</span>=<span class="hljs-string">&quot;qcom,pdk-qcom&quot;</span> <span class="hljs-attr">remote</span>=<span class="hljs-string">&quot;aosp&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><p>此时<code>repo sync</code>如果失败提示说找不到这个branch(revision)，则进入<code>~/android/lineage/hardware/qcom</code>执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">rm</span> -rf bt &amp;&amp; git <span class="hljs-built_in">clone</span> --depth=1 https://github.com/LineageOS/android_hardware_qcom_bt -b lineage-20.0-caf ~/hardware/qcom/bt<br></code></pre></td></tr></table></figure><p>~~<br>再编辑<code>~/android/lineage/.repo/local_manifests/federer.xml</code>，直接添加以下语句：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--device/huawei/federer/lineage_federer.mk includes non-existent modules in PRODUCT_PACKAGES--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">remote</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;Snap&quot;</span> <span class="hljs-attr">fetch</span>=<span class="hljs-string">&quot;https://github.com&quot;</span> <span class="hljs-attr">revision</span>=<span class="hljs-string">&quot;lineage-18.1&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;packages/apps/Snap&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;LineageOS/android_packages_apps_Snap&quot;</span> <span class="hljs-attr">remote</span>=<span class="hljs-string">&quot;Snap&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">remote</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;timekeep&quot;</span> <span class="hljs-attr">fetch</span>=<span class="hljs-string">&quot;https://github.com&quot;</span> <span class="hljs-attr">revision</span>=<span class="hljs-string">&quot;lineage-20&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;packages/apps/timekeep&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;LineageOS/android_hardware_sony_timekeep&quot;</span> <span class="hljs-attr">remote</span>=<span class="hljs-string">&quot;timekeep&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">remote</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;mm-audio&quot;</span> <span class="hljs-attr">fetch</span>=<span class="hljs-string">&quot;https://github.com&quot;</span> <span class="hljs-attr">revision</span>=<span class="hljs-string">&quot;cm-9.1.0&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;vendor/qcom/opensource/omx/mm-audio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;LineageOS/android_vendor_qcom_opensource_omx_mm-audio&quot;</span> <span class="hljs-attr">remote</span>=<span class="hljs-string">&quot;mm-audio&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">remote</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;mm-video&quot;</span> <span class="hljs-attr">fetch</span>=<span class="hljs-string">&quot;https://github.com&quot;</span> <span class="hljs-attr">revision</span>=<span class="hljs-string">&quot;cm-9.1.0&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;vendor/qcom/opensource/omx/mm-video&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;LineageOS/android_vendor_qcom_opensource_omx_mm-video&quot;</span> <span class="hljs-attr">remote</span>=<span class="hljs-string">&quot;mm-video&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">remote</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;mm-core&quot;</span> <span class="hljs-attr">fetch</span>=<span class="hljs-string">&quot;https://github.com&quot;</span> <span class="hljs-attr">revision</span>=<span class="hljs-string">&quot;cm-9.1.0&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;vendor/qcom/opensource/omx/mm-core&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;LineageOS/android_vendor_qcom_opensource_omx_mm-core&quot;</span> <span class="hljs-attr">remote</span>=<span class="hljs-string">&quot;mm-core&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">remote</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;ebtables&quot;</span> <span class="hljs-attr">fetch</span>=<span class="hljs-string">&quot;https://github.com&quot;</span> <span class="hljs-attr">revision</span>=<span class="hljs-string">&quot;lineage-15.1&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;external/ebtables&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;LineageOS/android_external_ebtables&quot;</span> <span class="hljs-attr">remote</span>=<span class="hljs-string">&quot;ebtables&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">remote</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;mm-dash&quot;</span> <span class="hljs-attr">fetch</span>=<span class="hljs-string">&quot;https://github.com&quot;</span> <span class="hljs-attr">revision</span>=<span class="hljs-string">&quot;cm-11.0&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;external/mm-dash&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;LineageOS/android_external_mm-dash&quot;</span> <span class="hljs-attr">remote</span>=<span class="hljs-string">&quot;mm-dash&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">remote</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;cryptfs_hw&quot;</span> <span class="hljs-attr">fetch</span>=<span class="hljs-string">&quot;https://github.com&quot;</span> <span class="hljs-attr">revision</span>=<span class="hljs-string">&quot;lineage-19.1&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;vendor/qcom/opensource/cryptfs_hw&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;LineageOS/android_vendor_qcom_opensource_cryptfs_hw&quot;</span> <span class="hljs-attr">remote</span>=<span class="hljs-string">&quot;cryptfs_hw&quot;</span> <span class="hljs-attr">groups</span>=<span class="hljs-string">&quot;qcom,pdk-qcom&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><p>然后再在26行添加以下语句，以让编译系统知道这来自老旧的仓库，这些文件是旧的格式而非最新格式，就不会因此而报错：</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs makefile">TARGET_DISABLE_EPPE := true<br></code></pre></td></tr></table></figure><p>剩下这些丢失就会自动忽略：<code>copybit.msm8916 libdashplayer libmm-qcamera libstagefrighthw libcnefeatureconfig</code>,在<a href="https://review.lineageos.org/c/LineageOS/android_device_motorola_msm8916-common/+/324283/6/msm8916.mk#313">Lineage Gerrit</a>中只保留了这两个：<code>libstagefrighthw libcnefeatureconfig</code></p><h3 id="Problem-18"><a href="#Problem-18" class="headerlink" title="Problem 18"></a>Problem 18</h3><blockquote><p>vendor&#x2F;qcom&#x2F;opensource&#x2F;omx&#x2F;mm-core&#x2F;omxcore&#x2F;Android.mk: error: libOmxCore: LOCAL_COPY_HEADERS is obsolete. See <a href="https://android.googlesource.com/platform/build/+/master/Changes.md#copy_headers">https://android.googlesource.com/platform/build/+/master/Changes.md#copy_headers</a></p></blockquote><p>问题与<a href="#problem-2">Problem 2</a>重复。打开<code>/home/android233/android/lineage/vendor/qcom/opensource/omx/mm-core/omxcore/omxcore.mk</code>，在最前面添加<code>BUILD_BROKEN_USES_BUILD_COPY_HEADERS := true</code><br>~~<br>这是makefile语法过时问题。<br>打开<code>vendor/qcom/opensource/omx/mm-core/omxcore/Android.mk</code>，将以下部分</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs makefile">LOCAL_COPY_HEADERS      := inc/OMX_Audio.h<br>LOCAL_COPY_HEADERS      += inc/OMX_Component.h<br>LOCAL_COPY_HEADERS      += inc/OMX_ContentPipe.h<br>LOCAL_COPY_HEADERS      += inc/OMX_Core.h<br>LOCAL_COPY_HEADERS      += inc/OMX_Image.h<br>LOCAL_COPY_HEADERS      += inc/OMX_Index.h<br>LOCAL_COPY_HEADERS      += inc/OMX_IVCommon.h<br>LOCAL_COPY_HEADERS      += inc/OMX_Other.h<br>LOCAL_COPY_HEADERS      += inc/OMX_QCOMExtns.h<br>LOCAL_COPY_HEADERS      += inc/OMX_Types.h<br>LOCAL_COPY_HEADERS      += inc/OMX_Video.h<br>LOCAL_COPY_HEADERS      += inc/qc_omx_common.h<br>LOCAL_COPY_HEADERS      += inc/qc_omx_component.h<br>LOCAL_COPY_HEADERS      += inc/qc_omx_msg.h<br>LOCAL_COPY_HEADERS      += inc/QOMX_AudioExtensions.h<br>LOCAL_COPY_HEADERS      += inc/QOMX_AudioIndexExtensions.h<br>LOCAL_COPY_HEADERS      += inc/OMX_CoreExt.h<br>LOCAL_COPY_HEADERS      += inc/QOMX_CoreExtensions.h<br>LOCAL_COPY_HEADERS      += inc/QOMX_FileFormatExtensions.h<br>LOCAL_COPY_HEADERS      += inc/QOMX_IVCommonExtensions.h<br>LOCAL_COPY_HEADERS      += inc/QOMX_SourceExtensions.h<br>LOCAL_COPY_HEADERS      += inc/QOMX_VideoExtensions.h<br>LOCAL_COPY_HEADERS      += inc/OMX_IndexExt.h<br>LOCAL_COPY_HEADERS      += inc/QOMX_StreamingExtensions.h<br></code></pre></td></tr></table></figure><p>修改为</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs makefile">LOCAL_EXPORT_C_INCLUDES := <span class="hljs-variable">$(LOCAL_PATH)</span>/inc<br></code></pre></td></tr></table></figure><p>~~</p><h3 id="Problem-19"><a href="#Problem-19" class="headerlink" title="Problem 19"></a>Problem 19</h3><blockquote><p>error: vendor&#x2F;qcom&#x2F;opensource&#x2F;cryptfs_hw&#x2F;Android.bp:14:1: “libcryptfs_hw” depends on undefined module “legacy_hw_disk_encryption_defaults”</p></blockquote><p>打开<code>vendor/qcom/opensource/cryptfs_hw/Android.bp</code>，删除这个部分以及前面的一个逗号(Android13起不需要这个apex,所以可以移除)</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><span class="hljs-string">&quot;vendor.qti.hardware.cryptfshw@1.0&quot;</span>,<br></code></pre></td></tr></table></figure><p>和这个部分</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><span class="hljs-section">defaults: [</span><br>  <span class="hljs-string">&quot;legacy_hw_disk_encryption_defaults&quot;</span>,<br>],<br></code></pre></td></tr></table></figure><h3 id="Problem-20"><a href="#Problem-20" class="headerlink" title="Problem 20"></a>Problem 20</h3><blockquote><p>build&#x2F;make&#x2F;core&#x2F;tasks&#x2F;platform_availability_check.mk:37: warning:  Following modules are requested to be installed. But are not available for platform because they do not have “&#x2F;&#x2F;apex_available:platform” or they depend on other modules that are not available for platform<br>Offending entries:<br>audio.a2dp.default:packages&#x2F;modules&#x2F;Bluetooth&#x2F;system&#x2F;audio_a2dp_hw<br>audio.a2dp.default_32:packages&#x2F;modules&#x2F;Bluetooth&#x2F;system&#x2F;audio_a2dp_hw<br>In file included from build&#x2F;make&#x2F;core&#x2F;main.mk:1456:<br>In file included from build&#x2F;make&#x2F;core&#x2F;Makefile:7030:<br>build&#x2F;make&#x2F;core&#x2F;tasks&#x2F;platform_availability_check.mk:37: error: Build failed.</p></blockquote><p>打开<code>~/home/android233/android/lineage/build/make/core/tasks/platform_availability_check</code>,将37行注释掉。</p><h3 id="Problem-21"><a href="#Problem-21" class="headerlink" title="Problem 21"></a>Problem 21</h3><blockquote><p>FAILED: ninja: ‘vendor&#x2F;huawei&#x2F;federer&#x2F;proprietary&#x2F;vendor&#x2F;bin&#x2F;fm_qsoc_patches’, needed by ‘out&#x2F;target&#x2F;product&#x2F;federer&#x2F;system&#x2F;vendor&#x2F;bin&#x2F;fm_qsoc_patches’, missing and no known rule to make it</p></blockquote><p>与 <a href="#problem-14">Problem 14</a> 重复。</p><h3 id="Problem-22"><a href="#Problem-22" class="headerlink" title="Problem 22"></a>Problem 22</h3><blockquote><p>ccache: error: Failed to create directory &#x2F;home&#x2F;android233&#x2F;.cache&#x2F;ccache&#x2F;tmp: Not a directory</p></blockquote><p>在我电脑上，<code>~/.cache/ccache</code>居然是个大小<code>0B</code>的空文件？难怪阻止了在目录下创建<code>tmp</code>文件。将<code>ccache</code>文件删了，<code>ninja</code>会自动创建<code>tmp</code>文件。问题解决。</p><h3 id="Problem-23"><a href="#Problem-23" class="headerlink" title="Problem 23"></a>Problem 23</h3><blockquote><p>device&#x2F;huawei&#x2F;t2-common&#x2F;gps&#x2F;core&#x2F;ContextBase.h:34:10: fatal error: ‘MsgTask.h’ file not found<br>#include &lt;MsgTask.h&gt;<br>         ^~~~~~~~~~~</p></blockquote><p>~~<br>C&#x2F;C++规定用尖括号包含的头文件是从系统目录中搜索的，而用引号包含的头文件是从当前目录中搜索的。后面就是根据报错日志修改C++源码的时候了。</p><h3 id="Problem-24"><a href="#Problem-24" class="headerlink" title="Problem 24"></a>Problem 24</h3><blockquote><p>found ELF prebuilt in PRODUCT_COPY_FILES, use cc_prebuilt_binary &#x2F; cc_prebuilt_library_shared instead.</p></blockquote><p>参考<a href="https://github.com/remote-android/redroid-doc/issues/275">此issue</a><br>打开<code>/home/android233/android/lineage/device/huawei/federer/BoardConfig.mk</code>，在<code>最顶上</code>添加：<code>BUILD_BROKEN_ELF_PREBUILT_PRODUCT_COPY_FILES := true</code></p><p>或者这样也行(我用的上面那个方法):<br>打开<code>/home/android233/android/lineage/build/make/core/Makefile</code>,将以下几行注释或删除：</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs makefile">check_elf_prebuilt_product_copy_files := true<br><span class="hljs-keyword">ifneq</span> (,<span class="hljs-variable">$(<span class="hljs-built_in">filter</span> true,<span class="hljs-variable">$(BUILD_BROKEN_ELF_PREBUILT_PRODUCT_COPY_FILES)</span>)</span>)<br>check_elf_prebuilt_product_copy_files :=<br><span class="hljs-keyword">endif</span><br></code></pre></td></tr></table></figure><h3 id="Problem-25"><a href="#Problem-25" class="headerlink" title="Problem 25"></a>Problem 25</h3><blockquote><p>clang: error: unable to execute command: Executable “ld” doesn’t exist!<br>make[1]: *** [&#x2F;home&#x2F;android233&#x2F;android&#x2F;lineage&#x2F;kernel&#x2F;huawei&#x2F;t2-common&#x2F;Makefile:426: scripts_basic] Error 2</p></blockquote><p>这个问题参见<a href="https://www.reddit.com/r/LineageOS/comments/uarj83/help_building_lineage_171_for_porg_nvidia_jetson/">reddit</a>以及<a href="https://stackoverflow.com/questions/67175341/build-error-with-clang-msm-3-18-kernel-android-q">Stack Overflow</a><br>这个修复起来稍微有点复杂，要涉及到抓bug的操作。<br>第一步先去打开上面说的那个文件，找到报错所在行<code>426</code>，它附近的代码是这样的：</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><span class="hljs-comment"># Basic helpers built in scripts/</span><br>PHONY += scripts_basic<br><span class="hljs-section">scripts_basic:</span><br><span class="hljs-variable">$(Q)</span><span class="hljs-variable">$(MAKE)</span> <span class="hljs-variable">$(build)</span>=scripts/basic<br><span class="hljs-variable">$(Q)</span>rm -f .tmp_quiet_recordmcount<br></code></pre></td></tr></table></figure><p>向上找到<code>LD</code>的定义位置(我这里是328行)：</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs makefile">LD= <span class="hljs-variable">$(CROSS_COMPILE)</span>ld<br></code></pre></td></tr></table></figure><p>回到<code>426</code>行那里，将那块代码修改为这样：</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><span class="hljs-comment"># Basic helpers built in scripts/</span><br>PHONY += scripts_basic<br><span class="hljs-section">scripts_basic:</span><br>@echo <span class="hljs-string">&quot;============CROSS_COMPILE=<span class="hljs-variable">$(CROSS_COMPILE)</span>&quot;</span><br>@echo <span class="hljs-string">&quot;============LD=<span class="hljs-variable">$(LD)</span>&quot;</span><br><span class="hljs-variable">$(Q)</span><span class="hljs-variable">$(MAKE)</span> <span class="hljs-variable">$(build)</span>=scripts/basic<br><span class="hljs-variable">$(Q)</span>rm -f .tmp_quiet_recordmcount<br></code></pre></td></tr></table></figure><p>然后重新进行<code>brunch federer</code>编译工程，复现这个问题，将多出来的两行输出记下，重点关注多出来的第二行<code>LD</code>的输出。在我电脑上是这样的：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">============CROSS_COMPILE=/home/android233/android/lineage/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9/bin/aarch64-linux-android-<br>============LD=/home/android233/android/lineage/prebuilts/clang/host/linux-x86/clang-r450784d/bin/ld.lld<br></code></pre></td></tr></table></figure><p>前往<code>LD</code>所在的目录，用<code>ls -al</code>查看目录下的详细结构。一般会发现缺少了<code>ld</code>这个文件，而且能看到有<code>lld</code>这个文件(或者软链接)。我的这个目录是这样的：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">...<br>lrwxrwxrwx  1 android233 android233         3  1月22日 14:47 ld.lld -&gt; lld<br>-rwxr-xr-x  1 android233 android233  56810672  1月22日 14:47 lld<br>...<br></code></pre></td></tr></table></figure><p>我们可以看到，<code>lld</code>是个二进制文件，但<code>ld.lld</code>是个链接。我们只需要为<code>lld</code>再创建一个名为<code>ld</code>的链接到当前目录即可(当然复制也不是不行23333)。具体操作就是，这么执行命令：<code>ln -sf lld ld</code>(或者干脆<code>cp lld ld</code>)。<br>最后，重新编译项目<code>brunch federer</code>，解决！</p><h3 id="Problem-26"><a href="#Problem-26" class="headerlink" title="Problem 26"></a>Problem 26</h3><blockquote><p>device&#x2F;huawei&#x2F;federer&#x2F;init&#x2F;init_heap.cpp:74:5: error: use of undeclared identifier ‘property_set’</p></blockquote><p>经过核查，相比<a href="http://aospxref.com/android-10.0.0_r47/xref/system/core/init/property_service.h">安卓10</a>,自<a href="http://aospxref.com/android-11.0.0_r21/xref/system/core/init/property_service.h">安卓11</a>开始，<code>property_set</code>已从命名空间<code>android::init::</code>下删除，并且同基线CPU的其他设备也弃用了这个参数初始化文件。此更改同步到了安卓13。打开<code>/home/android233/android/lineage/device/huawei/federer/init/init_heap.cpp</code>，将涉及到该命名空间的所有行全注释。</p><h3 id="Problem-27"><a href="#Problem-27" class="headerlink" title="Problem 27"></a>Problem 27</h3><blockquote><p>system&#x2F;libbase&#x2F;include&#x2F;android-base&#x2F;result.h:378:1: error: too many template parameters in template redeclaration<br>template &lt;typename T, typename E, bool include_message&gt;</p></blockquote><p>打开<code>system/libbase/include/android-base/result.h</code>，把378行所在的模板类定义及其结构体一整个删除</p><h3 id="Problem-28"><a href="#Problem-28" class="headerlink" title="Problem 28"></a>Problem 28</h3><blockquote><p>ld.lld: error: duplicate symbol: yylloc</p></blockquote><p>打开<code>/home/android233/android/lineage/kernel/huawei/t2-common/scripts/dtc/dtc-lexer.lex.c_shipped</code>，将<code>extern YYLTYPE yylloc;</code>修改为<code>YYLTYPE yylloc;</code></p><h3 id="Problem-29"><a href="#Problem-29" class="headerlink" title="Problem 29"></a>Problem 29</h3><blockquote><p>一连串的devicetable-offsets.c:27:2: error: unexpected token at start of statement: DEVID_FIELD(hid_device_id, vendor);报错(同文件不同行)</p></blockquote><p>打开<code>/home/android233/android/lineage/kernel/huawei/t2-common/Makefile</code>，将<code>KBUILD_CFLAGS+= $(call cc-disable-warning,maybe-uninitialized,)</code>替换为<code>KBUILD_CFLAGS+= $(call cc-disable-warning,uninitialized,)</code><br>参见<a href="https://github.com/MiCode/Xiaomi_Kernel_OpenSource/issues/2469">此issue</a>,打开<code>/home/android233/android/lineage/kernel/huawei/t2-common/include/linux/kbuild.h</code>,将<code>asm volatile(&quot;\n-&gt;&quot; #sym &quot; %0 &quot; #val : : &quot;i&quot; (val))</code>替换为<code>asm volatile(&quot;\n.ascii \&quot;-&gt;&quot; #sym &quot; %0 &quot; #val &quot;\&quot;&quot; : : &quot;i&quot; (val))</code></p><h3 id="Problem-30"><a href="#Problem-30" class="headerlink" title="Problem 30"></a>Problem 30</h3><blockquote><p>&#x2F;bin&#x2F;sh: 1: cd: can’t cd to &#x2F;home&#x2F;android233&#x2F;android&#x2F;lineage&#x2F;out&#x2F;soong&#x2F;.intermediates&#x2F;vendor&#x2F;lineage&#x2F;build&#x2F;soong&#x2F;generated_kernel_includes&#x2F;gen</p></blockquote><p>进入<code>~/android/lineage/out/soong/.intermediates/vendor</code>执行<code>mkdir -p lineage/build/soong/generated_kernel_includes/gen</code></p><h3 id="Problem-31"><a href="#Problem-31" class="headerlink" title="Problem 31"></a>Problem 31</h3><blockquote><p>scripts&#x2F;mod&#x2F;file2alias.c:176:2: error: use of undeclared identifier</p></blockquote><p>。。。不修了，以后再说吧，太耗时间了，投入产出不成正比。</p><h1 id="引用的文档和页面"><a href="#引用的文档和页面" class="headerlink" title="引用的文档和页面"></a>引用的文档和页面</h1><p><a href="https://wiki.lineageos.org/devices/dipper/build/#prepare-the-device-specific-code">Lineage Wiki - Build LineageOS for Xiaomi Mi 8</a><br><a href="https://review.lineageos.org/c/LineageOS/android_device_motorola_msm8916-common/+/324283">LineageOS Gerrit</a><br><a href="https://github.com/LineageOS/android/tree/lineage-19.1">Github - LineageOS</a><br><a href="http://developer.android.com/tools/device.html">Android Developers -  apps on a hardware device</a><br><a href="https://source.android.google.cn/docs/setup/download">Android Developers - Source control tools</a><br><a href="https://source.android.google.cn/docs/core/graphics/aidl-hwc?hl=zh-cn">Android Developers - 适用于硬件混合渲染器 HAL 的 AIDL</a><br><a href="https://stackoverflow.com/questions/67175341/build-error-with-clang-msm-3-18-kernel-android-q">Stack Overflow - Build error with Clang + msm-3.18 Kernel Android Q</a><br><a href="https://www.reddit.com/r/LineageOS/comments/uarj83/help_building_lineage_171_for_porg_nvidia_jetson/">Reddit - [help] Building Lineage 17.1 for porg</a><br><a href="https://mirrors.tuna.tsinghua.edu.cn/help/lineageOS/">清华大学开源镜像站 - lineageOS 源代码镜像使用帮助</a><br><a href="https://developer.sony.com/open-source/aosp-on-xperia-open-devices/guides/aosp-build-instructions/build-aosp-android-14/">Sony - Build AOSP Android 14</a><br><a href="https://github.com/LeCmnGend/How_to_build_ROM">Github - LeCmnGend&#x2F;How_to_build_ROM</a><br><a href="https://blog.csdn.net/u010164190/article/details/131278747">CSDN - Android12之编译报错LOCAL_COPY_HEADERS is obsolete</a></p><hr><p><a href="https://www.cnblogs.com/luoyesiqiu/p/10701419.html">cnblogs&#x2F;luoyesiqiu - 自己动手编译Android(LineageOS)源码</a><br><a href="https://xdaforums.com/t/guide-how-to-building-lineageos-for-an-unsupported-device.4419263/">XDA Developers - [GUIDE&#x2F;HOW-TO] Building LineageOS for an Unsupported Device</a><br><a href="https://android.stackexchange.com/questions/216435/how-to-build-lineageos-for-a-device-without-official-support">StackExchange - How to build lineageos for a device without official support</a></p>]]></content>
    
    
    <categories>
      
      <category>其他的开发杂记</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>iSH的浅折腾记录</title>
    <link href="/2024/01/14/7iSH%E7%9A%84%E6%B5%85%E6%8A%98%E8%85%BE%E8%AE%B0%E5%BD%95-240114/"/>
    <url>/2024/01/14/7iSH%E7%9A%84%E6%B5%85%E6%8A%98%E8%85%BE%E8%AE%B0%E5%BD%95-240114/</url>
    
    <content type="html"><![CDATA[<p><img src="https://ish.app/assets/icon.png" alt="封面"></p><p>闲来没事折腾折腾苹果上的ish，这东西比Termux难用：比如清华的一键换源命令不能用，默认给的是root用户，用的还是x86的包。</p><p>本质上还是相当于折腾Alpine Linux</p><h1 id="从0开始装到能用ssh"><a href="#从0开始装到能用ssh" class="headerlink" title="从0开始装到能用ssh"></a>从0开始装到能用ssh</h1><p><del><em><strong>第0步当然是去AppStore里下载iSH</strong></em></del></p><p>换清华源还是可以换的，只不过不能用官方的换源命令了，得改一下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sed -i <span class="hljs-string">&#x27;s/apk.ish.app\/v3.14-2023-05-19/mirrors.tuna.tsinghua.edu.cn\/alpine\/v3.14/g&#x27;</span> /etc/apk/repositories<br></code></pre></td></tr></table></figure><p>至于清华的换源命令为什么不能用….我们来看一下<code>/etc/apk/repositories</code>文件里是啥:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># This file contains pinned repositories managed by iSH. If the /ish directory</span><br><span class="hljs-comment"># exists, iSH uses the metadata stored in it to keep this file up to date (by</span><br><span class="hljs-comment"># overwriting the contents on boot.)</span><br>http://apk.ish.app/v3.14-2023-05-19/main<br>http://apk.ish.app/v3.14-2023-05-19/community<br></code></pre></td></tr></table></figure><p>清华的换源脚本会找不到匹配的字符串，所以得把更换的地方给调整一下。把<code>repositories</code>文件变成这样就行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># This file contains pinned repositories managed by iSH. If the /ish directory</span><br><span class="hljs-comment"># exists, iSH uses the metadata stored in it to keep this file up to date (by</span><br><span class="hljs-comment"># overwriting the contents on boot.)</span><br>http://mirrors.tuna.tsinghua.edu.cn/alpine/v3.14/main<br>http://mirrors.tuna.tsinghua.edu.cn/alpine/v3.14/community<br></code></pre></td></tr></table></figure><p>添加用户：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">apk add sudo<br>adduser username<br>addgroup username wheel<br></code></pre></td></tr></table></figure><p>到这里用户就建完了，给他加到wheel用户组里以可以执行sudo命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">visudo<br><span class="hljs-comment"># 找到%wheel ALL=(ALL) NOPASSWD: ALL前面的#，删掉他然后保存退出</span><br></code></pre></td></tr></table></figure><p>开整openssh：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">apk add openssh openssh-server<br>ssh-keygen -A<br></code></pre></td></tr></table></figure><h1 id="SSH，启动！"><a href="#SSH，启动！" class="headerlink" title="SSH，启动！"></a>SSH，启动！</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/usr/</span>sbin/sshd<br></code></pre></td></tr></table></figure><p>注意<code>iSH</code>中必须用绝对路径启动<code>sshd</code>，否则会报错说<code>sshd re-exec requires execution with an absolute path</code><br>这个时候将你的公钥传到<code>/home/username/.ssh/authorized_keys</code>中，就可以连上了！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs bash">PS C:\Users\admin&gt; ssh admin@192.168.1.102<br>Enter passphrase <span class="hljs-keyword">for</span> key <span class="hljs-string">&#x27;C:\Users\admin/.ssh/id_rsa&#x27;</span>:<br>Welcome to Alpine!<br><br>You can install packages with: apk add &lt;package&gt;<br><br>You may change this message by editing /etc/motd.<br><br>iPad:~$ <span class="hljs-built_in">pwd</span><br>/home/admin<br>iPad:~$ neofetch<br>       .hddddddddddddddddddddddh.          admin@iPad<br>      :dddddddddddddddddddddddddd:         ---------------<br>     /dddddddddddddddddddddddddddd/        OS: Alpine Linux v3.14 i686<br>    +dddddddddddddddddddddddddddddd+       Kernel: 4.20.69-ish<br>  `sdddddddddddddddddddddddddddddddds`     Uptime: 15 mins<br> `ydddddddddddd++hdddddddddddddddddddy`    Packages: 32 (apk)<br>.hddddddddddd+`  `+ddddh:-sdddddddddddh.   Shell: ash<br>hdddddddddd+`      `+y:    .sddddddddddh   Terminal: /dev/pts/1<br>ddddddddh+`   `//`   `.`     -sddddddddd   CPU: (2)<br>ddddddh+`   `/hddh/`   `:s-    -sddddddd   Memory: 1808MiB / 2036MiB<br>ddddh+`   `/+/dddddh/`   `+s-    -sddddd<br>ddd+`   `/o` :dddddddh/`   `oy-    .yddd<br>hdddyo+ohddyosdddddddddho+oydddy++ohdddh<br>.hddddddddddddddddddddddddddddddddddddh.<br> `yddddddddddddddddddddddddddddddddddy`<br>  `sdddddddddddddddddddddddddddddddds`<br>    +dddddddddddddddddddddddddddddd+<br>     /dddddddddddddddddddddddddddd/<br>      :dddddddddddddddddddddddddd:<br>       .hddddddddddddddddddddddh.<br><br>iPad:~$<br></code></pre></td></tr></table></figure><h1 id="安装OMZ"><a href="#安装OMZ" class="headerlink" title="安装OMZ"></a>安装OMZ</h1><p>这就跟别的电脑上安装步骤一样了没啥区别。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apk add git zsh<br>git <span class="hljs-built_in">clone</span> --depth=1 https://github.com/ohmyzsh/ohmyzsh.git<br><span class="hljs-built_in">cd</span> ohmyzsh<br><span class="hljs-built_in">cd</span> tools<br>sh install.sh<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Surface3装Linux踩坑记录</title>
    <link href="/2023/10/31/6Surface3%E8%A3%85Linux%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95-231031/"/>
    <url>/2023/10/31/6Surface3%E8%A3%85Linux%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95-231031/</url>
    
    <content type="html"><![CDATA[<p><img src="https://tse4-mm.cn.bing.net/th/id/OIP-C.umuhtu_JjocMMbT7mMA4wgHaEK?pid=ImgDet&dpr=2.8" alt="封面"></p><p><del>对没错，写完Surface Go 3的文又来Surface 3这里凑个热闹（</del></p><p>同学的老款苏菲装Linux重获新生！</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">4GB RAM,128GB EMMC<br>英特尔Atom Z8700处理器<br>4c4t,基频1.6GHz,睿频2.4GHz<br>最大TDP才2瓦！！！这么低！！！！！<br></code></pre></td></tr></table></figure><blockquote><p>“卧槽你的苏菲怎么续航能撑一天？大佬怎么优化的教教我”<br>“<a href="https://www.intel.cn/content/www/cn/zh/products/sku/85475/intel-atom-x7z8700-processor-2m-cache-up-to-2-40-ghz/specifications.html">英特尔Atom处理器</a>，tdp两瓦”<br>“啊那没事了”</p></blockquote><p>但是这东西装好系统之后缺驱动怎么办？<br>换一个<a href="https://github.com/linux-surface/linux-surface/">linux-surface</a>内核就行~<br>按照官方<a href="https://github.com/linux-surface/linux-surface/wiki/Installation-and-Setup">教程</a>走就OK</p><h1 id="Debian"><a href="#Debian" class="headerlink" title="Debian"></a>Debian</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 加仓库证书</span><br>wget -qO - https://raw.githubusercontent.com/linux-surface/linux-surface/master/pkg/keys/surface.asc \<br>    | gpg --dearmor | sudo <span class="hljs-built_in">dd</span> of=/etc/apt/trusted.gpg.d/linux-surface.gpg<br><span class="hljs-comment"># 添加仓库</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;deb [arch=amd64] https://pkg.surfacelinux.com/debian release main&quot;</span> \<br>| sudo <span class="hljs-built_in">tee</span> /etc/apt/sources.list.d/linux-surface.list<br><span class="hljs-comment"># 同步软件源</span><br>sudo apt update<br><span class="hljs-comment"># 安装内核及触碰驱动</span><br>sudo apt install linux-image-surface linux-headers-surface libwacom-surface iptsd<br><span class="hljs-comment"># 更新grub</span><br>sudo update-grub<br></code></pre></td></tr></table></figure><p>WiFi驱动：安装<code>firmware-libertas</code>然后重启系统。（<a href="https://www.2foo.net/howto-surface-3-on-debian-linux/">来源</a>）</p><h1 id="Arch-Linux"><a href="#Arch-Linux" class="headerlink" title="Arch Linux"></a>Arch Linux</h1><p>加仓库证书</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -s https://raw.githubusercontent.com/linux-surface/linux-surface/master/pkg/keys/surface.asc \<br>    | sudo pacman-key --add -<br>sudo pacman-key --finger 56C464BAAC421453<br>sudo pacman-key --lsign-key 56C464BAAC421453<br></code></pre></td></tr></table></figure><p>在<code>/etc/pacman.conf</code>中添加仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[linux-surface]<br>Server = https://pkg.surfacelinux.com/arch/<br></code></pre></td></tr></table></figure><p>更新源并安装内核和触屏驱动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo pacman -Syu<br>sudo pacman -S linux-surface linux-surface-headers iptsd<br></code></pre></td></tr></table></figure><p>更新grub</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo grub-mkconfig -o /boot/grub/grub.cfg<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>如何在没有220v插座的图书馆优雅的用Surface Go 3码字</title>
    <link href="/2023/10/29/5%E5%A6%82%E4%BD%95%E5%9C%A8%E6%B2%A1%E6%9C%89220v%E6%8F%92%E5%BA%A7%E7%9A%84%E5%9B%BE%E4%B9%A6%E9%A6%86%E4%BC%98%E9%9B%85%E7%9A%84%E7%94%A8Surface%20Go%203%E7%A0%81%E5%AD%97-231029/"/>
    <url>/2023/10/29/5%E5%A6%82%E4%BD%95%E5%9C%A8%E6%B2%A1%E6%9C%89220v%E6%8F%92%E5%BA%A7%E7%9A%84%E5%9B%BE%E4%B9%A6%E9%A6%86%E4%BC%98%E9%9B%85%E7%9A%84%E7%94%A8Surface%20Go%203%E7%A0%81%E5%AD%97-231029/</url>
    
    <content type="html"><![CDATA[<p><img src="https://media-cdn.microsoftstore.com.cn/media/product_long_description/3082-00000/pdp_image/topgo3_221104.jpg" alt="封面"></p><h1 id="话说旧事"><a href="#话说旧事" class="headerlink" title="话说旧事"></a>话说旧事</h1><p>两年前的今天，在同学的安利下我开箱了一台Surface Go 3，但是出厂预装的<code>Win11</code>家庭版<code>22000</code>实在难用，主要就是一个字：<em><strong>烫</strong></em>。在<a href="https://ark.intel.com/content/www/cn/zh/ark/products/213356/intel-core-i310100y-processor-4m-cache-up-to-3-90-ghz.html">i3-10100Y</a>这个TDP-up有7瓦CPU上运行臃肿的Win11，再加上那128G寸土寸金的SSD属实是有点小才大用了，尤其是装了WSA之后。<br><em><strong>不插电源用Win11两个小时就没电了！！</strong></em><br>于是我给它装回了<code>Win10 Iot LTSC 2021</code>系统。在获得流畅体验的同时，开始追求更加极客的玩法。<br>网上说装黑苹果可以提升Windows笔电的续航，但我装了<code>Big Sur</code>之后续航不仅没有变好，撞温度墙的次数也不比Win11少。后续的<code>Ventura</code>和<code>Sonoma</code>系统也是如此，尽管台前调度确实好用。<br>离谱的是，Surface Go 3这东西开机的时候不会给SD卡卡槽上电，也就意味着我无法在SD卡安装系统。<br>于是我从Windows划了32G出来试了试<code>ChromeOS</code>，一个基于<code>Gentoo</code>的<del><em>浏览器</em></del>系统。在获得更好的安卓体验的同时，电脑也能更加凉快。但是ChromeOS还是限制太多，比如想要享受纯净的Linux体验，就得开个<code>Debian</code>容器，要不然就是装<code>chromebrew</code>，不爽。在多次尝试将<code>ChromeOS</code> 装到SD卡中，均以失败告终，因为无法认到在SD卡内的<code>rootfs</code>。</p><p>甚至FydeOS官方对我的<a href="https://www.bilibili.com/video/BV1784y127DR/#reply191770078496">评价</a>是…</p><blockquote><p>Chromium OS跟一般的Linux不一样，不建议这么骚操作，我们官方不会出教程，你只能自己去尝试一下</p></blockquote><p>更要命的是，经历过我几次在SSD内折腾黑苹果之后，内置硬盘的寿命仅在一年就消耗了<code>3%</code>！！！<br>但是面对着捉襟见肘的空间，我打算放手搏一搏，死马当活马医，直接把<code>ArchLinux</code>装到SD卡里。</p><h1 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h1><p>开机，进<code>Arch Live CD</code>，把SD卡挂载到<code>/mnt</code>，把<code>ESP</code>挂到<code>/mnt/boot</code>下，直接<code>pacstrap</code>开跑。没想到啊，还成功了。查阅相关资料才知道，Surface会在加载<code>initramfs</code>之后给SD卡卡槽上电。先不管<code>ChromeOS</code> 了，先把Arch整好再说。</p><blockquote><p><strong>⚠警告</strong><br>请不要把<code>swap</code>放到SD卡内，否则你的卡寿命会掉的很快。<del>别说你买了延保就使劲造，回头丢数据了有你好哭的</del><br><del><em>所以我直接把<code>swap</code>关了</em></del></p></blockquote><p><del>既然是个x86机器，那就想办法榨干它。</del><code>vscode</code>, <code>Obsidian</code>, <code>syncthing</code>, <code>Chrome</code>, <code>Waydroid</code>, <code>Android Studio</code>, <code>Intellij Idea</code>啥的全怼进去。<br><del>然后<code>AS</code>在跑编译的时候就爆内存了，淦，下次不碰8G的电脑了</del></p><p>在跑<code>Waydroid</code>的时候，最开始还挺流畅的，但后来越来越卡，然后又流畅一会儿，又卡一会儿。</p><p>这让我突然想到了之前Win11的时候，电脑老撞温度墙，一撞墙CPU就强制锁到<code>399MHz</code>频率运行到降温为止。让我十分头大。</p><h1 id="试着解决"><a href="#试着解决" class="headerlink" title="试着解决"></a>试着解决</h1><p>突然想起来我在Windows上简单粗暴的调教温度墙的经历：直接用<code>ThrottleStop</code>禁用牙膏厂的<code>Turbo Boost</code>，然后电脑撑死就60度，上不去了。于是直接到Arch照搬这个操作。</p><p>一开始就是简单的关闭<code>Turbo Boost</code>，将<code>/sys/devices/system/cpu/intel_pstate/no_turbo</code>文件内容写为1，以此关闭Intel的<code>p-state</code>下的睿频功能。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo su<br><span class="hljs-built_in">echo</span> 1 &gt;&gt; /sys/devices/system/cpu/intel_pstate/no_turbo &amp;&amp; <span class="hljs-built_in">exit</span><br></code></pre></td></tr></table></figure><p>效果显著！Waydroid中运行<code>12306</code>这个网页套壳的卖票软件<del>(真不是星穹铁道)</del>和<code>飞常准</code>看飞机，苏菲就没撞过温度墙，一直50度很乖。就算我再开一个<del>日益臃肿的</del>最新版酷安，也是这个温度。</p><p>但是随之而来的问题是，两万毫安的充电宝只能撑大半天<del>因为苏菲吸得是在太快了</del>。就算平时开个<code>Okular</code>看书，<code>Obsidian</code>记笔记，再开个<code>syncthing</code>同步，也只能勉强将温度维持到40度，一直降不下来。问题是我平时也用不到那么高的性能，<del>为了防止性能过剩，</del>怎么办呢？</p><h1 id="对调度策略下手"><a href="#对调度策略下手" class="headerlink" title="对调度策略下手"></a>对调度策略下手</h1><p>之前查过很多资料，有更加精细粒度管理性能的<del>(直接人工硬核介入CPU的时间片轮转)</del>，也有简单粗暴限制CPU最大占用率的。在目前看来，我的需求更倾向于限制最大运行频率。</p><h1 id="初识cpupower工具"><a href="#初识cpupower工具" class="headerlink" title="初识cpupower工具"></a>初识<code>cpupower</code>工具</h1><blockquote><p><a href="https://archlinux.org/packages/?name=cpupower">cpupower</a> is a set of userspace utilities designed to assist with CPU frequency scaling. The package is not required to use scaling, but is highly recommended because it provides useful command-line utilities and a <a href="https://wiki.archlinux.org/title/Systemd" title="Systemd">systemd</a> service to change the governor at boot.<br>The configuration file for <em>cpupower</em> is located in <code>/etc/default/cpupower</code>. This configuration file is read by a bash script in <code>/usr/lib/systemd/scripts/cpupower</code> which is activated by <em>systemd</em> with <code>cpupower.service</code>. You may want to <a href="https://wiki.archlinux.org/title/Enable" title="Enable">enable</a> <code>cpupower.service</code> to start at boot.</p></blockquote><p style='text-align: right;'><a href="https://wiki.archlinux.org/title/CPU_frequency_scaling">-- 来自 Arch Wiki</a></p><p><del>香啊，很香啊！</del>这东西太符合我的要求了！直接对CPU性能一顿限制，<del>防止性能过剩</del>。</p><p>先把这软件装好:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo pacman -S cpupower<br></code></pre></td></tr></table></figure><p>然后就可以通过<code>cpupower frequency-info</code>命令来查看当前CPU支持的模式信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">analyzing CPU 1:  <br> driver: intel_pstate  <br> CPUs <span class="hljs-built_in">which</span> run at the same hardware frequency: 1  <br> CPUs <span class="hljs-built_in">which</span> need to have their frequency coordinated by software: 1  <br> maximum transition latency:  Cannot determine or is not supported.  <br> hardware limits: 400 MHz - 3.90 GHz  <br> available cpufreq governors: performance powersave  <br> current policy: frequency should be within 400 MHz and 1.30 GHz.  <br>                 The governor <span class="hljs-string">&quot;powersave&quot;</span> may decide <span class="hljs-built_in">which</span> speed to use  <br>                 within this range.  <br> current CPU frequency: Unable to call hardware  <br> current CPU frequency: 700 MHz (asserted by call to kernel)  <br> boost state support:  <br>   Supported: <span class="hljs-built_in">yes</span>  <br>   Active: <span class="hljs-built_in">yes</span><br></code></pre></td></tr></table></figure><p><del>好啊，很好啊！</del>可以在<code>400 MHz - 3.90 GHz</code>之间变频，支持<code>performance</code>和<code>powersave</code>两个策略。</p><blockquote><p>但是我测了一下，<code>powersave</code>策略似乎并没有什么效果，所以不如直接限频。</p></blockquote><p>然后我们<del>请那个男人</del>来看一看它限频的用法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">man cpupower-frequency-set<br></code></pre></td></tr></table></figure><p>嗯～～很好，用法和参数都给的很清楚。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">OPTIONS  <br>      -d --min &lt;FREQ&gt;  <br>             new minimum CPU frequency the governor may <span class="hljs-keyword">select</span>.  <br>      -u --max &lt;FREQ&gt;  <br>             new maximum CPU frequency the governor may <span class="hljs-keyword">select</span>.  <br>      -g --governor &lt;GOV&gt;  <br>             new cpufreq governor.  <br>      -f --freq &lt;FREQ&gt;  <br>             specific frequency to be <span class="hljs-built_in">set</span>. Requires userspace governor to be available and loaded.  <br>      -r --related  <br>             modify all hardware-related CPUs at the same time  <br>      REMARKS  <br>      By default values are applied on all cores. How to modify single core configurations is described <span class="hljs-keyword">in</span> the cpupower(1) manpage <span class="hljs-keyword">in</span> the --cpu  option  section.  <br>      The -f FREQ, --freq FREQ parameter cannot be combined with any other parameter.  <br>      FREQuencies can be passed <span class="hljs-keyword">in</span> Hz, kHz (default), MHz, GHz, or THz by postfixing the value with the wanted unit name, without any space (frequency <span class="hljs-keyword">in</span> kHz =^ Hz * 0.001 =^ MHz * 1000 =^ GHz * 1000000).  <br>      On Linux kernels up to 2.6.29, the -r or --related parameter is ignored.<br></code></pre></td></tr></table></figure><p>那，我们直接开<del><em>炫</em></del>限:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo cpupower frequency-set -u 700MHZ<br></code></pre></td></tr></table></figure><p>很快啊，桌面上的KDE小组件显示的频率就超不过700MHz了。<br>如果要恢复，先记住上面<code>cpupower frequency-info</code>输出的提示第六行，就是CPU最高支持的频率，我这里是3.9GHz。那就把最大频率重新设置到3.9就行:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo cpupower frequency-set -u 3.9GHz<br></code></pre></td></tr></table></figure><blockquote><p><strong>注意</strong><br>这里的修改都是仅对本次开机有效，重启需要重新设置。</p></blockquote><p><em><strong>如何在开机的时候自动限频呢？</strong></em><br>回忆一下上面<code>Arch Wiki</code>说的，默认配置文件在<code>/etc/default/cpupower</code>下，当启用服务<code>cpupower</code>之后开机就会去读配置限频。<br>这个是默认配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Define CPUs governor  </span><br><span class="hljs-comment"># valid governors: ondemand, performance, powersave, conservative, userspace.  </span><br><span class="hljs-comment">#governor=&#x27;ondemand&#x27;  </span><br>  <br><span class="hljs-comment"># Limit frequency range  </span><br><span class="hljs-comment"># Valid suffixes: Hz, kHz (default), MHz, GHz, THz  </span><br><span class="hljs-comment">#min_freq=&quot;2.25GHz&quot;  </span><br><span class="hljs-comment">#max_freq=&quot;3GHz&quot;  </span><br>  <br><span class="hljs-comment"># Specific frequency to be set.  </span><br><span class="hljs-comment"># Requires userspace governor to be available.  </span><br><span class="hljs-comment"># Do not set governor field if you use this one.  </span><br><span class="hljs-comment">#freq=  </span><br>  <br><span class="hljs-comment"># Utilizes cores in one processor package/socket first before processes are    </span><br><span class="hljs-comment"># scheduled to other processor packages/sockets.  </span><br><span class="hljs-comment"># See man (1) CPUPOWER-SET for additional details.  </span><br><span class="hljs-comment">#mc_scheduler=  </span><br>  <br><span class="hljs-comment"># Utilizes thread siblings of one processor core first before processes are  </span><br><span class="hljs-comment"># scheduled to other cores. See man (1) CPUPOWER-SET for additional details.  </span><br><span class="hljs-comment">#smp_scheduler=  </span><br>  <br><span class="hljs-comment">#  Sets a register on supported Intel processore which allows software to convey  </span><br><span class="hljs-comment"># its policy for the relative importance of performance versus energy savings to  </span><br><span class="hljs-comment"># the  processor. See man (1) CPUPOWER-SET for additional details.  </span><br><span class="hljs-comment">#perf_bias=  </span><br>  <br><span class="hljs-comment"># vim:set ts=2 sw=2 ft=sh et:</span><br></code></pre></td></tr></table></figure><p>我们依葫芦画瓢，按文件的第七、第八行，填入<code>max_freq=&quot;700MHz&quot;</code>后保存退出重启开机，频率就被默认限制到700Mhz了！</p><p>至此，这台苏菲总算变得轻快好使了，让它机如其名，正真的GO起来。</p><h1 id="后话：死机了咋整"><a href="#后话：死机了咋整" class="headerlink" title="后话：死机了咋整"></a>后话：死机了咋整</h1><p>记不记得以前山寨机和电视机顶盒，总会有一个<code>reset</code>按钮，当机器死机的时候拿根牙<del><em>吴</em></del>签戳一下，设备就会强制重启？<br><em><strong>对你没看错，Linux内核也给我们提供了这个功能！</strong></em><br><del><em>对于表面走3这电子垃圾再合适不过了</em></del></p><p>根据<a href="https://wiki.archlinux.org/title/Keyboard_shortcuts">Arch Wiki</a>上的说法，我们只要启用<code>sysrq</code>这个调用，就可以实现一些用户主动触发的控制内核行为:</p><blockquote><p>Kernel (SysRq)<br>There are several low level shortcuts that are implemented in the kernel via the <code>SysRq</code> key which can be used for debugging and recovering from an unresponsive system. Whenever possible, it is recommended that you use these shortcuts instead of doing a hard shutdown (holding down the power button to completely power off the system).</p></blockquote></br><blockquote><p><strong>提示</strong><br><code>SysRq</code>键被映射到键盘上的<code>Prt Scn</code>功能键上了。注意使用的时候不要按下<code>Fn</code>否则(Surface Go 键盘上)触发的是<code>F8</code>而不是<code>SysRq</code>了。</p></blockquote><p>启用它也很简单，只需要在终端运行<code>sysctl kernel.sysrq=1</code> 或者 <code>echo &quot;1&quot; &gt; /proc/sys/kernel/sysrq</code>，然后就会自动启用这个功能。<br>但每次开机都得输一次，多麻烦！所以贴心的Linus先生给我们提供了一种传递内核参数的方式：将<code>sysrq_always_enabled=1</code>这段内核参数添加到grub里。最后你的grub启动脚本应该是这样的：</p><figure class="highlight plaintext"><figcaption><span>file</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs CFG">menuentry &#x27;Arch Linux - linux-surface&#x27; --class arch --class gnu-linux --class gnu --class os &#123;  <br>       load_video  <br>       set gfxpayload=keep  <br>       insmod gzio  <br>       insmod part_gpt  <br>       insmod fat  <br>       search --no-floppy --fs-uuid --set=root 8848-8848<br>       echo    &#x27;Loading Linux linux-surface ...&#x27;  <br>       linux   /vmlinuz-linux-surface root=UUID=11451419-8848-2333-8848-114514191981 rw loglevel=3 sysrq_always_enabled=1 <br>       echo    &#x27;Loading initial ramdisk ...&#x27;  <br>       initrd  /intel-ucode.img /initramfs-linux-surface.img  <br>&#125;<br></code></pre></td></tr></table></figure><p>这样你每次开机之后都默认启用了SysRq。</p><p>那么问题来了，死机之后怎么调用它来强行重启呢？<br>继续看Arch Wiki给我们的一张表:</p><table><thead><tr><th>Keyboard Shortcut</th><th>Description</th><th>Code to Enable</th><th>Other Functions Enabled</th></tr></thead><tbody><tr><td><code>Alt+SysRq+r</code> Unraw</td><td>Take control of keyboard back from X.</td><td>4</td><td><code>Alt+SysRq+k</code> SAK</td></tr><tr><td><code>Alt+SysRq+e</code> Terminate</td><td>Send SIGTERM to all processes, allowing them to terminate gracefully.</td><td>64</td><td><code>Alt+SysRq+f</code> OOM kill  <br><code>Alt+SysRq+j</code> Thaw</td></tr><tr><td><code>Alt+SysRq+i</code> Kill</td><td>Send SIGKILL to all processes, forcing them to terminate immediately.</td><td></td><td></td></tr><tr><td><code>Alt+SysRq+s</code> Sync</td><td>Flush data to disk.</td><td>16</td><td>-</td></tr><tr><td><code>Alt+SysRq+u</code> Unmount</td><td>Unmount and remount all filesystems read-only.</td><td>32</td><td>-</td></tr><tr><td><code>Alt+SysRq+b</code> Reboot</td><td>Reboot</td><td>128</td><td>-</td></tr></tbody></table><p>也就是说，强制重启只需要按组合键<code>alt 截屏 b</code>就行。<br><del><em>有没有找回一点当年山寨机顶盒的感觉2333</em></del></p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Android12的SplashScreen适配</title>
    <link href="/2023/08/23/4Android12%E7%9A%84SplashScreen%E9%80%82%E9%85%8D-230823/"/>
    <url>/2023/08/23/4Android12%E7%9A%84SplashScreen%E9%80%82%E9%85%8D-230823/</url>
    
    <content type="html"><![CDATA[<p><img src="https://www.gstatic.cn/devrel-devsite/prod/vf01e53c189c374f4b844e7f928194555d40bd3ee38d62d21b64d81f753f3c6a2/android/images/rebrand/lockup.svg" alt="封面"></p><p>废话不多说，直接上代码</p><p>添加到themes.xml中，然后把需要展示的activity的theme设置为这个就行。当然也可以直接在application字段下全局设置，这样冷启动的时候就会展示splashscreen</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;MySplashScreen&quot;</span> <span class="hljs-attr">parent</span>=<span class="hljs-string">&quot;@style/Theme.崩坏丶12306&quot;</span>&gt;</span><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">item</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;windowActionBar&quot;</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">item</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">item</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;windowNoTitle&quot;</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">item</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!-- 启动画面背景颜色 --&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">item</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;android:windowSplashScreenBackground&quot;</span>&gt;</span>@color/material_dynamic_neutral20<span class="hljs-tag">&lt;/<span class="hljs-name">item</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!-- 启动画面中间显示的图标，默认使用应用图标 --&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">item</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;android:windowSplashScreenAnimatedIcon&quot;</span>&gt;</span>@mipmap/appicon<span class="hljs-tag">&lt;/<span class="hljs-name">item</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!-- 启动画面中间显示的图标的背景，如果图标背景不透明则无效 --&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">item</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;android:windowSplashScreenIconBackgroundColor&quot;</span>&gt;</span>@color/material_dynamic_neutral50<span class="hljs-tag">&lt;/<span class="hljs-name">item</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!-- 启动画面启动画面底部的图片。 --&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">item</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;android:windowSplashScreenBrandingImage&quot;</span>&gt;</span>@mipmap/splash12306<span class="hljs-tag">&lt;/<span class="hljs-name">item</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!-- 启动画面在关闭之前显示的时长。最长时间为 1000 毫秒。 --&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">item</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;android:windowSplashScreenAnimationDuration&quot;</span>&gt;</span>1000<span class="hljs-tag">&lt;/<span class="hljs-name">item</span>&gt;</span></span><br><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><p><del><em>好耶又水了一篇文</em></del></p>]]></content>
    
    
    <categories>
      
      <category>Android</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>浅谈Android的PackageManager以及Xposed Hook思路</title>
    <link href="/2023/08/15/3%E6%B5%85%E8%B0%88Android%E7%9A%84PackageManager%E4%BB%A5%E5%8F%8AXposed%20Hook%E6%80%9D%E8%B7%AF-230815/"/>
    <url>/2023/08/15/3%E6%B5%85%E8%B0%88Android%E7%9A%84PackageManager%E4%BB%A5%E5%8F%8AXposed%20Hook%E6%80%9D%E8%B7%AF-230815/</url>
    
    <content type="html"><![CDATA[<p><img src="https://tse3-mm.cn.bing.net/th/id/OIP-C.FpgNGT5YM2WJrH6VabbaiAHaDt?pid=ImgDet&rs=1" alt="封面"></p><h1 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h1><p>最近穹轨挺火<del><em>，室友天天原神启动，搞得我也想来一个星穹铁道启动</em></del>在b站上看到网友整活，CR200J启动以及往12306里疯狂氪金648的流水账单<del><em>，为了蹭个热度就来整个烂活</em></del></p><p>既然是个Android爱好者，那肯定得从Android开发的角度来整这个烂活。于是我就打算通过xposed插件实现在不改包的情况下将包名为<code>com.MobileTiket</code>的<code>铁路12306</code>app图标和名称替换为<code>星穹铁道</code>。</p><h1 id="技术选型"><a href="#技术选型" class="headerlink" title="技术选型"></a>技术选型</h1><p>既然是通过<code>Xposed</code>模块来实现这个功能，那一定要考虑好模块要hook谁。我们要的效果是能在系统桌面、系统设置、最近任务等地方实现这个效果。但又考虑到不同的软件显示图标的逻辑肯定不一样，那我们只能从更底层的地方去进行hook。于是我选择了Android的包管理服务。</p><p><del>当然直接hook<code>android.widget.TextView</code>也不是不行，但样有亿点过于生草</del></p><h1 id="原理分析"><a href="#原理分析" class="headerlink" title="原理分析"></a>原理分析</h1><p>在Android中，一个app想要根据包名获取别的app名称以及图标，通常的思路就是先获取当前上下文里的PackageManager</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs kotin">val pm = packageManager // 获取PackageManager<br>val appinfo = pm.getApplicationInfo(&quot;com.MobileTicket&quot;, flags) // 获取ApplicationInfo<br>binding.testtv.text = appinfo.loadLabel(pm) // 现在建议用的获取应用名的方法<br>binding.testtv.text = pm.getApplicationLabel(appinfo) // 之前常用的，不过现在底层实现也是上面的方法warp了一下<br>binding.testiv.background = pm.getApplicationIcon(appinfo) // 获取应用程序图标<br></code></pre></td></tr></table></figure><h2 id="获取应用程序标题"><a href="#获取应用程序标题" class="headerlink" title="获取应用程序标题"></a>获取应用程序标题</h2><blockquote><p>我们在写app的时候，不难发现在<code>AndroidManifest.xml</code>中的<code>application</code>字段下的<code>android:label</code>键值就是应用程序名称。</p></blockquote><p>对这段代码在Android Studio里逐行ctrl左键，我们发现：<br><code>Context.getPackageManager()</code>调用的是<code>android.content.ContextWrapper</code>下的<code>getPackageManager()</code>方法，这个方法返回的是&#96;android.content.Context.getPackageManager()’方法。看看源码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/** Return PackageManager instance to find global package information. */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> PackageManager <span class="hljs-title function_">getPackageManager</span><span class="hljs-params">()</span>;<br></code></pre></td></tr></table></figure><p>完蛋，这是个抽象方法，因为Xposed无法hook抽象类及以下的抽象方法。不过问题不大，这一步获取到的packagemanager也不包含我们需要query的包名<code>com.MobileTicket</code>。接着下一步！</p><p><code>val appinfo = pm.getApplicationInfo(&quot;com.MobileTicket&quot;, flags)</code>这段代码的<code>getApplicationInfo()</code>方法，位于<code>android.content.pm.PackageManager</code>下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">* Return the label to use for this application.</span><br><span class="hljs-comment">*</span><br><span class="hljs-comment">* <span class="hljs-doctag">@return</span> Returns a &#123;<span class="hljs-doctag">@link</span> CharSequence&#125; containing the label associated with</span><br><span class="hljs-comment">* this application, or its name the  item does not have a label.</span><br><span class="hljs-comment">* <span class="hljs-doctag">@param</span> info The &#123;<span class="hljs-doctag">@link</span> ApplicationInfo&#125; of the application to get the label of.</span><br><span class="hljs-comment">*/</span><br><span class="hljs-meta">@NonNull</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> CharSequence <span class="hljs-title function_">getApplicationLabel</span><span class="hljs-params">(<span class="hljs-meta">@NonNull</span> ApplicationInfo info)</span>;<br></code></pre></td></tr></table></figure><p>我一看，啊完蛋，又是个抽象方法。只能连上adb打断点debug了。<br>一步一步跟踪代码运行过程，发现它运行到了<code>android.app.ApplicationPackageManager</code>下的<code>getApplicationLabel()</code>方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> CharSequence <span class="hljs-title function_">getApplicationLabel</span><span class="hljs-params">(ApplicationInfo info)</span> &#123;<br>    <span class="hljs-keyword">return</span> info.loadLabel(<span class="hljs-built_in">this</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>你看到了啥？对没错，<code>@Override</code>！这是重写了一个父类的方法？重写了谁的？把源码拉到最顶上看看：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ApplicationPackageManager</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">PackageManager</span> &#123;<br></code></pre></td></tr></table></figure><p>好耶，是PackageManager！<br>在经过多次调试之后，发现这个类就是实现了之前的抽象类PackageManager的子类！<br>再深究以下，发现这个<code>getApplicationLabel()</code>方法调用的是形参<code>info</code>的<code>loadLabel()</code>方法，再进行ctrl左键进去看看，发现和上面第三行<code>binding.testtv.text = appinfo.loadLabel(pm)</code>调用的方法一致，位于<code>android.content.pm.PackageItemInfo</code>下。看看源码:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"> <span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Retrieve the current textual label associated with this item.  This</span><br><span class="hljs-comment"> * will call back on the given PackageManager to load the label from</span><br><span class="hljs-comment"> * the application.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> pm A PackageManager from which the label can be loaded; usually</span><br><span class="hljs-comment"> * the PackageManager from which you originally retrieved this item.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> Returns a CharSequence containing the item&#x27;s label.  If the</span><br><span class="hljs-comment"> * item does not have a label, its name is returned.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-meta">@NonNull</span> CharSequence <span class="hljs-title function_">loadLabel</span><span class="hljs-params">(<span class="hljs-meta">@NonNull</span> PackageManager pm)</span> &#123;<br>    <span class="hljs-keyword">if</span> (sForceSafeLabels &amp;&amp; !Objects.equals(packageName, ActivityThread.currentPackageName())) &#123;<br>        <span class="hljs-keyword">return</span> loadSafeLabel(pm, DEFAULT_MAX_LABEL_SIZE_PX, SAFE_STRING_FLAG_TRIM<br>                | SAFE_STRING_FLAG_FIRST_LINE);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-comment">// Trims the label string to the MAX_SAFE_LABEL_LENGTH. This is to prevent that the</span><br>        <span class="hljs-comment">// system is overwhelmed by an enormous string returned by the application.</span><br>        <span class="hljs-keyword">return</span> TextUtils.trimToSize(loadUnsafeLabel(pm), MAX_SAFE_LABEL_LENGTH);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>ok,看来这就是源头的方法了，返回一个CharSequence对象。经过一番debug发现，它返回的就是<code>铁路12306</code>。好，直接对其进行hook就行。它后续会视情况调用<code>loadSafeLabel</code>和<code>loadUnsafeLabel</code>方法，但最终还会返回<code>铁路12306</code>这个CharSequence对象，所以无需再去hook那些子方法了。<del><em>放在一边备用</em></del></p><h2 id="获取应用程序图标"><a href="#获取应用程序图标" class="headerlink" title="获取应用程序图标"></a>获取应用程序图标</h2><blockquote><p>同样在<code>AndroidManifest.xml</code>下的<code>application</code>字段下，有<code>android:icon</code>和<code>android:roundIcon</code>两个键值，对应的分别是方形图标和圆角图标。<del>在此我们不需要对其进行区分，只需要一股脑hook就完事了</del></p></blockquote><p>同样对上面的代码进行ctrl左键，发现<code>pm.getApplicationIcon(appinfo)</code>这段代码调用的源码居然还是个抽象方法:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Retrieve the icon associated with an application.  If it has not defined</span><br><span class="hljs-comment"> * an icon, the default app icon is returned.  Does not return null.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> info Information about application being queried.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> Returns the image of the icon, or the default application icon</span><br><span class="hljs-comment"> * if it could not be found.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span> #getApplicationIcon(String)</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@NonNull</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> Drawable <span class="hljs-title function_">getApplicationIcon</span><span class="hljs-params">(<span class="hljs-meta">@NonNull</span> ApplicationInfo info)</span>;<br></code></pre></td></tr></table></figure><p>但是没关系，我们之前不是发现<code>android.app.ApplicationPackageManager</code>实现了PackageManager类吗？带着假设去它里面翻，果然翻到了实现函数：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span> <span class="hljs-keyword">public</span> Drawable <span class="hljs-title function_">getApplicationIcon</span><span class="hljs-params">(ApplicationInfo info)</span> &#123;<br>    <span class="hljs-keyword">return</span> info.loadIcon(<span class="hljs-built_in">this</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>哦豁，又是老套路调用ApplicationInfo的方法，再ctrl左键进去，发现跟上面的<code>loadLabel</code>一样换汤不换药，还在<code>android.content.pm.PackageItemInfo</code>下的同一个位置：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Retrieve the current graphical icon associated with this item.  This</span><br><span class="hljs-comment"> * will call back on the given PackageManager to load the icon from</span><br><span class="hljs-comment"> * the application.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> pm A PackageManager from which the icon can be loaded; usually</span><br><span class="hljs-comment"> * the PackageManager from which you originally retrieved this item.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> Returns a Drawable containing the item&#x27;s icon.  If the</span><br><span class="hljs-comment"> * item does not have an icon, the item&#x27;s default icon is returned</span><br><span class="hljs-comment"> * such as the default activity icon.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> Drawable <span class="hljs-title function_">loadIcon</span><span class="hljs-params">(PackageManager pm)</span> &#123;<br>    <span class="hljs-keyword">return</span> pm.loadItemIcon(<span class="hljs-built_in">this</span>, getApplicationInfo());<br>&#125;<br></code></pre></td></tr></table></figure><p><del><em>放到一边备用</em></del></p><h1 id="Xposed-hook思路分析"><a href="#Xposed-hook思路分析" class="headerlink" title="Xposed hook思路分析"></a>Xposed hook思路分析</h1><p>好的，既然我们上面已经拿到了几个要hook的方法，我们来总结一下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 获取应用程序名称的方法，位于`android.content.pm.PackageItemInfo`下</span><br><span class="hljs-keyword">public</span> <span class="hljs-meta">@NonNull</span> CharSequence <span class="hljs-title function_">loadLabel</span><span class="hljs-params">(<span class="hljs-meta">@NonNull</span> PackageManager pm)</span> &#123;<br>    <span class="hljs-keyword">if</span> (sForceSafeLabels &amp;&amp; !Objects.equals(packageName, ActivityThread.currentPackageName())) &#123;<br>        <span class="hljs-keyword">return</span> loadSafeLabel(pm, DEFAULT_MAX_LABEL_SIZE_PX, SAFE_STRING_FLAG_TRIM<br>                | SAFE_STRING_FLAG_FIRST_LINE);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-comment">// Trims the label string to the MAX_SAFE_LABEL_LENGTH. This is to prevent that the</span><br>        <span class="hljs-comment">// system is overwhelmed by an enormous string returned by the application.</span><br>        <span class="hljs-keyword">return</span> TextUtils.trimToSize(loadUnsafeLabel(pm), MAX_SAFE_LABEL_LENGTH);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 获取应用程序图标的方法，位于`android.content.pm.PackageItemInfo`下</span><br><span class="hljs-keyword">public</span> Drawable <span class="hljs-title function_">loadIcon</span><span class="hljs-params">(PackageManager pm)</span> &#123;<br>    <span class="hljs-keyword">return</span> pm.loadItemIcon(<span class="hljs-built_in">this</span>, getApplicationInfo());<br>&#125;<br></code></pre></td></tr></table></figure><p>先是编写了测试代码，对这些方法进行无差别的hook:</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs kotlin">findMethod(<span class="hljs-string">&quot;android.content.pm.PackageItemInfo&quot;</span>) &#123;<br>    name == <span class="hljs-string">&quot;loadLabel&quot;</span> &amp;&amp; returnType == CharSequence::<span class="hljs-keyword">class</span>.java &amp;&amp; paramCount == <span class="hljs-number">1</span> &amp;&amp; isNotStatic &amp;&amp; isPublic<br>&#125;.hookBefore &#123;<br>    it.result = newAppLabel<br>&#125;<br><br>findMethod(<span class="hljs-string">&quot;android.content.pm.PackageItemInfo&quot;</span>) &#123;<br>    name == <span class="hljs-string">&quot;loadIcon&quot;</span> &amp;&amp; returnType == Drawable::<span class="hljs-keyword">class</span>.java &amp;&amp; paramCount == <span class="hljs-number">1</span> &amp;&amp; isNotStatic &amp;&amp; isPublic<br>&#125;.hookBefore &#123;<br>    <span class="hljs-keyword">val</span> bytes: ByteArray = Base64.decode(newIconBase64, Base64.DEFAULT)<br>    <span class="hljs-keyword">val</span> myBitmap = BitmapFactory.decodeByteArray(bytes, <span class="hljs-number">0</span>, bytes.size)<br>    it.result = BitmapDrawable(myBitmap)<br>&#125;<br></code></pre></td></tr></table></figure><p>作用域勾选系统框架和系统桌面，发现效果很不错，手机桌面上的图标和应用名都变成了<code>星穹铁道</code><br>好的，我们接下来就是要进行包名过滤，仅对获取<code>com.MobieTicket</code>的请求返回<code>星穹铁道</code>。</p><p>仔细分析上面我们放着备用的AOSP源码里的方法，会发现它在区分包名的时候并不是通过形参，而是通过判断当前类中的<code>packageName</code>变量值来判断你query的是谁的信息。<br>通过全局搜索，能看到在这个文件里有关于这个变量的定义:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Name of the package that this item is in.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> String packageName;<br></code></pre></td></tr></table></figure><p>诶嘿，那我直接用获取当前内存里的<code>packageName</code>对象并转换成<code>String</code>类，判断其中的值是否为<code>com.MobileTicket</code>就行了呗</p><blockquote><p>在debug之后验证了这个猜想<br>开干！加个if条件：</p></blockquote><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-keyword">if</span>(it.thisObject.getObjectAs&lt;String&gt;(<span class="hljs-string">&quot;packageName&quot;</span>, String::<span class="hljs-keyword">class</span>.java) == <span class="hljs-string">&quot;com.MobileTicket&quot;</span>)<br></code></pre></td></tr></table></figure><h1 id="最终的核心代码"><a href="#最终的核心代码" class="headerlink" title="最终的核心代码"></a>最终的核心代码</h1><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">hookIcon</span><span class="hljs-params">(goalPkgName:<span class="hljs-type">String</span>, newIconBase64:<span class="hljs-type">String</span>)</span></span>&#123;<br>    findMethod(<span class="hljs-string">&quot;android.content.pm.PackageItemInfo&quot;</span>) &#123;<br>        name == <span class="hljs-string">&quot;loadIcon&quot;</span> &amp;&amp; returnType == Drawable::<span class="hljs-keyword">class</span>.java &amp;&amp; paramCount == <span class="hljs-number">1</span> &amp;&amp; isNotStatic &amp;&amp; isPublic<br>    &#125;.hookBefore &#123;<br>        <span class="hljs-keyword">if</span> ((it.thisObject.getObjectAs&lt;String&gt;(<span class="hljs-string">&quot;packageName&quot;</span>, String::<span class="hljs-keyword">class</span>.java) == goalPkgName) || (it.thisObject.getObjectAs&lt;String&gt;(<span class="hljs-string">&quot;packageName&quot;</span>, String::<span class="hljs-keyword">class</span>.java) == goalPkgName)) &#123;<br>            <span class="hljs-keyword">val</span> bytes: ByteArray = Base64.decode(newIconBase64, Base64.DEFAULT)<br>            <span class="hljs-keyword">val</span> myBitmap = BitmapFactory.decodeByteArray(bytes, <span class="hljs-number">0</span>, bytes.size)<br>            it.result = BitmapDrawable(myBitmap)<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">hookLabel</span><span class="hljs-params">(goalPkgName:<span class="hljs-type">String</span>, newAppLabel:<span class="hljs-type">String</span>)</span></span>&#123;<br><span class="hljs-comment">/*    findMethod(&quot;android.app.ApplicationPackageManager&quot;) &#123;</span><br><span class="hljs-comment">        name == &quot;getText&quot; &amp;&amp; returnType == CharSequence::class.java &amp;&amp; isNotStatic &amp;&amp; isPublic</span><br><span class="hljs-comment">    &#125;.hookBefore &#123;</span><br><span class="hljs-comment">        if (it.args[0] == goalPkgName) &#123;</span><br><span class="hljs-comment">            it.result = newAppLabel</span><br><span class="hljs-comment">        &#125;</span><br><span class="hljs-comment">    &#125;*/</span><br><br>    findMethod(<span class="hljs-string">&quot;android.content.pm.PackageItemInfo&quot;</span>) &#123;<br>        name == <span class="hljs-string">&quot;loadLabel&quot;</span> &amp;&amp; returnType == CharSequence::<span class="hljs-keyword">class</span>.java &amp;&amp; paramCount == <span class="hljs-number">1</span> &amp;&amp; isNotStatic &amp;&amp; isPublic<br>    &#125;.hookBefore &#123;<br>        <span class="hljs-keyword">val</span> packageName = it.thisObject.getObjectAs&lt;String&gt;(<span class="hljs-string">&quot;packageName&quot;</span>, String::<span class="hljs-keyword">class</span>.java)<br>        <span class="hljs-keyword">if</span> (packageName == goalPkgName) &#123;<br>            it.result = newAppLabel<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="运行效果"><a href="#运行效果" class="headerlink" title="运行效果"></a>运行效果</h1><iframe src="//player.bilibili.com/player.html?aid=960104472&bvid=BV1Yp4y1K7wa" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><h1 id="源码地址"><a href="#源码地址" class="headerlink" title="源码地址"></a>源码地址</h1><p>本项目已开源在<a href="https://github.com/CoolestEnoch/AndroidAppIconSwitcher">Github</a>上</p>]]></content>
    
    
    <categories>
      
      <category>Android</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Panon 的踩坑记录</title>
    <link href="/2023/07/30/2Panon%20%E7%9A%84%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95-230730/"/>
    <url>/2023/07/30/2Panon%20%E7%9A%84%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95-230730/</url>
    
    <content type="html"><![CDATA[<p><img src="https://images.pling.com/img/00/00/54/69/68/1326546/52baef5cc6595c640b44d821ed75c9d3e44c.png" alt="封面"></p><h1 id="Panon？一个Linux下的音频可视化插件！"><a href="#Panon？一个Linux下的音频可视化插件！" class="headerlink" title="Panon？一个Linux下的音频可视化插件！"></a>Panon？一个Linux下的音频可视化插件！</h1><p><a href="https://github.com/rbn42/panon">原作者项目地址</a><br>github的readme里说要装依赖，然后去KDE小挂件市场里下载<br>在最近一次的Arch Linux更新之后，我按作者的操作去做了…</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo pacman -S qt5-websockets python-docopt python-numpy python-pyaudio python-cffi python-websockets<br>paru -S plasma5-applets-panon<br></code></pre></td></tr></table></figure><p>啪，报错！我一看，啊原来是几个pip库缺失。直接<code>pip install</code>一下就ok了。但是装好之后在音频数据源里不显示为的音频设备？</p><h1 id="Pulse-Audio音频数据源不显示设备"><a href="#Pulse-Audio音频数据源不显示设备" class="headerlink" title="Pulse Audio音频数据源不显示设备"></a>Pulse Audio音频数据源不显示设备</h1><p>pavucontrol里，音频设置里，系统设置里，按输入流筛选，啥都没有？！<br>排查了一下，这些依赖全装到我python的<code>venv</code>里了，但是panon默认引的是<code>cd /usr/lib/python3.11/site-packages</code>里的pip包，即使我把<code>source /path/to/my/venv/bin/active</code>添加到了<code>.zshrc</code>中重启还是没有用。</p><h1 id="目前我的解决方案"><a href="#目前我的解决方案" class="headerlink" title="目前我的解决方案"></a>目前我的解决方案</h1><p>先临时在<code>.zshrc</code>中取消注释<code>source /path/to/my/venv/bin/active</code><br>重装所有依赖<br>然后panon就可以正常拾取pulseaudio的音频了<br>然后再把<code>venv</code>的环境变量加回<code>.zshrc</code>里</p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Waydroid的碎碎念</title>
    <link href="/2023/07/30/1Waydroid%E7%9A%84%E7%A2%8E%E7%A2%8E%E5%BF%B5-230730/"/>
    <url>/2023/07/30/1Waydroid%E7%9A%84%E7%A2%8E%E7%A2%8E%E5%BF%B5-230730/</url>
    
    <content type="html"><![CDATA[<p><img src="https://www.gitbook.com/cdn-cgi/image/width=256,dpr=2,height=40,fit=contain,format=auto/https%3A%2F%2F2140589054-files.gitbook.io%2F~%2Ffiles%2Fv0%2Fb%2Fgitbook-legacy-files%2Fo%2Fspaces%252F-MiYFr8anWJnZu5dVlhr%252Favatar-rectangle-1630538785250.png%3Fgeneration%3D1630538786012033%26alt%3Dmedia" alt="封面"><br><del>安卓系统，已经融入了我们的生活，那怎么在电脑上运行安卓系统呢，小编</del><br><em><del>(好了请停止你的营销号模式</del></em></p><p>当然这是基于我的arch linux系统进行操作2333<br>至于为什么不配置Nvidia显卡相关设置，问就是Fa♂️Q Nvidia（逃<br>平时基本都是把n卡屏蔽了，省心hhh</p><h1 id="将显示管理器从X11迁移到Wayland上"><a href="#将显示管理器从X11迁移到Wayland上" class="headerlink" title="将显示管理器从X11迁移到Wayland上"></a>将显示管理器从X11迁移到Wayland上</h1><p>从X11迁到wayland上，当然不会山删掉x11,这样在sddm登陆的地方可以选择用wayland来开桌面</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">pacman -S plasma-wayland-session plasma-wayland-protocols qt5-wayland qt6-wayland xorg-xwayland<br></code></pre></td></tr></table></figure><p>后面就是引用<a href="https://ivonblog.com/posts/archlinux-waydroid">Ivon大佬的一些操作了</a></p><h1 id="迁移内核"><a href="#迁移内核" class="headerlink" title="迁移内核"></a>迁移内核</h1><p><strong>迁移到linux-zen内核</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo pacman -S linux-zen linux-zen-headers<br></code></pre></td></tr></table></figure><p><strong>安装binder_linux并且加载到内核</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">paru -S binder_linux-dkms<br>sudo modprobe binder_linux <span class="hljs-comment"># 现在不需要这样手动启动模块了</span><br></code></pre></td></tr></table></figure><h1 id="安装Waydroid"><a href="#安装Waydroid" class="headerlink" title="安装Waydroid"></a>安装Waydroid</h1><p><strong>装依赖</strong><br><em><strong>如果你执意不配置venv的话，先执行这段指令再继续，不然pip会报错:</strong></em><code>sudo mv /usr/lib/python3.x/EXTERNALLY-MANAGED /usr/lib/python3.x/EXTERNALLY-MANAGED.bk</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">paru -S python-gbinder python-pyclip dbus-python xclip wl-clipboard mailcap python-pgi<br>pip install PyGObject dbus-python<br></code></pre></td></tr></table></figure><p>建议先开一个新的venv然后在其中操作完成后，再将该venv的site-packages整个丢到<code>/usr/lib/python3.xx/site-packages/</code>下，然后再恢复source你自己的venv。<br>如果后续系统更新的时候出现<code>python-gobject</code>和<code>python-cairo</code>说<code>file already exist</code>问题，强制覆盖安装一下以下的包然后就可以正常系统更新了：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo pacman -S python-gobject python-cairo --overwrite &#x27;*&#x27;<br></code></pre></td></tr></table></figure><p><strong>装Waydroid</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">paru -S waydroid waydroid-image<br></code></pre></td></tr></table></figure><p><em><strong>记得去<code>grub</code>里添加内核启动参数<code>psi=1</code>要不然waydroid启动会报错<code>Command failed: % /usr/lib/waydroid/data/scripts/waydroid-net.sh start</code></strong></em></p><p><strong>第一次启动的话，得先init一下容器</strong><br>不过我是不打算弄带gms的，苏菲性能实在太差(悲</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo waydroid init <span class="hljs-comment"># for non Gapps</span><br>sudo waydroid init -s GAPPS -f <span class="hljs-comment"># for Gapps</span><br></code></pre></td></tr></table></figure><p>当然如果想要重新初始化waydroid<del>就比如我之前闲得无聊弄了个安卓13的然后发现没<code>libhoudini</code>就想保数据回退</del>，就这么做</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo waydroid init -f<br></code></pre></td></tr></table></figure><p><strong>开一次机试一下</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl start waydroid-container<br>waydroid show-full-ui<br></code></pre></td></tr></table></figure><p><strong>安装libhoudini</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> --depth=1 https://github.com/casualsnek/waydroid_script<br><span class="hljs-built_in">cd</span> waydroid_script<br>sudo python3 -m pip install -r requirements.txt<br><span class="hljs-built_in">cd</span> waydroid_script<br>sudo python3 main.py<br></code></pre></td></tr></table></figure><p>然后按照命令行的提示来操作就行</p><p>当执行完成后，就可以快乐的玩耍了</p><h1 id="一些基本常用的操作"><a href="#一些基本常用的操作" class="headerlink" title="一些基本常用的操作"></a>一些基本常用的操作</h1><p><strong>开机</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">waydroid show-full-ui<br></code></pre></td></tr></table></figure><p><strong>关机</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo waydroid session stop &amp;&amp; sudo waydroid container stop &amp;&amp; sudo systemctl stop waydroid-container<br></code></pre></td></tr></table></figure><p><strong>以root身份进adb</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo waydroid shell<br></code></pre></td></tr></table></figure><p><strong>连接adb网络调试</strong><br>这东西会在你的电脑里再nat出一个子网，然后waydroid的ip被静态分配到<code>192.168.240.112</code>上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">adb connect 192.168.240.112<br></code></pre></td></tr></table></figure><h1 id="性能调优"><a href="#性能调优" class="headerlink" title="性能调优"></a>性能调优</h1><p><strong>对应用进行dex2oat优化</strong><br><em>苏菲太需要dex2oat了要不然卡的很</em><br>如果你在带有root权限的安卓的shell中…</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 使用everything模式编译所有应用</span><br>cmd package compile -m everything -f -a<br><span class="hljs-comment"># 仅针对星穹铁道使用everything模式编译</span><br>cmd package compile -m everything -f com.MobileTicket<br></code></pre></td></tr></table></figure><p>如果你<strong>不</strong>在安卓的shell中…</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 使用everything模式编译所有应用</span><br>adb shell cmd package compile -m everything -f -a<br><span class="hljs-comment"># 仅针对星穹铁道使用everything模式编译</span><br>adb shell cmd package compile -m everything -f com.MobileTicket<br></code></pre></td></tr></table></figure><p><strong>可选编译类型</strong><br><code>interpret-only</code>: 不编译，仅靠解释运行应用，效率很低，占用空间最小；<br><code>space</code>: 仅编译一小部分函数，其余不编译，占用空间较小；<br><code>balanced</code>: 在占用空间与运行效率上做一平衡；<br><code>speed-profile</code>: 将配置文件中标明的函数编译一遍，这些函数可能是热点函数，为部分编译，频繁使用的功能运行效率会变高，不常使用的效率便会很低；<br><code>speed</code>: 将程序中所有函数都编译一遍，效率和占用空间均较高；<br><code>everything</code>: 译所有代码，效率最高，能耗较低，占用空间最高。<br><a href="https://my.oschina.net/ososchina/blog/4818813">细节见这篇文章</a></p><p><strong>激活冰箱</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">adb shell dpm set-device-owner com.catchingnow.icebox/.receiver.DPMReceiver<br></code></pre></td></tr></table></figure><p><strong>开启全局小窗模式</strong><br>这样你可以跟win11的WSA一样体验安卓程序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">waydroid prop <span class="hljs-built_in">set</span> persist.waydroid.multi_windows <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><h1 id="一些sao操作"><a href="#一些sao操作" class="headerlink" title="一些sao操作"></a>一些sao操作</h1><p>Waydroid的内部存储是被映射到你的<code>home</code>目录下的，具体在这个目录:</p><blockquote><p>~&#x2F;.local&#x2F;share&#x2F;waydroid&#x2F;data&#x2F;media&#x2F;0</p></blockquote><p>你发现了啥？对的没错，它甚至很慷慨的把整个<code>/data</code>分区给映射出来了，也就是<code>~/.local/share/waydroid/data</code>这个目录<br>不过里面的东西所属的用户组跟你电脑的用户组不是同一个，可以通过<code>ls -al</code>进行查看<br>但是你可以以<code>root</code>用户的身份去对它进行一些读写，如果要让waydroid可以正常读写你改过的东西的话，还得记得把文件权限改回去哈<br><strong>可以用这个命令将目录下所有文件(夹)的权限全改成安卓默认</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">chown</span> -R 10138 . &amp;&amp; sudo <span class="hljs-built_in">chgrp</span> -R 10138 . &amp;&amp; sudo <span class="hljs-built_in">chmod</span> -R 755 ./*<br></code></pre></td></tr></table></figure><h1 id="卸载waydroid"><a href="#卸载waydroid" class="headerlink" title="卸载waydroid"></a>卸载waydroid</h1><p>停止容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo waydroid session stop &amp;&amp; sudo systemctl stop waydroid-container<br></code></pre></td></tr></table></figure><p>删除容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">paru -Rs waydroid<br>sudo <span class="hljs-built_in">rm</span> -rf /var/lib/waydroid /home/.waydroid ~/waydroid ~/.share/waydroid ~/.local/share/applications/*aydroid* ~/.local/share/waydroid<br></code></pre></td></tr></table></figure><p>注意，最后<code>rm</code>的那个目录会把内部存储给清空，如果要备份数据，记得按上一步提到的去备份资料再删除。</p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>世界安好</title>
    <link href="/2023/07/20/0%E4%B8%96%E7%95%8C%E5%AE%89%E5%A5%BD-230720/"/>
    <url>/2023/07/20/0%E4%B8%96%E7%95%8C%E5%AE%89%E5%A5%BD-230720/</url>
    
    <content type="html"><![CDATA[<p>记录一下第一次搭typecho XD</p><p>用的特效来自<a href="https://blog.csdn.net/ungoing/article/details/125071691">这里</a>和<a href="https://blog.csdn.net/m0_53321320/article/details/124241666">这里</a>, 将html和js代码放入footer.php的body标签内最后即可。</p><p><a href="https://gitee.com/HoerMouse">HoerMouse: 鼠标插件</a><br><a href="https://custom-cursor.com/en/collection/minecraft">MC风格指针库</a></p><p><a href="https://github.com/DIYgod/APlayer">APlayer: 可选作用域的音乐播放器</a><br><a href="https://github.com/chenxing640/QPlayer">QPlayer: 全局的音乐播放器</a><br><a href="https://paugram.com/coding/add-poster-girl-with-plugin.html#title-3">Pio: 看板娘</a></p><blockquote><p><a href="https://docs.paul.ren/pio/#/?id=%e4%ba%a4%e4%ba%92%e6%8f%90%e7%a4%ba%e6%89%a9%e5%b1%95">看板娘文档</a><br>Pio交互提示扩展:</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;welcome&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;你好，欢迎来到Enoch的小站&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;touch&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;我要恰大米！&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;有大米吗？&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;提款机我要吃大葱！&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;home&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;点击这里回到首页！&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;link&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https://coolenoch.ink&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;close&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;QWQ 有缘再会吧~&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;referer&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;你通过 %t 来到了这里&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;custom&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>        <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;selector&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;.comment-form&quot;</span><br>        <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p><a href="https://github.com/xiamuguizhi/GoTop">GoTop: 返回顶部插件</a></p><p><strong>离开网页提示</strong><br> 在footer.php中编辑</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 离开网页提示 start --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://code.jquery.com/jquery-3.6.0.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> <span class="hljs-title class_">OriginTitile</span> = <span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span>,</span><br><span class="language-javascript">            titleTime;</span><br><span class="language-javascript">        <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;visibilitychange&quot;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">document</span>.<span class="hljs-property">hidden</span>) &#123;</span><br><span class="language-javascript">                $(<span class="hljs-string">&#x27;[rel=&quot;icon&quot;]&#x27;</span>).<span class="hljs-title function_">attr</span>(<span class="hljs-string">&quot;href&quot;</span>, <span class="hljs-string">&quot;https://img1.baidu.com/it/u=2168395802,233412699&amp;fm=253&amp;fmt=auto&amp;app=138&amp;f=JPEG?w=500&amp;h=526&quot;</span>);</span><br><span class="language-javascript">                <span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span> = <span class="hljs-string">&quot;页面已崩溃！点击恢复！&quot;</span>;</span><br><span class="language-javascript">                <span class="hljs-built_in">clearTimeout</span>(titleTime);</span><br><span class="language-javascript">            &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="language-javascript">                $(<span class="hljs-string">&#x27;[rel=&quot;icon&quot;]&#x27;</span>).<span class="hljs-title function_">attr</span>(<span class="hljs-string">&quot;href&quot;</span>, <span class="hljs-string">&quot;https://user-images.githubusercontent.com/22438240/258717075-1c071b29-c4d5-4f75-9ca6-3cdcf9b73151.svg&quot;</span>);</span><br><span class="language-javascript">                <span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span> = <span class="hljs-string">&quot;(/≧▽≦/)咦！又好了！ &quot;</span> + <span class="hljs-title class_">OriginTitile</span>;</span><br><span class="language-javascript">                titleTime = <span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">                    <span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span> = <span class="hljs-title class_">OriginTitile</span>;</span><br><span class="language-javascript">                &#125;, <span class="hljs-number">2000</span>);</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 离开网页提示 end --&gt;</span><br></code></pre></td></tr></table></figure><p><strong>主页不显示文章全文</strong><br>将<code>index.php</code>和<code>archive.php</code>中<code>阅读全文</code>所在div周围代码改成如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php">&lt;div <span class="hljs-class"><span class="hljs-keyword">class</span>=&quot;<span class="hljs-title">post</span>-<span class="hljs-title">content</span>&quot; <span class="hljs-title">itemprop</span>=&quot;<span class="hljs-title">articleBody</span>&quot;&gt;</span><br><span class="hljs-class">&lt;?<span class="hljs-title">php</span> <span class="hljs-title">replaceTag</span>($<span class="hljs-title">this</span>-&gt;<span class="hljs-title">excerpt</span>(100)); ?&gt;</span><br><span class="hljs-class">&lt;<span class="hljs-title">div</span> <span class="hljs-title">text</span>-<span class="hljs-title">center</span> <span class="hljs-title">class</span>=&quot;<span class="hljs-title">post</span>-<span class="hljs-title">button</span>&quot;&gt;</span><br><span class="hljs-class">&lt;<span class="hljs-title">a</span> <span class="hljs-title">href</span>=&quot;&lt;?<span class="hljs-title">php</span> $<span class="hljs-title">this</span>-&gt;<span class="hljs-title">permalink</span>() ?&gt;&quot;&gt;</span><br><span class="hljs-class">&lt;?<span class="hljs-title">php</span> <span class="hljs-title">_e</span>(&#x27;-   阅读全文   -&#x27;); ?&gt;</span><br><span class="hljs-class">&lt;/<span class="hljs-title">a</span>&gt;</span><br><span class="hljs-class">&lt;/<span class="hljs-title">div</span>&gt;</span><br><span class="hljs-class">&lt;/<span class="hljs-title">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>(主要是添加第二行代码<code>&lt;?php replaceTag($this-&gt;excerpt(100)); ?&gt;</code>；或者超过200字就显示为省略号<code>&lt;?php $this-&gt;excerpt(200, &#39;...&#39;); ?&gt;</code>或者直接不显示概要<code>&lt;?php $this-&gt;excerpt(); ?&gt;</code>)</p><p><strong>石蒜摇～～～</strong><br>添加到<code>控制台</code>-<code>外观</code>-<code>设置外观</code>-<code>自定义CSS代码</code>中<br>代码来自<a href="https://github.com/dsrkafuu/sakana-widget">itorr&#x2F;sakana</a>, 我稍微修改了一下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.sakana-box</span>&#123;</span><br><span class="language-css">  <span class="hljs-attribute">position</span>: fixed;</span><br><span class="language-css">  <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;</span><br><span class="language-css">  <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span>;</span><br><span class="language-css">  <span class="hljs-attribute">transform-origin</span>: <span class="hljs-number">0%</span> <span class="hljs-number">100%</span>; <span class="hljs-comment">/* 从左下开始变换 */</span></span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;sakana-box&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&#x27;position:fixed; z-index:999; left:0; bottom:0;&#x27;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/sakana@1.0.8&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-comment">// 取消静音</span></span><br><span class="language-javascript"><span class="hljs-title class_">Sakana</span>.<span class="hljs-title function_">setMute</span>(<span class="hljs-literal">false</span>);</span><br><span class="language-javascript"><span class="hljs-comment">// 启动</span></span><br><span class="language-javascript"><span class="hljs-title class_">Sakana</span>.<span class="hljs-title function_">init</span>(&#123;</span><br><span class="language-javascript">  <span class="hljs-attr">el</span>:         <span class="hljs-string">&#x27;.sakana-box&#x27;</span>,     <span class="hljs-comment">// 启动元素 node 或 选择器</span></span><br><span class="language-javascript">  <span class="hljs-attr">scale</span>:      <span class="hljs-number">.5</span>,                <span class="hljs-comment">// 缩放倍数</span></span><br><span class="language-javascript">  <span class="hljs-attr">canSwitchCharacter</span>: <span class="hljs-literal">true</span>,      <span class="hljs-comment">// 允许换角色</span></span><br><span class="language-javascript">&#125;);</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>或者将这段代码添加到<code>footer.php</code>中也行:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- Sakana start --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;sakana-box&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&#x27;position:fixed; z-index:999; left:0; bottom:0; transform-origin: 0% 100%; /* 从左下开始变换 */&#x27;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/sakana@1.0.8&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-comment">// 取消静音</span></span><br><span class="language-javascript"><span class="hljs-title class_">Sakana</span>.<span class="hljs-title function_">setMute</span>(<span class="hljs-literal">false</span>);</span><br><span class="language-javascript"><span class="hljs-comment">// 启动</span></span><br><span class="language-javascript"><span class="hljs-title class_">Sakana</span>.<span class="hljs-title function_">init</span>(&#123;</span><br><span class="language-javascript">  <span class="hljs-attr">el</span>:         <span class="hljs-string">&#x27;.sakana-box&#x27;</span>,     <span class="hljs-comment">// 启动元素 node 或 选择器</span></span><br><span class="language-javascript">  <span class="hljs-attr">scale</span>:      <span class="hljs-number">.5</span>,                <span class="hljs-comment">// 缩放倍数</span></span><br><span class="language-javascript">  <span class="hljs-attr">canSwitchCharacter</span>: <span class="hljs-literal">true</span>,      <span class="hljs-comment">// 允许换角色</span></span><br><span class="language-javascript">&#125;);</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-comment">&lt;!-- Sakana end --&gt;</span><br></code></pre></td></tr></table></figure><p><strong>模糊的背景图片</strong><br>添加到footer.php中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 模糊背景 start --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;backgroundDiv&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position: fixed;top: 0;left: 0;width: 100%;height: 100%;background-image: url(&#x27;/url/to/your.jpg&#x27;);background-size: cover;background-position: center;filter: blur(10px);z-index: -1;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 模糊背景 end--&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/1970/01/01/hello-world-hexo/"/>
    <url>/1970/01/01/hello-world-hexo/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <categories>
      
      <category>Default</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
